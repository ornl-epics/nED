include "BasePlugin.include"

record(bo, "$(P)Enable")
{
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Enable")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}

record(stringout, "$(P)FilePath")
{
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT))FilePath")
}
record(bo, "$(P)ErrorPktsEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ErrorPktsEn")
    field(PINI, "YES")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)RtdlPktsEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))RtdlPktsEn")
    field(PINI, "YES")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)DataPktsEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))DataPktsEn")
    field(PINI, "YES")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)CmdPktsEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))CmdPktsEn")
    field(PINI, "YES")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)SavedCount")
{
    field(DESC, "Num saved packets")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SavedCount")
    field(VAL,  "0")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}
record(longin, "$(P)NotSavedCount")
{
    field(DESC, "Num not saved packets error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))NotSavedCount")
    field(VAL,  "0")
    field(PINI, "YES")
    field(HIGH, "1")
    field(HSV,  "MAJOR")
    field(SCAN, "I/O Intr")
}
record(bo, "$(P)Overwrite")
{
    info(autosaveFields, "VAL")
    field(DESC, "Overwrite existing file")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Overwrite")
    field(PINI, "YES")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(mbbo, "$(P)DataType")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Filter data type")
    field(OUT,  "@asyn($(PORT))DataType")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "All")
    field(ONVL, "1")
    field(ONST, "Meta data")
    field(TWVL, "2")
    field(TWST, "Pixel")
    field(THVL, "16")
    field(THST, "LPSD raw")
    field(FRVL, "17")
    field(FRST, "LPSD verbose")
    field(FVVL, "18")
    field(FVST, "ACPC XY PS")
    field(SXVL, "19")
    field(SXST, "ACPC raw")
    field(SVVL, "20")
    field(SVST, "ACPC verbose")
    field(EIVL, "21")
    field(EIST, "AROC raw")
    field(NIVL, "22")
    field(NIST, "BNL XY")
    field(TEVL, "23")
    field(TEST, "BNL raw")
    field(ELVL, "24")
    field(ELST, "BNL verbose")
    field(TVVL, "25")
    field(TVST, "CROC raw")
    field(TTVL, "26")
    field(TTST, "CROC verbose")
}
