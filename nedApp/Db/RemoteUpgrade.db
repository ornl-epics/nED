record(mbbi, "$(P)UpgradeStatus")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Remote upgrade status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))UpgradeStatus")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(ZRVL, "0")
    field(ZRST, "Not supported")
    field(ONVL, "1")
    field(ONST, "Not ready")
    field(TWVL, "2")
    field(TWST, "Ready")
    field(THVL, "3")
    field(THST, "File loaded")
    field(FRVL, "4")
    field(FRST, "In progress")
    field(FVVL, "5")
    field(FVST, "Done")
    field(SXVL, "6")
    field(SXST, "Error")
    field(SVVL, "7")
    field(SVST, "User aborted")
}
record(longin, "$(P)UpgradeSize")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Total firmware size in bytes")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))UpgradeSize")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(EGU,  "B")
}
record(longin, "$(P)UpgradePosisition")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Bytes sent to remote party")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))UpgradePosisition")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(EGU,  "B")
}
record(longout, "$(P)UpgradeChunkSize")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DESC, "Number of bytes per packet")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))UpgradeChunkSize")
    field(EGU,  "B")
    field(ASG,  "BEAMLINE")
}
record(waveform, "$(P)UpgradeFile")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "New firmware file to be programed")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT))UpgradeFile")
    field(FTVL, "CHAR")
    field(NELM, "1024")
    field(ASG,  "BEAMLINE")
}
record(mbbo, "$(P)UpgradeCmd")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Remote upgrade command")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))UpgradeCmd")
    field(ZRVL, "0")
    field(ZRST, "Abort")
    field(ONVL, "1")
    field(ONST, "Start")
}
