include "BasePlugin.include"

record(bo, "$(P)Enable")
{
    info(archive, "Monitor, 00:10:00")
    info(autosaveFields, "VAL")
    field(ZSV,  "MAJOR")
    field(PINI, "YES")
    field(FLNK, "$(P)StatusCalc")
}
record(calc, "$(P)StatusCalc")
{
    field(INPA, "$(P)ErrImport.SEVR")
    field(INPB, "$(P)Enable.SEVR")
    field(INPC, "$(P)FfMode.SEVR")
    field(CALC, "(A+B+C)=0")
    field(FLNK, "$(P)Status")
}
record(bi, "$(P)Status")
{
    field(DESC, "FlatField plugin status")
    field(ZNAM, "Not OK")
    field(ONAM, "OK")
    field(ZSV,  "MAJOR")
    field(INP,  "$(P)StatusCalc")
}
record(waveform, "$(P)ImportReport")
{
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))ImportReport")
    field(FTVL, "CHAR")
    field(NELM, "1024")
    field(PINI, "YES")
}
record(waveform, "$(P)ImportDir")
{
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))ImportDir")
    field(FTVL, "CHAR")
    field(NELM, "1024")
    field(PINI, "YES")
}
record(mbbi, "$(P)ErrImport")
{
    field(DESC, "Error importing file")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrImport")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(ZRVL, "0")
    field(ZRST, "No error")
    field(ONVL, "1")
    field(ONST, "No file imported")
    field(ONSV, "MAJOR")
    field(TWVL, "2")
    field(TWST, "File parse error")
    field(TWSV, "MAJOR")
    field(THVL, "3")
    field(THST, "Memory alloc err")
    field(THSV, "MAJOR")
    field(FRVL, "4")
    field(FRST, "Double position")
    field(FRSV, "MAJOR")
    field(FVVL, "5")
    field(FVST, "Bad file format")
    field(FVSV, "MAJOR")
    field(SXVL, "6")
    field(SXST, "Table size mismatch")
    field(SXSV, "MAJOR")
    field(FLNK, "$(P)StatusCalc")
}
record(longin, "$(P)CntError")
{
    field(DESC, "Num of unknown-error pixels")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntError")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(PINI, "YES")
}
record(longin, "$(P)CntUnmap")
{
    field(DESC, "Number unmapped pixels")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntUnmap")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(PINI, "YES")
}
record(longin, "$(P)CntSplit")
{
    field(DESC, "Number of splits occurred")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntSplit")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(PINI, "YES")
}
record(bo, "$(P)ResetCnt")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Reset counters")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ResetCnt")
    field(ZNAM, "None")
    field(ONAM, "Reset")
}
record(bo, "$(P)FfMode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Enable flat-field transformation")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))FfMode")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZNAM, "Pass thru all")
    field(ONAM, "Transform neutrons")
    field(ZSV,  "MAJOR")
    field(FLNK, "$(P)StatusCalc")
}
record(longout, "$(P)XyFractWidth")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "X,Y UQm.n fraction width")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))XyFractWidth")
    field(PINI, "YES")
    field(HOPR, "30")
}
record(longout, "$(P)PsFractWidth")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Photo sum UQm.n fraction width")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))PsFractWidth")
    field(PINI, "YES")
    field(HOPR, "30")
}
record(ao, "$(P)XyRange")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Max X,Y values from detector")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT))XyRange")
    field(PINI, "YES")
    field(HOPR, "512")
    field(LOPR, "1")
    field(PREC, "2")
}
