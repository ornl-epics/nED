include "BasePlugin.include"

record(bo, "$(P)Enable")
{
    info(autosaveFields, "VAL")
    field(PINI,  "YES")
}
record(bo, "$(P)CalcEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Toggle position calculation")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))CalcEn")
    field(VAL,  "1")
    field(PINI, "YES")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(longin, "$(P)CntSplit")
{
    field(DESC, "Number of splits occurred")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntSplit")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(PINI, "YES")
}
record(bo, "$(P)ResetCnt")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Reset counters")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ResetCnt")
    field(ZNAM, "None")
    field(ONAM, "Reset")
}
record(calcout, "$(P)AutoResetCnt")
{
    info(autosaveFields, "VAL INPA")
    field(ASG,  "BEAMLINE")
    field(DESC, "Auto reset counters")
    field(INPA, "10000000")
    field(INPB, "$(P)CntTotalEvents NPP")
    field(CALC, "B>A?1:0")
    field(OOPT, "When Non-zero")
    field(OUT,  "$(P)ResetCnt PP")
}
record(bo, "$(P)PassVetoes")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Allow vetoes in output stream")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))PassVetoes")
    field(VAL,  "1")
    field(PINI, "YES")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)EfficiencyBoost")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Toggle efficiency boost")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))EfficiencyBoost")
    field(VAL,  "1")
    field(PINI, "YES")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(longout, "$(P)GNongapMaxRatio")
{
    info(autosaveFields, "VAL")
    field(DESC, "Second max G ratio")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))GNongapMaxRatio")
    field(PINI, "YES")
    field(EGU,  "%")
}
record(longout, "$(P)TimeRange1Min")
{
    info(autosaveFields, "VAL")
    field(DESC, "Min counts in first time range")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))TimeRange1Min")
    field(VAL,  "6")
    field(PINI, "YES")
}
record(longout, "$(P)TimeRange2Min")
{
    info(autosaveFields, "VAL")
    field(DESC, "Min counts in second time range")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))TimeRange2Min")
    field(VAL,  "5")
    field(PINI, "YES")
}
record(longout, "$(P)TimeRangeDelayMin")
{
    info(autosaveFields, "VAL")
    field(DESC, "Delayed event count threshold")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))TimeRangeDelayMin")
    field(VAL,  "15")
    field(PINI, "YES")
}
record(longout, "$(P)TofResolution")
{
    info(autosaveFields, "VAL")
    field(DESC, "Min time between two events")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))TofResolution")
    field(PINI, "YES")
    field(VAL,  "250")
    field(EGU,  "x100ns")
}
