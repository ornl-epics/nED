record(longin, "$(P)PixIdOff")
{
    info(autosaveFields, "VAL")
    field(DESC, "Pixel id offset")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))PixIdOff")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop0:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop0 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop0:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop1:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop1 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop1:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop2:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop2 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop2:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop3:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop3 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop3:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop4:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop4 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop4:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop5:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop5 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop5:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop6:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop6 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop6:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Chop7:Dly")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop7 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop7:Dly")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbi, "$(P)Chop0:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop0 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop0:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop1:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop1 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop1:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop2:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop2 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop2:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop3:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop3 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop3:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop4:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop4 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop4:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop5:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop5 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop5:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop6:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop6 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop6:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop7:Freq")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop7 frequency selector")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Chop7:Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(longin, "$(P)ChopDutyCy")
{
    info(autosaveFields, "VAL")
    field(DESC, "N*100ns ref pulse high")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopDutyCy")
    field(SCAN, "I/O Intr")
    field(VAL,  "83400")
}
record(longin, "$(P)ChopMaxPer")
{
    info(autosaveFields, "VAL")
    field(DESC, "N*100ns master/ref delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopMaxPer")
    field(SCAN, "I/O Intr")
    field(VAL,  "166800")
}
record(longin, "$(P)ChopFixOff")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chopper TOF fixed offset    ")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFixOff")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)ChopFr6")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 6")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr6")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(longin, "$(P)ChopFr7")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 7")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr7")
    field(SCAN, "I/O Intr")
    field(VAL,  "5")
}
record(longin, "$(P)ChopFr8")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 8")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr8")
    field(SCAN, "I/O Intr")
    field(VAL,  "6")
}
record(longin, "$(P)ChopFr9")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 9")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr9")
    field(SCAN, "I/O Intr")
    field(VAL,  "7")
}
record(longin, "$(P)ChopFr10")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 10")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr10")
    field(SCAN, "I/O Intr")
    field(VAL,  "8")
}
record(longin, "$(P)ChopFr11")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 11")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr11")
    field(SCAN, "I/O Intr")
    field(VAL,  "15")
}
record(longin, "$(P)ChopFr12")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 12")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr12")
    field(SCAN, "I/O Intr")
    field(VAL,  "17")
}
record(longin, "$(P)ChopFr13")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 13")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr13")
    field(SCAN, "I/O Intr")
    field(VAL,  "24")
}
record(longin, "$(P)ChopFr14")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 14")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr14")
    field(SCAN, "I/O Intr")
    field(VAL,  "25")
}
record(longin, "$(P)ChopFr15")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 15")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr15")
    field(SCAN, "I/O Intr")
    field(VAL,  "26")
}
record(longin, "$(P)ChopFr16")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 16")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr16")
    field(SCAN, "I/O Intr")
    field(VAL,  "28")
}
record(longin, "$(P)ChopFr17")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 17")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr17")
    field(SCAN, "I/O Intr")
    field(VAL,  "29")
}
record(longin, "$(P)ChopFr18")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 18")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr18")
    field(SCAN, "I/O Intr")
    field(VAL,  "30")
}
record(longin, "$(P)ChopFr19")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 19")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr19")
    field(SCAN, "I/O Intr")
    field(VAL,  "31")
}
record(longin, "$(P)ChopFr20")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 20")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr20")
    field(SCAN, "I/O Intr")
    field(VAL,  "32")
}
record(longin, "$(P)ChopFr21")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 21")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr21")
    field(SCAN, "I/O Intr")
    field(VAL,  "33")
}
record(longin, "$(P)ChopFr22")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 22")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr22")
    field(SCAN, "I/O Intr")
    field(VAL,  "34")
}
record(longin, "$(P)ChopFr23")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 23")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr23")
    field(SCAN, "I/O Intr")
    field(VAL,  "35")
}
record(longin, "$(P)ChopFr24")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 24")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr24")
    field(SCAN, "I/O Intr")
    field(VAL,  "36")
}
record(longin, "$(P)ChopFr25")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 25")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr25")
    field(SCAN, "I/O Intr")
    field(VAL,  "37")
}
record(longin, "$(P)ChopFr26")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 26")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr26")
    field(SCAN, "I/O Intr")
    field(VAL,  "38")
}
record(longin, "$(P)ChopFr27")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 27")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr27")
    field(SCAN, "I/O Intr")
    field(VAL,  "39")
}
record(longin, "$(P)ChopFr28")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 28")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr28")
    field(SCAN, "I/O Intr")
    field(VAL,  "40")
}
record(longin, "$(P)ChopFr29")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 29")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr29")
    field(SCAN, "I/O Intr")
    field(VAL,  "41")
}
record(longin, "$(P)ChopFr30")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 30")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr30")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
}
record(longin, "$(P)ChopFr31")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL Frame 31")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFr31")
    field(SCAN, "I/O Intr")
    field(VAL,  "2")
}
record(mbbi, "$(P)ChopTrefTr")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chopper TREF trigger select")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopTrefTr")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZRVL, "0")
    field(ZRST, "Extract")
    field(ONVL, "1")
    field(ONST, "Cycle Start")
    field(TWVL, "2")
    field(TWST, "Beam On")
    field(THVL, "3")
    field(THST, "TREF event")
}
record(mbbi, "$(P)ChopTrefFr")
{
    info(autosaveFields, "VAL")
    field(DESC, "TREF frequency select")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopTrefFr")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(longin, "$(P)ChopRtdlOf")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chopper RTDL frame offset")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopRtdlOf")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)ChopTrefEv")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop TREF event trig [0:255]")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopTrefEv")
    field(SCAN, "I/O Intr")
    field(VAL,  "39")
}
record(longin, "$(P)ChopHystML")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop HYST minimum low [0:7]")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopHystML")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(longin, "$(P)ChopHystMH")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop HYST minimum high [0:7]")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopHystMH")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(mbbi, "$(P)ChopFreqCn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop frequency count control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFreqCn")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZRVL, "0")
    field(ZRST, "strobe at X")
    field(ONVL, " 1")
    field(ONST, "strobe at X-1")
    field(TWVL, " 2")
    field(TWST, "strobe at X-2")
}
record(bi, "$(P)ChopFreqCy")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop frequency cycle select")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopFreqCy")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "Present cycle number")
    field(ONAM, "Next cycle number")
}
record(bi, "$(P)ChopSweep")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chop sweep enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ChopSweep")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "TOF fixed off")
    field(ONAM, "TOF fract off")
}
record(longin, "$(P)STsyncDelM")
{
    info(autosaveFields, "VAL")
    field(DESC, "Synth mast strobe max delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))STsyncDelM")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)STsyncDelA")
{
    info(autosaveFields, "VAL")
    field(DESC, "Synth mast strobe delay adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))STsyncDelA")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)STsyncFraA")
{
    info(autosaveFields, "VAL")
    field(DESC, "Synth mast strobe fract adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))STsyncFraA")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)TimeHiFake")
{
    info(autosaveFields, "VAL")
    field(DESC, "Fake mode time high DWord")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TimeHiFake")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbi, "$(P)Ch0:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan0 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch1:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan1 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch2:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan2 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch3:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan3 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch4:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan4 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch5:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan5 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch6:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan6 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch7:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan7 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch8:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan8 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch9:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan9 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch10:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan10 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch11:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan11 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch11:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch12:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan12 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch12:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch13:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan13 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch13:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch14:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan14 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch14:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch15:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan15 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch15:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch16:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan16 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch16:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch17:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan17 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch17:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch18:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan18 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch18:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch19:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan19 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch19:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch20:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan20 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch20:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch21:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan21 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch21:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch22:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan22 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch22:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch23:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan23 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch23:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch24:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan24 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch24:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch25:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan25 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch25:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch26:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan26 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch26:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch27:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan27 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch27:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch28:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan28 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch28:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch29:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan29 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch29:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch30:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan30 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch30:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch31:Mode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan31 edge detection mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch31:Mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(longin, "$(P)Ch0:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan0 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch1:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan1 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch2:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan2 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch3:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan3 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch4:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan4 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch5:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan5 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch6:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan6 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch7:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan7 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch8:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan8 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch9:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan9 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch10:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan10 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch11:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan11 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch11:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch12:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan12 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch12:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch13:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan13 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch13:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch14:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan14 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch14:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch15:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan15 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch15:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch16:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan16 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch16:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch17:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan17 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch17:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch18:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan18 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch18:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch19:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan19 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch19:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch20:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan20 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch20:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch21:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan21 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch21:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch22:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan22 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch22:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch23:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan23 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch23:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch24:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan24 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch24:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch25:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan25 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch25:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch26:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan26 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch26:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch27:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan27 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch27:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch28:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan28 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch28:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch29:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan29 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch29:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch30:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan30 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch30:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch31:PixId")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan31 edge pixel id")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch31:PixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch0:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan0 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch1:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan1 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch2:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan2 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch3:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan3 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch4:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan4 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch5:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan5 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch6:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan6 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch7:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan7 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch8:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan8 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch9:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan9 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch10:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan10 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch11:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan11 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch11:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch12:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan12 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch12:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch13:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan13 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch13:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch14:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan14 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch14:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch15:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan15 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch15:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch16:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan16 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch16:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch17:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan17 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch17:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch18:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan18 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch18:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch19:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan19 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch19:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch20:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan20 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch20:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch21:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan21 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch21:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch22:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan22 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch22:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch23:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan23 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch23:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch24:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan24 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch24:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch25:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan25 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch25:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch26:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan26 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch26:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch27:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan27 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch27:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch28:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan28 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch28:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch29:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan29 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch29:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch30:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan30 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch30:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch31:Cycle")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan31 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch31:Cycle")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch0:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan0 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch1:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan1 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch2:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan2 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch3:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan3 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch4:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan4 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch5:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan5 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch6:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan6 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch7:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan7 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch8:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan8 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch9:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan9 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch10:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan10 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch11:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan11 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch11:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch12:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan12 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch12:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch13:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan13 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch13:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch14:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan14 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch14:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch15:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan15 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch15:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch16:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan16 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch16:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch17:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan17 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch17:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch18:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan18 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch18:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch19:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan19 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch19:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch20:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan20 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch20:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch21:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan21 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch21:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch22:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan22 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch22:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch23:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan23 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch23:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch24:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan24 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch24:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch25:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan25 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch25:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch26:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan26 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch26:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch27:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan27 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch27:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch28:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan28 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch28:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch29:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan29 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch29:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch30:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan30 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch30:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)Ch31:Delay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan31 edge delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch31:Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bi, "$(P)Lvds0:En")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan0 RX/TX enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds0:En")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds1:En")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan1 RX/TX enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds1:En")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds2:En")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan2 RX/TX enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds2:En")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds3:En")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan3 RX/TX enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds3:En")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds4:En")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan4 RX/TX enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds4:En")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds5:En")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan5 RX/TX enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds5:En")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds0:IgnE")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan0 ignore error pkts")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds0:IgnE")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds1:IgnE")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan1 ignore error pkts")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds1:IgnE")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds2:IgnE")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan2 ignore error pkts")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds2:IgnE")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds3:IgnE")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan3 ignore error pkts")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds3:IgnE")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds4:IgnE")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan4 ignore error pkts")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds4:IgnE")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds5:IgnE")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan5 ignore error pkts")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds5:IgnE")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds0:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan0 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds0:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds1:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan1 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds1:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds2:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan2 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds2:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds3:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan3 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds3:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds4:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan4 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds4:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds5:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan5 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds5:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)LvdsCmdMod")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS command parser mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsCmdMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "as command")
    field(ONAM, "as data")
}
record(bi, "$(P)LvdsDatMod")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS data parser mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDatMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "as data")
    field(ONAM, "as command")
}
record(longin, "$(P)LvdsDatSiz")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS data pkt num words")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDatSiz")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(bi, "$(P)LvdsPowCtr")
{
    info(autosaveFields, "VAL")
    field(DESC, "Power Down during reset")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsPowCtr")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "power down")
    field(ONAM, "power up")
}
record(bi, "$(P)LvdsPowRst")
{
    info(autosaveFields, "VAL")
    field(DESC, "Execite power down sequence")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsPowRst")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "execute")
    field(ONAM, "bypass")
}
record(longin, "$(P)LvdsFltAll")
{
    info(autosaveFields, "VAL")
    field(DESC, "Filter all commands")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsFltAll")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)LvdsFltCmd")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS command to filter")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsFltCmd")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)LvdsFltCmM")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS command filter mask")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsFltCmM")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bi, "$(P)LvdsTxCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TX control TCLK mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTxCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "TCLK from int")
    field(ONAM, "TCLK from LVDS")
}
record(mbbi, "$(P)LvdsTxTcCt")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TX control T&C TCLK mod")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTxTcCt")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)LvdsTsMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TSYNC_O mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTsMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "3")
    field(ZRVL, "0")
    field(ZRST, "local TSYNC")
    field(ONVL, "1")
    field(ONST, "TSYNC from TREF")
    field(TWVL, "2")
    field(TWST, "TSYNC from LVDS")
    field(THVL, "3")
    field(THST, "TSYNC from opt")
}
record(mbbi, "$(P)LvdsTsCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TSYNC_NORMAL control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTsCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "polarity")
    field(ONVL, "1")
    field(ONST, "TSYNC WIDTH")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)LvdsSysrCt")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS T&C SYSRST# buffer ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsSysrCt")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "sysrst")
    field(ONVL, "1")
    field(ONST, "sysrst")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)LvdsTxenCt")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS T&C TXEN# control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTxenCt")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "ChLnk parser")
    field(ONVL, "1")
    field(ONST, "ChLnk parser")
    field(TWVL, "2")
    field(TWST, "ChLnk RX")
    field(THVL, "3")
    field(THST, "ChLnk inv RX")
}
record(longin, "$(P)LvdsOutClk")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS output clock mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsOutClk")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)LvdsNRetry")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS downstream retrys")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsNRetry")
    field(SCAN, "I/O Intr")
    field(VAL,  "3")
}
record(bi, "$(P)Lvds0:WLen")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan0 data word length")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds0:WLen")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds1:WLen")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan1 data word length")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds1:WLen")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds2:WLen")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan2 data word length")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds2:WLen")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds3:WLen")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan3 data word length")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds3:WLen")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds4:WLen")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan4 data word length")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds4:WLen")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds5:WLen")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS chan5 data word length")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds5:WLen")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(longin, "$(P)LvdsClkMar")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS clock margin")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsClkMar")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bi, "$(P)LvdsTstPat")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS T&C test pattern")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTstPat")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)LvdsTestEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS test enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTestEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(mbbi, "$(P)Lvds0:SrcC")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS ch0 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds0:SrcC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds1:SrcC")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS ch1 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds1:SrcC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds2:SrcC")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS ch2 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds2:SrcC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds3:SrcC")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS ch3 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds3:SrcC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds4:SrcC")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS ch4 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds4:SrcC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds5:SrcC")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS ch5 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Lvds5:SrcC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)LvdsTsMeta")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TSYNC metadata src ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTsMeta")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "RTDL")
    field(ONVL, "1")
    field(ONST, "LVDS")
    field(TWVL, "2")
    field(TWST, "detector TSYNC")
    field(THVL, "3")
    field(THST, "OFB[0]")
}
record(longin, "$(P)LvdsTsGen")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TSYNC generation diviso")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTsGen")
    field(SCAN, "I/O Intr")
    field(VAL,  "20000")
}
record(longin, "$(P)LvdsTsDel")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TSYNC delay divisor    ")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTsDel")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)LvdsTsWid")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS TSYNC width divisor    ")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTsWid")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbi, "$(P)OptA:Cross")
{
    info(autosaveFields, "VAL")
    field(DESC, "Crossbar Switch Pass ctrl A")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Cross")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbi, "$(P)OptB:Cross")
{
    info(autosaveFields, "VAL")
    field(DESC, "Crossbar Switch Pass ctrl B")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Cross")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbi, "$(P)OptA:TxMod")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical TX A output mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:TxMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(bi, "$(P)OptA:EOC")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical TX A End of Chain")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:EOC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)OptA:FltCm")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical TX A Command Filter")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:FltCm")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbi, "$(P)OptB:TxMod")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical TX B output mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:TxMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(bi, "$(P)OptB:EOC")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical TX B End of Chain")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:EOC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longin, "$(P)OptB:FltCm")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical TX B Command Filter")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:FltCm")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bi, "$(P)OptHystEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical hysteresis enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptHystEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "from TLK data")
    field(ONAM, "match optical")
}
record(bi, "$(P)OptBlankEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical empty data frame CRC")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptBlankEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "no blank frame")
    field(ONAM, "add blank frame")
}
record(longin, "$(P)OptTxDelay")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical packet send delay   ")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptTxDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "3")
}
record(bi, "$(P)OptTxDelCt")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical packet send delay ct")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptTxDelCt")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "use OPT_TX_DELAY")
    field(ONAM, "prev word count")
}
record(longin, "$(P)OptMaxSize")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical packet max dwords")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptMaxSize")
    field(SCAN, "I/O Intr")
    field(VAL,  "16111")
}
record(bi, "$(P)OptNeuEop")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical Neutron send EOP")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptNeuEop")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)OptMetaEop")
{
    info(autosaveFields, "VAL")
    field(DESC, "Optical Metadata send EOP")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptMetaEop")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)OptTofCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "TOF control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptTofCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "fixed TOF")
    field(ONAM, "full time offset")
}
record(longin, "$(P)FakeTrig")
{
    info(autosaveFields, "VAL")
    field(DESC, "Fake Trigger Information")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FakeTrig")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbi, "$(P)SysRstMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Reset mode => SYSRST_O#")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysRstMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS T&C")
    field(THVL, "3")
    field(THST, "from optical T&C")
}
record(mbbi, "$(P)SysStrtMod")
{
    info(autosaveFields, "VAL")
    field(DESC, "Start/Stop mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysStrtMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "normal")
    field(ONVL, " 1")
    field(ONST, "fake data mode")
    field(TWVL, "2")
    field(TWST, "not defined")
    field(THVL, "3")
    field(THST, "not defined")
}
record(bi, "$(P)SysFakeEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Fake metadata trigger enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysFakeEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)SysFastEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Send data immediately switch")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysFastEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "big packets")
    field(ONAM, "send immediately")
}
record(bi, "$(P)SysPassEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Response for passthru cmd")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysPassEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "don't send")
    field(ONAM, "send")
}
record(bi, "$(P)SysStartEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Wait for Start/Stop response")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysStartEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "don't wait")
    field(ONAM, "wait")
}
record(mbbi, "$(P)SysRtdlMod")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysRtdlMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "no RTDL")
    field(ONVL, "1")
    field(ONST, "master")
    field(TWVL, "2")
    field(TWST, "slave")
    field(THVL, "3")
    field(THST, "fake mode")
}
record(bi, "$(P)SysRtdlAEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL port A output enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysRtdlAEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysRtdlBEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "RTDL port B output enable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysRtdlBEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysTofOfEn")
{
    info(autosaveFields, "VAL")
    field(DESC, "Enable TOF full offset")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysTofOfEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysFifSync")
{
    info(autosaveFields, "VAL")
    field(DESC, "FIFO sync switch")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysFifSync")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysRtdlDat")
{
    info(autosaveFields, "VAL")
    field(DESC, "Send RTDL command as data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysRtdlDat")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysFixRtdl")
{
    info(autosaveFields, "VAL")
    field(DESC, "Correct RTDL information")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysFixRtdl")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysBadPkt")
{
    info(autosaveFields, "VAL")
    field(DESC, "Send bad packets")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysBadPkt")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysReset")
{
    info(autosaveFields, "VAL")
    field(DESC, "Force system reset")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysReset")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)Configured")
{
    field(DESC, "Configured")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Configured")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not configured")
    field(ONAM, "configured")
}
record(bi, "$(P)Acquiring")
{
    field(DESC, "Acquiring data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Acquiring")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not acquiring")
    field(ONAM, "acquiring")
}
record(bi, "$(P)ProgramErr")
{
    field(DESC, "WRITE_CNFG during ACQ")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ProgramErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)PktLenErr")
{
    field(DESC, "Packet length error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))PktLenErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrBadCmd")
{
    field(DESC, "Unrecognized command error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrBadCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)LvdsTxFul")
{
    field(DESC, "LVDS TxFIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTxFul")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "full")
}
record(bi, "$(P)LvdsCmdErr")
{
    field(DESC, "LVDS command error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsCmdErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)EepromInit")
{
    field(DESC, "EEPROM initialization status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromInit")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not ok")
    field(ONAM, "ok")
}
record(longin, "$(P)OptA:ErrCn")
{
    field(DESC, "RX A errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:ErrCn")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)OptA:ErrFl")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:ErrFl")
    field(SCAN, "I/O Intr")
    field(ZRVL, "8")
    field(ZRST, "packet timeout")
    field(ONVL, "9")
    field(ONST, "SOF/address sw")
    field(TWVL, "10")
    field(TWST, "EOF/address sw")
    field(THVL, "11")
    field(THST, "SOF/hdr sw")
    field(FRVL, "12")
    field(FRST, "EOF/hdr sw")
    field(FVVL, "13")
    field(FVST, "SOF/payload sw")
    field(SXVL, "14")
    field(SXST, "EOF/payload sw")
    field(SVVL, "15")
    field(SVST, "SOF/CRC switch")
    field(EIVL, "16")
    field(EIST, "EOF/CRC switch")
    field(NIVL, "17")
    field(NIST, "CRC low word")
    field(TEVL, "18")
    field(TEST, "CRC high word")
    field(ELVL, "19")
    field(ELST, "pri FIFO al full")
    field(TVVL, "20")
    field(TVST, "sec FIFO al full")
}
record(bi, "$(P)OptA:Good")
{
    field(DESC, "Last packet was good")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Good")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)OptA:PriS")
{
    field(DESC, "Stack FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PriS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptA:PriF")
{
    field(DESC, "Stack FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PriF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptA:SecS")
{
    field(DESC, "Secondary FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:SecS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptA:SecF")
{
    field(DESC, "Secondary FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:SecF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptA:PassS")
{
    field(DESC, "PassThrough FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PassS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptA:PassF")
{
    field(DESC, "PassThrough FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PassF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptA:Time")
{
    field(DESC, "Timeout Pri/Sec FIFO transfr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Time")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)OptA:Stack")
{
    field(DESC, "RX pkt while stack almost fu")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Stack")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)OptA:Fifo")
{
    field(DESC, "RX while the FIFO almost ful")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Fifo")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)OptB:ErrCn")
{
    field(DESC, "RX B errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:ErrCn")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)OptB:ErrFl")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:ErrFl")
    field(SCAN, "I/O Intr")
    field(ZRVL, "8")
    field(ZRST, "packet timeout")
    field(ONVL, "9")
    field(ONST, "SOF/address sw")
    field(TWVL, "10")
    field(TWST, "EOF/address sw")
    field(THVL, "11")
    field(THST, "SOF/hdr sw")
    field(FRVL, "12")
    field(FRST, "EOF/hdr sw")
    field(FVVL, "13")
    field(FVST, "SOF/payload sw")
    field(SXVL, "14")
    field(SXST, "EOF/payload sw")
    field(SVVL, "15")
    field(SVST, "SOF/CRC switch")
    field(EIVL, "16")
    field(EIST, "EOF/CRC switch")
    field(NIVL, "17")
    field(NIST, "CRC low word")
    field(TEVL, "18")
    field(TEST, "CRC high word")
    field(ELVL, "19")
    field(ELST, "pri FIFO al full")
    field(TVVL, "20")
    field(TVST, "sec FIFO al full")
}
record(bi, "$(P)OptB:Good")
{
    field(DESC, "Last packet was good")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Good")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)OptB:PriS")
{
    field(DESC, "Stack FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PriS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptB:PriF")
{
    field(DESC, "Stack FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PriF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptB:SecS")
{
    field(DESC, "Secondary FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:SecS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptB:SecF")
{
    field(DESC, "Secondary FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:SecF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptB:PassS")
{
    field(DESC, "PassThrough FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PassS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptB:PassF")
{
    field(DESC, "PassThrough FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PassF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptB:Time")
{
    field(DESC, "Timeout Pri/Sec FIFO transfr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Time")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)OptB:Stack")
{
    field(DESC, "RX pkt while stack almost fu")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Stack")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)OptB:Fifo")
{
    field(DESC, "RX while the FIFO almost ful")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Fifo")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch0:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch0:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch0:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch0:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch0:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch0:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch0:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch0:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch0:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch1:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch1:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch1:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch1:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch1:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch1:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch1:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch1:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch1:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch2:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch2:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch2:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch2:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch2:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch2:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch2:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch2:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch2:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch3:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch3:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch3:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch3:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch3:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch3:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch3:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch3:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch3:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch4:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch4:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch4:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch4:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch4:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch4:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch4:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch4:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch4:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch5:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch5:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch5:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch5:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch5:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch5:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch5:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch5:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch5:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntGood")
{
    field(DESC, "Good data packet count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntGood")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntCmds")
{
    field(DESC, "Filtered command count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntCmds")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntAcks")
{
    field(DESC, "Filtered ACKSs count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntAcks")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntNacks")
{
    field(DESC, "Filtered NACKs count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntNacks")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)NumHwIds")
{
    field(DESC, "Detected Hardware IDs count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))NumHwIds")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)NewHwId")
{
    field(DESC, "New Hardware ID detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))NewHwId")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)MissHwId")
{
    field(DESC, "Missing Hardware ID")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MissHwId")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)CmdData")
{
    field(DESC, "Sorter cmd FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdAF")
{
    field(DESC, "Sorter cmd FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)RxData")
{
    field(DESC, "Channel Link cmd FIFO has da")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)RxAF")
{
    field(DESC, "Channel Link cmd FIFO al. fu")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(longin, "$(P)OptA:CrSw")
{
    field(DESC, "Crossbar Switch A pass ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:CrSw")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)OptB:CrSw")
{
    field(DESC, "Crossbar Switch B pass ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:CrSw")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)ClkThrMin")
{
    field(DESC, "Min N*40MHz TSYNC/ref delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ClkThrMin")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)ClkThrMax")
{
    field(DESC, "Max N*40MHz TSYNC/ref delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ClkThrMax")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)EepromStat")
{
    field(DESC, "EEPROM Status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromStat")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)LvdsStatus")
{
    field(DESC, "LVDS status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsStatus")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)MetaInfo0")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MetaInfo0")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)MetaInfo1")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MetaInfo1")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)MetaInfo2")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MetaInfo2")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)DetailInfo")
{
    field(DESC, "Detailed info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))DetailInfo")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)TofOffset")
{
    field(DESC, "TOF offset")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TofOffset")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)RtdlInfo")
{
    field(DESC, "RTDL info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RtdlInfo")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntBadRtdl")
{
    field(DESC, "RTDL frame CRC errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntBadRtdl")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntBadData")
{
    field(DESC, "Ev Link frame CRC errors cnt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntBadData")
    field(SCAN, "I/O Intr")
}
