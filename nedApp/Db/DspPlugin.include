record(longout, "$(P)PixIdOff")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Pixel id offset")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)PixIdOffW PP")
}
record(longout, "$(P)PixIdOffW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Pixel id offset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))PixIdOff")
    field(SDIS, "$(P)PixIdOffS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)PixIdOffR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Pixel id offset")
    field(INP,  "@asyn($(PORT))PixIdOff")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)PixIdOffS")
}
record(longout, "$(P)PixIdOffS")
{
    field(DOL,  "$(P)PixIdOffR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)PixIdOff PP")
}
record(longout, "$(P)Chop0:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop0 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop0:DlyW PP")
}
record(longout, "$(P)Chop0:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop0 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop0:Dly")
    field(SDIS, "$(P)Chop0:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop0:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop0 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop0:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop0:DlyS")
}
record(longout, "$(P)Chop0:DlyS")
{
    field(DOL,  "$(P)Chop0:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop0:Dly PP")
}
record(longout, "$(P)Chop1:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop1 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop1:DlyW PP")
}
record(longout, "$(P)Chop1:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop1 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop1:Dly")
    field(SDIS, "$(P)Chop1:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop1:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop1 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop1:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop1:DlyS")
}
record(longout, "$(P)Chop1:DlyS")
{
    field(DOL,  "$(P)Chop1:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop1:Dly PP")
}
record(longout, "$(P)Chop2:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop2 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop2:DlyW PP")
}
record(longout, "$(P)Chop2:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop2 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop2:Dly")
    field(SDIS, "$(P)Chop2:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop2:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop2 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop2:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop2:DlyS")
}
record(longout, "$(P)Chop2:DlyS")
{
    field(DOL,  "$(P)Chop2:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop2:Dly PP")
}
record(longout, "$(P)Chop3:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop3 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop3:DlyW PP")
}
record(longout, "$(P)Chop3:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop3 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop3:Dly")
    field(SDIS, "$(P)Chop3:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop3:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop3 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop3:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop3:DlyS")
}
record(longout, "$(P)Chop3:DlyS")
{
    field(DOL,  "$(P)Chop3:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop3:Dly PP")
}
record(longout, "$(P)Chop4:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop4 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop4:DlyW PP")
}
record(longout, "$(P)Chop4:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop4 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop4:Dly")
    field(SDIS, "$(P)Chop4:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop4:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop4 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop4:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop4:DlyS")
}
record(longout, "$(P)Chop4:DlyS")
{
    field(DOL,  "$(P)Chop4:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop4:Dly PP")
}
record(longout, "$(P)Chop5:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop5 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop5:DlyW PP")
}
record(longout, "$(P)Chop5:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop5 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop5:Dly")
    field(SDIS, "$(P)Chop5:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop5:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop5 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop5:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop5:DlyS")
}
record(longout, "$(P)Chop5:DlyS")
{
    field(DOL,  "$(P)Chop5:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop5:Dly PP")
}
record(longout, "$(P)Chop6:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop6 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop6:DlyW PP")
}
record(longout, "$(P)Chop6:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop6 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop6:Dly")
    field(SDIS, "$(P)Chop6:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop6:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop6 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop6:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop6:DlyS")
}
record(longout, "$(P)Chop6:DlyS")
{
    field(DOL,  "$(P)Chop6:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop6:Dly PP")
}
record(longout, "$(P)Chop7:Dly")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop7 delay for N*9.4ns cyc")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop7:DlyW PP")
}
record(longout, "$(P)Chop7:DlyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop7 delay for N*9.4ns cyc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop7:Dly")
    field(SDIS, "$(P)Chop7:DlyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Chop7:DlyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop7 delay for N*9.4ns cyc")
    field(INP,  "@asyn($(PORT))Chop7:Dly")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop7:DlyS")
}
record(longout, "$(P)Chop7:DlyS")
{
    field(DOL,  "$(P)Chop7:DlyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop7:Dly PP")
}
record(mbbo, "$(P)Chop0:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop0 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop0:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop0:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop0 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop0:Freq")
    field(SDIS, "$(P)Chop0:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop0:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop0 frequency selector")
    field(INP,  "@asyn($(PORT))Chop0:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop0:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop0:FreqS")
{
    field(DOL,  "$(P)Chop0:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop0:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop1:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop1 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop1:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop1:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop1 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop1:Freq")
    field(SDIS, "$(P)Chop1:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop1:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop1 frequency selector")
    field(INP,  "@asyn($(PORT))Chop1:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop1:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop1:FreqS")
{
    field(DOL,  "$(P)Chop1:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop1:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop2:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop2 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop2:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop2:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop2 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop2:Freq")
    field(SDIS, "$(P)Chop2:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop2:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop2 frequency selector")
    field(INP,  "@asyn($(PORT))Chop2:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop2:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop2:FreqS")
{
    field(DOL,  "$(P)Chop2:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop2:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop3:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop3 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop3:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop3:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop3 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop3:Freq")
    field(SDIS, "$(P)Chop3:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop3:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop3 frequency selector")
    field(INP,  "@asyn($(PORT))Chop3:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop3:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop3:FreqS")
{
    field(DOL,  "$(P)Chop3:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop3:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop4:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop4 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop4:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop4:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop4 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop4:Freq")
    field(SDIS, "$(P)Chop4:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop4:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop4 frequency selector")
    field(INP,  "@asyn($(PORT))Chop4:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop4:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop4:FreqS")
{
    field(DOL,  "$(P)Chop4:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop4:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop5:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop5 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop5:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop5:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop5 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop5:Freq")
    field(SDIS, "$(P)Chop5:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop5:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop5 frequency selector")
    field(INP,  "@asyn($(PORT))Chop5:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop5:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop5:FreqS")
{
    field(DOL,  "$(P)Chop5:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop5:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop6:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop6 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop6:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop6:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop6 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop6:Freq")
    field(SDIS, "$(P)Chop6:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop6:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop6 frequency selector")
    field(INP,  "@asyn($(PORT))Chop6:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop6:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop6:FreqS")
{
    field(DOL,  "$(P)Chop6:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop6:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop7:Freq")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop7 frequency selector")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Chop7:FreqW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop7:FreqW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop7 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Chop7:Freq")
    field(SDIS, "$(P)Chop7:FreqS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)Chop7:FreqR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop7 frequency selector")
    field(INP,  "@asyn($(PORT))Chop7:Freq")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Chop7:FreqS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)Chop7:FreqS")
{
    field(DOL,  "$(P)Chop7:FreqR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Chop7:Freq PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(longout, "$(P)ChopDutyCy")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "N*100ns ref pulse high")
    field(PINI, "YES")
    field(VAL,  "83400")
    field(OUT,  "$(P)ChopDutyCyW PP")
}
record(longout, "$(P)ChopDutyCyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "N*100ns ref pulse high")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopDutyCy")
    field(SDIS, "$(P)ChopDutyCyS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopDutyCyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "N*100ns ref pulse high")
    field(INP,  "@asyn($(PORT))ChopDutyCy")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopDutyCyS")
}
record(longout, "$(P)ChopDutyCyS")
{
    field(DOL,  "$(P)ChopDutyCyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopDutyCy PP")
}
record(longout, "$(P)ChopMaxPer")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "N*100ns master/ref delay")
    field(PINI, "YES")
    field(VAL,  "166800")
    field(OUT,  "$(P)ChopMaxPerW PP")
}
record(longout, "$(P)ChopMaxPerW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "N*100ns master/ref delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopMaxPer")
    field(SDIS, "$(P)ChopMaxPerS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopMaxPerR")
{
    field(DTYP, "asynInt32")
    field(DESC, "N*100ns master/ref delay")
    field(INP,  "@asyn($(PORT))ChopMaxPer")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopMaxPerS")
}
record(longout, "$(P)ChopMaxPerS")
{
    field(DOL,  "$(P)ChopMaxPerR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopMaxPer PP")
}
record(longout, "$(P)ChopFixOff")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chopper TOF fixed offset    ")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)ChopFixOffW PP")
}
record(longout, "$(P)ChopFixOffW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chopper TOF fixed offset    ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFixOff")
    field(SDIS, "$(P)ChopFixOffS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFixOffR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chopper TOF fixed offset    ")
    field(INP,  "@asyn($(PORT))ChopFixOff")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFixOffS")
}
record(longout, "$(P)ChopFixOffS")
{
    field(DOL,  "$(P)ChopFixOffR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFixOff PP")
}
record(longout, "$(P)ChopFr6")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 6")
    field(PINI, "YES")
    field(VAL,  "4")
    field(OUT,  "$(P)ChopFr6W PP")
}
record(longout, "$(P)ChopFr6W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 6")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr6")
    field(SDIS, "$(P)ChopFr6S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr6R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 6")
    field(INP,  "@asyn($(PORT))ChopFr6")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr6S")
}
record(longout, "$(P)ChopFr6S")
{
    field(DOL,  "$(P)ChopFr6R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr6 PP")
}
record(longout, "$(P)ChopFr7")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 7")
    field(PINI, "YES")
    field(VAL,  "5")
    field(OUT,  "$(P)ChopFr7W PP")
}
record(longout, "$(P)ChopFr7W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 7")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr7")
    field(SDIS, "$(P)ChopFr7S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr7R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 7")
    field(INP,  "@asyn($(PORT))ChopFr7")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr7S")
}
record(longout, "$(P)ChopFr7S")
{
    field(DOL,  "$(P)ChopFr7R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr7 PP")
}
record(longout, "$(P)ChopFr8")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 8")
    field(PINI, "YES")
    field(VAL,  "6")
    field(OUT,  "$(P)ChopFr8W PP")
}
record(longout, "$(P)ChopFr8W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 8")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr8")
    field(SDIS, "$(P)ChopFr8S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr8R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 8")
    field(INP,  "@asyn($(PORT))ChopFr8")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr8S")
}
record(longout, "$(P)ChopFr8S")
{
    field(DOL,  "$(P)ChopFr8R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr8 PP")
}
record(longout, "$(P)ChopFr9")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 9")
    field(PINI, "YES")
    field(VAL,  "7")
    field(OUT,  "$(P)ChopFr9W PP")
}
record(longout, "$(P)ChopFr9W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 9")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr9")
    field(SDIS, "$(P)ChopFr9S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr9R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 9")
    field(INP,  "@asyn($(PORT))ChopFr9")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr9S")
}
record(longout, "$(P)ChopFr9S")
{
    field(DOL,  "$(P)ChopFr9R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr9 PP")
}
record(longout, "$(P)ChopFr10")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 10")
    field(PINI, "YES")
    field(VAL,  "8")
    field(OUT,  "$(P)ChopFr10W PP")
}
record(longout, "$(P)ChopFr10W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 10")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr10")
    field(SDIS, "$(P)ChopFr10S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr10R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 10")
    field(INP,  "@asyn($(PORT))ChopFr10")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr10S")
}
record(longout, "$(P)ChopFr10S")
{
    field(DOL,  "$(P)ChopFr10R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr10 PP")
}
record(longout, "$(P)ChopFr11")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 11")
    field(PINI, "YES")
    field(VAL,  "15")
    field(OUT,  "$(P)ChopFr11W PP")
}
record(longout, "$(P)ChopFr11W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 11")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr11")
    field(SDIS, "$(P)ChopFr11S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr11R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 11")
    field(INP,  "@asyn($(PORT))ChopFr11")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr11S")
}
record(longout, "$(P)ChopFr11S")
{
    field(DOL,  "$(P)ChopFr11R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr11 PP")
}
record(longout, "$(P)ChopFr12")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 12")
    field(PINI, "YES")
    field(VAL,  "17")
    field(OUT,  "$(P)ChopFr12W PP")
}
record(longout, "$(P)ChopFr12W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 12")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr12")
    field(SDIS, "$(P)ChopFr12S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr12R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 12")
    field(INP,  "@asyn($(PORT))ChopFr12")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr12S")
}
record(longout, "$(P)ChopFr12S")
{
    field(DOL,  "$(P)ChopFr12R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr12 PP")
}
record(longout, "$(P)ChopFr13")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 13")
    field(PINI, "YES")
    field(VAL,  "24")
    field(OUT,  "$(P)ChopFr13W PP")
}
record(longout, "$(P)ChopFr13W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 13")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr13")
    field(SDIS, "$(P)ChopFr13S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr13R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 13")
    field(INP,  "@asyn($(PORT))ChopFr13")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr13S")
}
record(longout, "$(P)ChopFr13S")
{
    field(DOL,  "$(P)ChopFr13R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr13 PP")
}
record(longout, "$(P)ChopFr14")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 14")
    field(PINI, "YES")
    field(VAL,  "25")
    field(OUT,  "$(P)ChopFr14W PP")
}
record(longout, "$(P)ChopFr14W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 14")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr14")
    field(SDIS, "$(P)ChopFr14S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr14R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 14")
    field(INP,  "@asyn($(PORT))ChopFr14")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr14S")
}
record(longout, "$(P)ChopFr14S")
{
    field(DOL,  "$(P)ChopFr14R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr14 PP")
}
record(longout, "$(P)ChopFr15")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 15")
    field(PINI, "YES")
    field(VAL,  "26")
    field(OUT,  "$(P)ChopFr15W PP")
}
record(longout, "$(P)ChopFr15W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 15")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr15")
    field(SDIS, "$(P)ChopFr15S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr15R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 15")
    field(INP,  "@asyn($(PORT))ChopFr15")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr15S")
}
record(longout, "$(P)ChopFr15S")
{
    field(DOL,  "$(P)ChopFr15R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr15 PP")
}
record(longout, "$(P)ChopFr16")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 16")
    field(PINI, "YES")
    field(VAL,  "28")
    field(OUT,  "$(P)ChopFr16W PP")
}
record(longout, "$(P)ChopFr16W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 16")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr16")
    field(SDIS, "$(P)ChopFr16S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr16R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 16")
    field(INP,  "@asyn($(PORT))ChopFr16")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr16S")
}
record(longout, "$(P)ChopFr16S")
{
    field(DOL,  "$(P)ChopFr16R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr16 PP")
}
record(longout, "$(P)ChopFr17")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 17")
    field(PINI, "YES")
    field(VAL,  "29")
    field(OUT,  "$(P)ChopFr17W PP")
}
record(longout, "$(P)ChopFr17W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 17")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr17")
    field(SDIS, "$(P)ChopFr17S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr17R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 17")
    field(INP,  "@asyn($(PORT))ChopFr17")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr17S")
}
record(longout, "$(P)ChopFr17S")
{
    field(DOL,  "$(P)ChopFr17R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr17 PP")
}
record(longout, "$(P)ChopFr18")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 18")
    field(PINI, "YES")
    field(VAL,  "30")
    field(OUT,  "$(P)ChopFr18W PP")
}
record(longout, "$(P)ChopFr18W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 18")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr18")
    field(SDIS, "$(P)ChopFr18S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr18R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 18")
    field(INP,  "@asyn($(PORT))ChopFr18")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr18S")
}
record(longout, "$(P)ChopFr18S")
{
    field(DOL,  "$(P)ChopFr18R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr18 PP")
}
record(longout, "$(P)ChopFr19")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 19")
    field(PINI, "YES")
    field(VAL,  "31")
    field(OUT,  "$(P)ChopFr19W PP")
}
record(longout, "$(P)ChopFr19W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 19")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr19")
    field(SDIS, "$(P)ChopFr19S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr19R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 19")
    field(INP,  "@asyn($(PORT))ChopFr19")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr19S")
}
record(longout, "$(P)ChopFr19S")
{
    field(DOL,  "$(P)ChopFr19R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr19 PP")
}
record(longout, "$(P)ChopFr20")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 20")
    field(PINI, "YES")
    field(VAL,  "32")
    field(OUT,  "$(P)ChopFr20W PP")
}
record(longout, "$(P)ChopFr20W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 20")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr20")
    field(SDIS, "$(P)ChopFr20S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr20R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 20")
    field(INP,  "@asyn($(PORT))ChopFr20")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr20S")
}
record(longout, "$(P)ChopFr20S")
{
    field(DOL,  "$(P)ChopFr20R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr20 PP")
}
record(longout, "$(P)ChopFr21")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 21")
    field(PINI, "YES")
    field(VAL,  "33")
    field(OUT,  "$(P)ChopFr21W PP")
}
record(longout, "$(P)ChopFr21W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 21")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr21")
    field(SDIS, "$(P)ChopFr21S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr21R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 21")
    field(INP,  "@asyn($(PORT))ChopFr21")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr21S")
}
record(longout, "$(P)ChopFr21S")
{
    field(DOL,  "$(P)ChopFr21R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr21 PP")
}
record(longout, "$(P)ChopFr22")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 22")
    field(PINI, "YES")
    field(VAL,  "34")
    field(OUT,  "$(P)ChopFr22W PP")
}
record(longout, "$(P)ChopFr22W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 22")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr22")
    field(SDIS, "$(P)ChopFr22S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr22R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 22")
    field(INP,  "@asyn($(PORT))ChopFr22")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr22S")
}
record(longout, "$(P)ChopFr22S")
{
    field(DOL,  "$(P)ChopFr22R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr22 PP")
}
record(longout, "$(P)ChopFr23")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 23")
    field(PINI, "YES")
    field(VAL,  "35")
    field(OUT,  "$(P)ChopFr23W PP")
}
record(longout, "$(P)ChopFr23W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 23")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr23")
    field(SDIS, "$(P)ChopFr23S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr23R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 23")
    field(INP,  "@asyn($(PORT))ChopFr23")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr23S")
}
record(longout, "$(P)ChopFr23S")
{
    field(DOL,  "$(P)ChopFr23R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr23 PP")
}
record(longout, "$(P)ChopFr24")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 24")
    field(PINI, "YES")
    field(VAL,  "36")
    field(OUT,  "$(P)ChopFr24W PP")
}
record(longout, "$(P)ChopFr24W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 24")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr24")
    field(SDIS, "$(P)ChopFr24S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr24R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 24")
    field(INP,  "@asyn($(PORT))ChopFr24")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr24S")
}
record(longout, "$(P)ChopFr24S")
{
    field(DOL,  "$(P)ChopFr24R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr24 PP")
}
record(longout, "$(P)ChopFr25")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 25")
    field(PINI, "YES")
    field(VAL,  "37")
    field(OUT,  "$(P)ChopFr25W PP")
}
record(longout, "$(P)ChopFr25W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 25")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr25")
    field(SDIS, "$(P)ChopFr25S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr25R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 25")
    field(INP,  "@asyn($(PORT))ChopFr25")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr25S")
}
record(longout, "$(P)ChopFr25S")
{
    field(DOL,  "$(P)ChopFr25R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr25 PP")
}
record(longout, "$(P)ChopFr26")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 26")
    field(PINI, "YES")
    field(VAL,  "38")
    field(OUT,  "$(P)ChopFr26W PP")
}
record(longout, "$(P)ChopFr26W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 26")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr26")
    field(SDIS, "$(P)ChopFr26S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr26R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 26")
    field(INP,  "@asyn($(PORT))ChopFr26")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr26S")
}
record(longout, "$(P)ChopFr26S")
{
    field(DOL,  "$(P)ChopFr26R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr26 PP")
}
record(longout, "$(P)ChopFr27")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 27")
    field(PINI, "YES")
    field(VAL,  "39")
    field(OUT,  "$(P)ChopFr27W PP")
}
record(longout, "$(P)ChopFr27W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 27")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr27")
    field(SDIS, "$(P)ChopFr27S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr27R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 27")
    field(INP,  "@asyn($(PORT))ChopFr27")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr27S")
}
record(longout, "$(P)ChopFr27S")
{
    field(DOL,  "$(P)ChopFr27R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr27 PP")
}
record(longout, "$(P)ChopFr28")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 28")
    field(PINI, "YES")
    field(VAL,  "40")
    field(OUT,  "$(P)ChopFr28W PP")
}
record(longout, "$(P)ChopFr28W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 28")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr28")
    field(SDIS, "$(P)ChopFr28S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr28R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 28")
    field(INP,  "@asyn($(PORT))ChopFr28")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr28S")
}
record(longout, "$(P)ChopFr28S")
{
    field(DOL,  "$(P)ChopFr28R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr28 PP")
}
record(longout, "$(P)ChopFr29")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 29")
    field(PINI, "YES")
    field(VAL,  "41")
    field(OUT,  "$(P)ChopFr29W PP")
}
record(longout, "$(P)ChopFr29W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 29")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr29")
    field(SDIS, "$(P)ChopFr29S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr29R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 29")
    field(INP,  "@asyn($(PORT))ChopFr29")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr29S")
}
record(longout, "$(P)ChopFr29S")
{
    field(DOL,  "$(P)ChopFr29R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr29 PP")
}
record(longout, "$(P)ChopFr30")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 30")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)ChopFr30W PP")
}
record(longout, "$(P)ChopFr30W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 30")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr30")
    field(SDIS, "$(P)ChopFr30S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr30R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 30")
    field(INP,  "@asyn($(PORT))ChopFr30")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr30S")
}
record(longout, "$(P)ChopFr30S")
{
    field(DOL,  "$(P)ChopFr30R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr30 PP")
}
record(longout, "$(P)ChopFr31")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 31")
    field(PINI, "YES")
    field(VAL,  "2")
    field(OUT,  "$(P)ChopFr31W PP")
}
record(longout, "$(P)ChopFr31W")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL Frame 31")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFr31")
    field(SDIS, "$(P)ChopFr31S.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopFr31R")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL Frame 31")
    field(INP,  "@asyn($(PORT))ChopFr31")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFr31S")
}
record(longout, "$(P)ChopFr31S")
{
    field(DOL,  "$(P)ChopFr31R NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFr31 PP")
}
record(mbbo, "$(P)ChopTrefTr")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chopper TREF trigger select")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)ChopTrefTrW PP")
    field(ZRVL, "0")
    field(ZRST, "Extract")
    field(ONVL, "1")
    field(ONST, "Cycle Start")
    field(TWVL, "2")
    field(TWST, "Beam On")
    field(THVL, "3")
    field(THST, "TREF event")
}
record(mbbo, "$(P)ChopTrefTrW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chopper TREF trigger select")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopTrefTr")
    field(SDIS, "$(P)ChopTrefTrS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "Extract")
    field(ONVL, "1")
    field(ONST, "Cycle Start")
    field(TWVL, "2")
    field(TWST, "Beam On")
    field(THVL, "3")
    field(THST, "TREF event")
}
record(mbbi, "$(P)ChopTrefTrR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chopper TREF trigger select")
    field(INP,  "@asyn($(PORT))ChopTrefTr")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopTrefTrS")
    field(ZRVL, "0")
    field(ZRST, "Extract")
    field(ONVL, "1")
    field(ONST, "Cycle Start")
    field(TWVL, "2")
    field(TWST, "Beam On")
    field(THVL, "3")
    field(THST, "TREF event")
}
record(mbbo, "$(P)ChopTrefTrS")
{
    field(DOL,  "$(P)ChopTrefTrR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopTrefTr PP")
    field(ZRVL, "0")
    field(ZRST, "Extract")
    field(ONVL, "1")
    field(ONST, "Cycle Start")
    field(TWVL, "2")
    field(TWST, "Beam On")
    field(THVL, "3")
    field(THST, "TREF event")
}
record(mbbo, "$(P)ChopTrefFr")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "TREF frequency select")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)ChopTrefFrW PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)ChopTrefFrW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "TREF frequency select")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopTrefFr")
    field(SDIS, "$(P)ChopTrefFrS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbi, "$(P)ChopTrefFrR")
{
    field(DTYP, "asynInt32")
    field(DESC, "TREF frequency select")
    field(INP,  "@asyn($(PORT))ChopTrefFr")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopTrefFrS")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)ChopTrefFrS")
{
    field(DOL,  "$(P)ChopTrefFrR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopTrefFr PP")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(longout, "$(P)ChopRtdlOf")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chopper RTDL frame offset")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)ChopRtdlOfW PP")
}
record(longout, "$(P)ChopRtdlOfW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chopper RTDL frame offset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopRtdlOf")
    field(SDIS, "$(P)ChopRtdlOfS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopRtdlOfR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chopper RTDL frame offset")
    field(INP,  "@asyn($(PORT))ChopRtdlOf")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopRtdlOfS")
}
record(longout, "$(P)ChopRtdlOfS")
{
    field(DOL,  "$(P)ChopRtdlOfR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopRtdlOf PP")
}
record(longout, "$(P)ChopTrefEv")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop TREF event trig [0:255]")
    field(PINI, "YES")
    field(VAL,  "39")
    field(OUT,  "$(P)ChopTrefEvW PP")
}
record(longout, "$(P)ChopTrefEvW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop TREF event trig [0:255]")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopTrefEv")
    field(SDIS, "$(P)ChopTrefEvS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopTrefEvR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop TREF event trig [0:255]")
    field(INP,  "@asyn($(PORT))ChopTrefEv")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopTrefEvS")
}
record(longout, "$(P)ChopTrefEvS")
{
    field(DOL,  "$(P)ChopTrefEvR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopTrefEv PP")
}
record(longout, "$(P)ChopHystML")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop HYST minimum low [0:7]")
    field(PINI, "YES")
    field(VAL,  "4")
    field(OUT,  "$(P)ChopHystMLW PP")
}
record(longout, "$(P)ChopHystMLW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop HYST minimum low [0:7]")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopHystML")
    field(SDIS, "$(P)ChopHystMLS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopHystMLR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop HYST minimum low [0:7]")
    field(INP,  "@asyn($(PORT))ChopHystML")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopHystMLS")
}
record(longout, "$(P)ChopHystMLS")
{
    field(DOL,  "$(P)ChopHystMLR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopHystML PP")
}
record(longout, "$(P)ChopHystMH")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop HYST minimum high [0:7]")
    field(PINI, "YES")
    field(VAL,  "4")
    field(OUT,  "$(P)ChopHystMHW PP")
}
record(longout, "$(P)ChopHystMHW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop HYST minimum high [0:7]")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopHystMH")
    field(SDIS, "$(P)ChopHystMHS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)ChopHystMHR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop HYST minimum high [0:7]")
    field(INP,  "@asyn($(PORT))ChopHystMH")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopHystMHS")
}
record(longout, "$(P)ChopHystMHS")
{
    field(DOL,  "$(P)ChopHystMHR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopHystMH PP")
}
record(mbbo, "$(P)ChopFreqCn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop frequency count control")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)ChopFreqCnW PP")
    field(ZRVL, "0")
    field(ZRST, "strobe at X")
    field(ONVL, " 1")
    field(ONST, "strobe at X-1")
    field(TWVL, " 2")
    field(TWST, "strobe at X-2")
}
record(mbbo, "$(P)ChopFreqCnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop frequency count control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFreqCn")
    field(SDIS, "$(P)ChopFreqCnS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "strobe at X")
    field(ONVL, " 1")
    field(ONST, "strobe at X-1")
    field(TWVL, " 2")
    field(TWST, "strobe at X-2")
}
record(mbbi, "$(P)ChopFreqCnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop frequency count control")
    field(INP,  "@asyn($(PORT))ChopFreqCn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFreqCnS")
    field(ZRVL, "0")
    field(ZRST, "strobe at X")
    field(ONVL, " 1")
    field(ONST, "strobe at X-1")
    field(TWVL, " 2")
    field(TWST, "strobe at X-2")
}
record(mbbo, "$(P)ChopFreqCnS")
{
    field(DOL,  "$(P)ChopFreqCnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFreqCn PP")
    field(ZRVL, "0")
    field(ZRST, "strobe at X")
    field(ONVL, " 1")
    field(ONST, "strobe at X-1")
    field(TWVL, " 2")
    field(TWST, "strobe at X-2")
}
record(bo, "$(P)ChopFreqCy")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop frequency cycle select")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)ChopFreqCyW PP")
    field(ZNAM, "Present cycle number")
    field(ONAM, "Next cycle number")
}
record(bo, "$(P)ChopFreqCyW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop frequency cycle select")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopFreqCy")
    field(SDIS, "$(P)ChopFreqCyS.PACT")
    field(DISV, "1")
    field(ZNAM, "Present cycle number")
    field(ONAM, "Next cycle number")
}
record(bi, "$(P)ChopFreqCyR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop frequency cycle select")
    field(INP,  "@asyn($(PORT))ChopFreqCy")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopFreqCyS")
    field(ZNAM, "Present cycle number")
    field(ONAM, "Next cycle number")
}
record(bo, "$(P)ChopFreqCyS")
{
    field(DOL,  "$(P)ChopFreqCyR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopFreqCy PP")
    field(ZNAM, "Present cycle number")
    field(ONAM, "Next cycle number")
}
record(bo, "$(P)ChopSweep")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop sweep enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)ChopSweepW PP")
    field(ZNAM, "TOF fixed off")
    field(ONAM, "TOF fract off")
}
record(bo, "$(P)ChopSweepW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chop sweep enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ChopSweep")
    field(SDIS, "$(P)ChopSweepS.PACT")
    field(DISV, "1")
    field(ZNAM, "TOF fixed off")
    field(ONAM, "TOF fract off")
}
record(bi, "$(P)ChopSweepR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chop sweep enable")
    field(INP,  "@asyn($(PORT))ChopSweep")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)ChopSweepS")
    field(ZNAM, "TOF fixed off")
    field(ONAM, "TOF fract off")
}
record(bo, "$(P)ChopSweepS")
{
    field(DOL,  "$(P)ChopSweepR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)ChopSweep PP")
    field(ZNAM, "TOF fixed off")
    field(ONAM, "TOF fract off")
}
record(longout, "$(P)STsyncDelM")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Synth mast strobe max delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)STsyncDelMW PP")
}
record(longout, "$(P)STsyncDelMW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Synth mast strobe max delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))STsyncDelM")
    field(SDIS, "$(P)STsyncDelMS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)STsyncDelMR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Synth mast strobe max delay")
    field(INP,  "@asyn($(PORT))STsyncDelM")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)STsyncDelMS")
}
record(longout, "$(P)STsyncDelMS")
{
    field(DOL,  "$(P)STsyncDelMR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)STsyncDelM PP")
}
record(longout, "$(P)STsyncDelA")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Synth mast strobe delay adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)STsyncDelAW PP")
}
record(longout, "$(P)STsyncDelAW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Synth mast strobe delay adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))STsyncDelA")
    field(SDIS, "$(P)STsyncDelAS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)STsyncDelAR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Synth mast strobe delay adj")
    field(INP,  "@asyn($(PORT))STsyncDelA")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)STsyncDelAS")
}
record(longout, "$(P)STsyncDelAS")
{
    field(DOL,  "$(P)STsyncDelAR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)STsyncDelA PP")
}
record(longout, "$(P)STsyncFraA")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Synth mast strobe fract adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)STsyncFraAW PP")
}
record(longout, "$(P)STsyncFraAW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Synth mast strobe fract adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))STsyncFraA")
    field(SDIS, "$(P)STsyncFraAS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)STsyncFraAR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Synth mast strobe fract adj")
    field(INP,  "@asyn($(PORT))STsyncFraA")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)STsyncFraAS")
}
record(longout, "$(P)STsyncFraAS")
{
    field(DOL,  "$(P)STsyncFraAR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)STsyncFraA PP")
}
record(longout, "$(P)TimeHiFake")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Fake mode time high DWord")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)TimeHiFakeW PP")
}
record(longout, "$(P)TimeHiFakeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Fake mode time high DWord")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))TimeHiFake")
    field(SDIS, "$(P)TimeHiFakeS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)TimeHiFakeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Fake mode time high DWord")
    field(INP,  "@asyn($(PORT))TimeHiFake")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)TimeHiFakeS")
}
record(longout, "$(P)TimeHiFakeS")
{
    field(DOL,  "$(P)TimeHiFakeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)TimeHiFake PP")
}
record(mbbo, "$(P)Ch0:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch0:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch0:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch0:Mode")
    field(SDIS, "$(P)Ch0:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch0:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan0 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch0:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch0:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch0:ModeS")
{
    field(DOL,  "$(P)Ch0:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch0:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch1:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch1:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch1:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch1:Mode")
    field(SDIS, "$(P)Ch1:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch1:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan1 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch1:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch1:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch1:ModeS")
{
    field(DOL,  "$(P)Ch1:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch1:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch2:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch2:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch2:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch2:Mode")
    field(SDIS, "$(P)Ch2:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch2:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan2 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch2:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch2:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch2:ModeS")
{
    field(DOL,  "$(P)Ch2:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch2:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch3:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch3:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch3:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch3:Mode")
    field(SDIS, "$(P)Ch3:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch3:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan3 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch3:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch3:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch3:ModeS")
{
    field(DOL,  "$(P)Ch3:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch3:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch4:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch4:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch4:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch4:Mode")
    field(SDIS, "$(P)Ch4:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch4:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan4 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch4:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch4:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch4:ModeS")
{
    field(DOL,  "$(P)Ch4:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch4:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch5:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch5:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch5:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch5:Mode")
    field(SDIS, "$(P)Ch5:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch5:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan5 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch5:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch5:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch5:ModeS")
{
    field(DOL,  "$(P)Ch5:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch5:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch6:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch6:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch6:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch6:Mode")
    field(SDIS, "$(P)Ch6:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch6:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan6 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch6:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch6:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch6:ModeS")
{
    field(DOL,  "$(P)Ch6:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch6:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch7:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch7:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch7:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch7:Mode")
    field(SDIS, "$(P)Ch7:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch7:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan7 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch7:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch7:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch7:ModeS")
{
    field(DOL,  "$(P)Ch7:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch7:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch8:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch8:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch8:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch8:Mode")
    field(SDIS, "$(P)Ch8:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch8:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan8 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch8:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch8:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch8:ModeS")
{
    field(DOL,  "$(P)Ch8:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch8:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch9:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch9:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch9:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch9:Mode")
    field(SDIS, "$(P)Ch9:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch9:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan9 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch9:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch9:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch9:ModeS")
{
    field(DOL,  "$(P)Ch9:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch9:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch10:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch10:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch10:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch10:Mode")
    field(SDIS, "$(P)Ch10:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch10:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan10 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch10:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch10:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch10:ModeS")
{
    field(DOL,  "$(P)Ch10:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch10:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch11:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch11:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch11:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch11:Mode")
    field(SDIS, "$(P)Ch11:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch11:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan11 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch11:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch11:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch11:ModeS")
{
    field(DOL,  "$(P)Ch11:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch11:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch12:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch12:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch12:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch12:Mode")
    field(SDIS, "$(P)Ch12:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch12:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan12 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch12:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch12:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch12:ModeS")
{
    field(DOL,  "$(P)Ch12:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch12:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch13:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch13:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch13:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch13:Mode")
    field(SDIS, "$(P)Ch13:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch13:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan13 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch13:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch13:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch13:ModeS")
{
    field(DOL,  "$(P)Ch13:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch13:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch14:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch14:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch14:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch14:Mode")
    field(SDIS, "$(P)Ch14:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch14:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan14 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch14:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch14:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch14:ModeS")
{
    field(DOL,  "$(P)Ch14:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch14:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch15:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch15:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch15:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch15:Mode")
    field(SDIS, "$(P)Ch15:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch15:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan15 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch15:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch15:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch15:ModeS")
{
    field(DOL,  "$(P)Ch15:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch15:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch16:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch16:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch16:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch16:Mode")
    field(SDIS, "$(P)Ch16:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch16:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan16 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch16:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch16:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch16:ModeS")
{
    field(DOL,  "$(P)Ch16:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch16:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch17:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch17:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch17:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch17:Mode")
    field(SDIS, "$(P)Ch17:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch17:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan17 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch17:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch17:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch17:ModeS")
{
    field(DOL,  "$(P)Ch17:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch17:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch18:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch18:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch18:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch18:Mode")
    field(SDIS, "$(P)Ch18:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch18:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan18 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch18:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch18:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch18:ModeS")
{
    field(DOL,  "$(P)Ch18:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch18:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch19:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch19:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch19:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch19:Mode")
    field(SDIS, "$(P)Ch19:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch19:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan19 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch19:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch19:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch19:ModeS")
{
    field(DOL,  "$(P)Ch19:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch19:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch20:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch20:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch20:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch20:Mode")
    field(SDIS, "$(P)Ch20:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch20:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan20 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch20:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch20:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch20:ModeS")
{
    field(DOL,  "$(P)Ch20:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch20:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch21:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch21:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch21:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch21:Mode")
    field(SDIS, "$(P)Ch21:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch21:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan21 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch21:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch21:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch21:ModeS")
{
    field(DOL,  "$(P)Ch21:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch21:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch22:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch22:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch22:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch22:Mode")
    field(SDIS, "$(P)Ch22:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch22:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan22 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch22:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch22:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch22:ModeS")
{
    field(DOL,  "$(P)Ch22:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch22:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch23:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch23:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch23:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch23:Mode")
    field(SDIS, "$(P)Ch23:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch23:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan23 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch23:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch23:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch23:ModeS")
{
    field(DOL,  "$(P)Ch23:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch23:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch24:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch24:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch24:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch24:Mode")
    field(SDIS, "$(P)Ch24:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch24:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan24 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch24:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch24:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch24:ModeS")
{
    field(DOL,  "$(P)Ch24:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch24:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch25:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch25:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch25:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch25:Mode")
    field(SDIS, "$(P)Ch25:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch25:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan25 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch25:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch25:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch25:ModeS")
{
    field(DOL,  "$(P)Ch25:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch25:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch26:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch26:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch26:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch26:Mode")
    field(SDIS, "$(P)Ch26:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch26:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan26 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch26:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch26:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch26:ModeS")
{
    field(DOL,  "$(P)Ch26:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch26:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch27:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch27:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch27:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch27:Mode")
    field(SDIS, "$(P)Ch27:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch27:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan27 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch27:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch27:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch27:ModeS")
{
    field(DOL,  "$(P)Ch27:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch27:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch28:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch28:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch28:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch28:Mode")
    field(SDIS, "$(P)Ch28:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch28:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan28 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch28:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch28:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch28:ModeS")
{
    field(DOL,  "$(P)Ch28:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch28:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch29:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch29:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch29:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch29:Mode")
    field(SDIS, "$(P)Ch29:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch29:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan29 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch29:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch29:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch29:ModeS")
{
    field(DOL,  "$(P)Ch29:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch29:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch30:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch30:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch30:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch30:Mode")
    field(SDIS, "$(P)Ch30:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch30:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan30 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch30:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch30:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch30:ModeS")
{
    field(DOL,  "$(P)Ch30:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch30:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch31:Mode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge detection mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch31:ModeW PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch31:ModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch31:Mode")
    field(SDIS, "$(P)Ch31:ModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbi, "$(P)Ch31:ModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan31 edge detection mode")
    field(INP,  "@asyn($(PORT))Ch31:Mode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch31:ModeS")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)Ch31:ModeS")
{
    field(DOL,  "$(P)Ch31:ModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch31:Mode PP")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(longout, "$(P)Ch0:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch0:PixIdW PP")
}
record(longout, "$(P)Ch0:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch0:PixId")
    field(SDIS, "$(P)Ch0:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch0:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan0 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch0:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch0:PixIdS")
}
record(longout, "$(P)Ch0:PixIdS")
{
    field(DOL,  "$(P)Ch0:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch0:PixId PP")
}
record(longout, "$(P)Ch1:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch1:PixIdW PP")
}
record(longout, "$(P)Ch1:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch1:PixId")
    field(SDIS, "$(P)Ch1:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch1:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan1 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch1:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch1:PixIdS")
}
record(longout, "$(P)Ch1:PixIdS")
{
    field(DOL,  "$(P)Ch1:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch1:PixId PP")
}
record(longout, "$(P)Ch2:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch2:PixIdW PP")
}
record(longout, "$(P)Ch2:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch2:PixId")
    field(SDIS, "$(P)Ch2:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch2:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan2 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch2:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch2:PixIdS")
}
record(longout, "$(P)Ch2:PixIdS")
{
    field(DOL,  "$(P)Ch2:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch2:PixId PP")
}
record(longout, "$(P)Ch3:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch3:PixIdW PP")
}
record(longout, "$(P)Ch3:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch3:PixId")
    field(SDIS, "$(P)Ch3:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch3:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan3 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch3:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch3:PixIdS")
}
record(longout, "$(P)Ch3:PixIdS")
{
    field(DOL,  "$(P)Ch3:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch3:PixId PP")
}
record(longout, "$(P)Ch4:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch4:PixIdW PP")
}
record(longout, "$(P)Ch4:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch4:PixId")
    field(SDIS, "$(P)Ch4:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch4:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan4 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch4:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch4:PixIdS")
}
record(longout, "$(P)Ch4:PixIdS")
{
    field(DOL,  "$(P)Ch4:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch4:PixId PP")
}
record(longout, "$(P)Ch5:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch5:PixIdW PP")
}
record(longout, "$(P)Ch5:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch5:PixId")
    field(SDIS, "$(P)Ch5:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch5:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan5 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch5:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch5:PixIdS")
}
record(longout, "$(P)Ch5:PixIdS")
{
    field(DOL,  "$(P)Ch5:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch5:PixId PP")
}
record(longout, "$(P)Ch6:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch6:PixIdW PP")
}
record(longout, "$(P)Ch6:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch6:PixId")
    field(SDIS, "$(P)Ch6:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch6:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan6 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch6:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch6:PixIdS")
}
record(longout, "$(P)Ch6:PixIdS")
{
    field(DOL,  "$(P)Ch6:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch6:PixId PP")
}
record(longout, "$(P)Ch7:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch7:PixIdW PP")
}
record(longout, "$(P)Ch7:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch7:PixId")
    field(SDIS, "$(P)Ch7:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch7:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan7 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch7:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch7:PixIdS")
}
record(longout, "$(P)Ch7:PixIdS")
{
    field(DOL,  "$(P)Ch7:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch7:PixId PP")
}
record(longout, "$(P)Ch8:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch8:PixIdW PP")
}
record(longout, "$(P)Ch8:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch8:PixId")
    field(SDIS, "$(P)Ch8:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch8:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan8 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch8:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch8:PixIdS")
}
record(longout, "$(P)Ch8:PixIdS")
{
    field(DOL,  "$(P)Ch8:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch8:PixId PP")
}
record(longout, "$(P)Ch9:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch9:PixIdW PP")
}
record(longout, "$(P)Ch9:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch9:PixId")
    field(SDIS, "$(P)Ch9:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch9:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan9 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch9:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch9:PixIdS")
}
record(longout, "$(P)Ch9:PixIdS")
{
    field(DOL,  "$(P)Ch9:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch9:PixId PP")
}
record(longout, "$(P)Ch10:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch10:PixIdW PP")
}
record(longout, "$(P)Ch10:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch10:PixId")
    field(SDIS, "$(P)Ch10:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch10:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan10 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch10:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch10:PixIdS")
}
record(longout, "$(P)Ch10:PixIdS")
{
    field(DOL,  "$(P)Ch10:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch10:PixId PP")
}
record(longout, "$(P)Ch11:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch11:PixIdW PP")
}
record(longout, "$(P)Ch11:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch11:PixId")
    field(SDIS, "$(P)Ch11:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch11:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan11 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch11:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch11:PixIdS")
}
record(longout, "$(P)Ch11:PixIdS")
{
    field(DOL,  "$(P)Ch11:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch11:PixId PP")
}
record(longout, "$(P)Ch12:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch12:PixIdW PP")
}
record(longout, "$(P)Ch12:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch12:PixId")
    field(SDIS, "$(P)Ch12:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch12:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan12 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch12:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch12:PixIdS")
}
record(longout, "$(P)Ch12:PixIdS")
{
    field(DOL,  "$(P)Ch12:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch12:PixId PP")
}
record(longout, "$(P)Ch13:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch13:PixIdW PP")
}
record(longout, "$(P)Ch13:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch13:PixId")
    field(SDIS, "$(P)Ch13:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch13:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan13 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch13:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch13:PixIdS")
}
record(longout, "$(P)Ch13:PixIdS")
{
    field(DOL,  "$(P)Ch13:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch13:PixId PP")
}
record(longout, "$(P)Ch14:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch14:PixIdW PP")
}
record(longout, "$(P)Ch14:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch14:PixId")
    field(SDIS, "$(P)Ch14:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch14:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan14 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch14:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch14:PixIdS")
}
record(longout, "$(P)Ch14:PixIdS")
{
    field(DOL,  "$(P)Ch14:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch14:PixId PP")
}
record(longout, "$(P)Ch15:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch15:PixIdW PP")
}
record(longout, "$(P)Ch15:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch15:PixId")
    field(SDIS, "$(P)Ch15:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch15:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan15 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch15:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch15:PixIdS")
}
record(longout, "$(P)Ch15:PixIdS")
{
    field(DOL,  "$(P)Ch15:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch15:PixId PP")
}
record(longout, "$(P)Ch16:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch16:PixIdW PP")
}
record(longout, "$(P)Ch16:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch16:PixId")
    field(SDIS, "$(P)Ch16:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch16:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan16 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch16:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch16:PixIdS")
}
record(longout, "$(P)Ch16:PixIdS")
{
    field(DOL,  "$(P)Ch16:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch16:PixId PP")
}
record(longout, "$(P)Ch17:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch17:PixIdW PP")
}
record(longout, "$(P)Ch17:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch17:PixId")
    field(SDIS, "$(P)Ch17:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch17:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan17 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch17:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch17:PixIdS")
}
record(longout, "$(P)Ch17:PixIdS")
{
    field(DOL,  "$(P)Ch17:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch17:PixId PP")
}
record(longout, "$(P)Ch18:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch18:PixIdW PP")
}
record(longout, "$(P)Ch18:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch18:PixId")
    field(SDIS, "$(P)Ch18:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch18:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan18 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch18:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch18:PixIdS")
}
record(longout, "$(P)Ch18:PixIdS")
{
    field(DOL,  "$(P)Ch18:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch18:PixId PP")
}
record(longout, "$(P)Ch19:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch19:PixIdW PP")
}
record(longout, "$(P)Ch19:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch19:PixId")
    field(SDIS, "$(P)Ch19:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch19:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan19 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch19:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch19:PixIdS")
}
record(longout, "$(P)Ch19:PixIdS")
{
    field(DOL,  "$(P)Ch19:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch19:PixId PP")
}
record(longout, "$(P)Ch20:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch20:PixIdW PP")
}
record(longout, "$(P)Ch20:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch20:PixId")
    field(SDIS, "$(P)Ch20:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch20:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan20 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch20:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch20:PixIdS")
}
record(longout, "$(P)Ch20:PixIdS")
{
    field(DOL,  "$(P)Ch20:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch20:PixId PP")
}
record(longout, "$(P)Ch21:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch21:PixIdW PP")
}
record(longout, "$(P)Ch21:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch21:PixId")
    field(SDIS, "$(P)Ch21:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch21:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan21 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch21:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch21:PixIdS")
}
record(longout, "$(P)Ch21:PixIdS")
{
    field(DOL,  "$(P)Ch21:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch21:PixId PP")
}
record(longout, "$(P)Ch22:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch22:PixIdW PP")
}
record(longout, "$(P)Ch22:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch22:PixId")
    field(SDIS, "$(P)Ch22:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch22:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan22 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch22:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch22:PixIdS")
}
record(longout, "$(P)Ch22:PixIdS")
{
    field(DOL,  "$(P)Ch22:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch22:PixId PP")
}
record(longout, "$(P)Ch23:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch23:PixIdW PP")
}
record(longout, "$(P)Ch23:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch23:PixId")
    field(SDIS, "$(P)Ch23:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch23:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan23 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch23:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch23:PixIdS")
}
record(longout, "$(P)Ch23:PixIdS")
{
    field(DOL,  "$(P)Ch23:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch23:PixId PP")
}
record(longout, "$(P)Ch24:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch24:PixIdW PP")
}
record(longout, "$(P)Ch24:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch24:PixId")
    field(SDIS, "$(P)Ch24:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch24:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan24 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch24:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch24:PixIdS")
}
record(longout, "$(P)Ch24:PixIdS")
{
    field(DOL,  "$(P)Ch24:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch24:PixId PP")
}
record(longout, "$(P)Ch25:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch25:PixIdW PP")
}
record(longout, "$(P)Ch25:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch25:PixId")
    field(SDIS, "$(P)Ch25:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch25:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan25 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch25:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch25:PixIdS")
}
record(longout, "$(P)Ch25:PixIdS")
{
    field(DOL,  "$(P)Ch25:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch25:PixId PP")
}
record(longout, "$(P)Ch26:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch26:PixIdW PP")
}
record(longout, "$(P)Ch26:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch26:PixId")
    field(SDIS, "$(P)Ch26:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch26:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan26 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch26:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch26:PixIdS")
}
record(longout, "$(P)Ch26:PixIdS")
{
    field(DOL,  "$(P)Ch26:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch26:PixId PP")
}
record(longout, "$(P)Ch27:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch27:PixIdW PP")
}
record(longout, "$(P)Ch27:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch27:PixId")
    field(SDIS, "$(P)Ch27:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch27:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan27 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch27:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch27:PixIdS")
}
record(longout, "$(P)Ch27:PixIdS")
{
    field(DOL,  "$(P)Ch27:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch27:PixId PP")
}
record(longout, "$(P)Ch28:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch28:PixIdW PP")
}
record(longout, "$(P)Ch28:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch28:PixId")
    field(SDIS, "$(P)Ch28:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch28:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan28 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch28:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch28:PixIdS")
}
record(longout, "$(P)Ch28:PixIdS")
{
    field(DOL,  "$(P)Ch28:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch28:PixId PP")
}
record(longout, "$(P)Ch29:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch29:PixIdW PP")
}
record(longout, "$(P)Ch29:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch29:PixId")
    field(SDIS, "$(P)Ch29:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch29:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan29 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch29:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch29:PixIdS")
}
record(longout, "$(P)Ch29:PixIdS")
{
    field(DOL,  "$(P)Ch29:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch29:PixId PP")
}
record(longout, "$(P)Ch30:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch30:PixIdW PP")
}
record(longout, "$(P)Ch30:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch30:PixId")
    field(SDIS, "$(P)Ch30:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch30:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan30 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch30:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch30:PixIdS")
}
record(longout, "$(P)Ch30:PixIdS")
{
    field(DOL,  "$(P)Ch30:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch30:PixId PP")
}
record(longout, "$(P)Ch31:PixId")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge pixel id")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch31:PixIdW PP")
}
record(longout, "$(P)Ch31:PixIdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch31:PixId")
    field(SDIS, "$(P)Ch31:PixIdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch31:PixIdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan31 edge pixel id")
    field(INP,  "@asyn($(PORT))Ch31:PixId")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch31:PixIdS")
}
record(longout, "$(P)Ch31:PixIdS")
{
    field(DOL,  "$(P)Ch31:PixIdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch31:PixId PP")
}
record(longout, "$(P)Ch0:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch0:CycleW PP")
}
record(longout, "$(P)Ch0:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch0:Cycle")
    field(SDIS, "$(P)Ch0:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch0:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan0 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch0:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch0:CycleS")
}
record(longout, "$(P)Ch0:CycleS")
{
    field(DOL,  "$(P)Ch0:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch0:Cycle PP")
}
record(longout, "$(P)Ch1:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch1:CycleW PP")
}
record(longout, "$(P)Ch1:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch1:Cycle")
    field(SDIS, "$(P)Ch1:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch1:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan1 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch1:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch1:CycleS")
}
record(longout, "$(P)Ch1:CycleS")
{
    field(DOL,  "$(P)Ch1:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch1:Cycle PP")
}
record(longout, "$(P)Ch2:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch2:CycleW PP")
}
record(longout, "$(P)Ch2:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch2:Cycle")
    field(SDIS, "$(P)Ch2:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch2:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan2 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch2:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch2:CycleS")
}
record(longout, "$(P)Ch2:CycleS")
{
    field(DOL,  "$(P)Ch2:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch2:Cycle PP")
}
record(longout, "$(P)Ch3:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch3:CycleW PP")
}
record(longout, "$(P)Ch3:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch3:Cycle")
    field(SDIS, "$(P)Ch3:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch3:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan3 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch3:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch3:CycleS")
}
record(longout, "$(P)Ch3:CycleS")
{
    field(DOL,  "$(P)Ch3:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch3:Cycle PP")
}
record(longout, "$(P)Ch4:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch4:CycleW PP")
}
record(longout, "$(P)Ch4:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch4:Cycle")
    field(SDIS, "$(P)Ch4:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch4:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan4 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch4:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch4:CycleS")
}
record(longout, "$(P)Ch4:CycleS")
{
    field(DOL,  "$(P)Ch4:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch4:Cycle PP")
}
record(longout, "$(P)Ch5:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch5:CycleW PP")
}
record(longout, "$(P)Ch5:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch5:Cycle")
    field(SDIS, "$(P)Ch5:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch5:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan5 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch5:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch5:CycleS")
}
record(longout, "$(P)Ch5:CycleS")
{
    field(DOL,  "$(P)Ch5:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch5:Cycle PP")
}
record(longout, "$(P)Ch6:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch6:CycleW PP")
}
record(longout, "$(P)Ch6:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch6:Cycle")
    field(SDIS, "$(P)Ch6:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch6:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan6 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch6:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch6:CycleS")
}
record(longout, "$(P)Ch6:CycleS")
{
    field(DOL,  "$(P)Ch6:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch6:Cycle PP")
}
record(longout, "$(P)Ch7:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch7:CycleW PP")
}
record(longout, "$(P)Ch7:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch7:Cycle")
    field(SDIS, "$(P)Ch7:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch7:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan7 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch7:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch7:CycleS")
}
record(longout, "$(P)Ch7:CycleS")
{
    field(DOL,  "$(P)Ch7:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch7:Cycle PP")
}
record(longout, "$(P)Ch8:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch8:CycleW PP")
}
record(longout, "$(P)Ch8:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch8:Cycle")
    field(SDIS, "$(P)Ch8:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch8:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan8 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch8:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch8:CycleS")
}
record(longout, "$(P)Ch8:CycleS")
{
    field(DOL,  "$(P)Ch8:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch8:Cycle PP")
}
record(longout, "$(P)Ch9:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch9:CycleW PP")
}
record(longout, "$(P)Ch9:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch9:Cycle")
    field(SDIS, "$(P)Ch9:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch9:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan9 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch9:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch9:CycleS")
}
record(longout, "$(P)Ch9:CycleS")
{
    field(DOL,  "$(P)Ch9:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch9:Cycle PP")
}
record(longout, "$(P)Ch10:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch10:CycleW PP")
}
record(longout, "$(P)Ch10:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch10:Cycle")
    field(SDIS, "$(P)Ch10:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch10:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan10 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch10:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch10:CycleS")
}
record(longout, "$(P)Ch10:CycleS")
{
    field(DOL,  "$(P)Ch10:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch10:Cycle PP")
}
record(longout, "$(P)Ch11:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch11:CycleW PP")
}
record(longout, "$(P)Ch11:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch11:Cycle")
    field(SDIS, "$(P)Ch11:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch11:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan11 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch11:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch11:CycleS")
}
record(longout, "$(P)Ch11:CycleS")
{
    field(DOL,  "$(P)Ch11:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch11:Cycle PP")
}
record(longout, "$(P)Ch12:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch12:CycleW PP")
}
record(longout, "$(P)Ch12:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch12:Cycle")
    field(SDIS, "$(P)Ch12:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch12:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan12 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch12:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch12:CycleS")
}
record(longout, "$(P)Ch12:CycleS")
{
    field(DOL,  "$(P)Ch12:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch12:Cycle PP")
}
record(longout, "$(P)Ch13:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch13:CycleW PP")
}
record(longout, "$(P)Ch13:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch13:Cycle")
    field(SDIS, "$(P)Ch13:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch13:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan13 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch13:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch13:CycleS")
}
record(longout, "$(P)Ch13:CycleS")
{
    field(DOL,  "$(P)Ch13:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch13:Cycle PP")
}
record(longout, "$(P)Ch14:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch14:CycleW PP")
}
record(longout, "$(P)Ch14:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch14:Cycle")
    field(SDIS, "$(P)Ch14:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch14:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan14 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch14:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch14:CycleS")
}
record(longout, "$(P)Ch14:CycleS")
{
    field(DOL,  "$(P)Ch14:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch14:Cycle PP")
}
record(longout, "$(P)Ch15:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch15:CycleW PP")
}
record(longout, "$(P)Ch15:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch15:Cycle")
    field(SDIS, "$(P)Ch15:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch15:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan15 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch15:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch15:CycleS")
}
record(longout, "$(P)Ch15:CycleS")
{
    field(DOL,  "$(P)Ch15:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch15:Cycle PP")
}
record(longout, "$(P)Ch16:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch16:CycleW PP")
}
record(longout, "$(P)Ch16:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch16:Cycle")
    field(SDIS, "$(P)Ch16:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch16:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan16 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch16:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch16:CycleS")
}
record(longout, "$(P)Ch16:CycleS")
{
    field(DOL,  "$(P)Ch16:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch16:Cycle PP")
}
record(longout, "$(P)Ch17:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch17:CycleW PP")
}
record(longout, "$(P)Ch17:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch17:Cycle")
    field(SDIS, "$(P)Ch17:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch17:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan17 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch17:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch17:CycleS")
}
record(longout, "$(P)Ch17:CycleS")
{
    field(DOL,  "$(P)Ch17:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch17:Cycle PP")
}
record(longout, "$(P)Ch18:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch18:CycleW PP")
}
record(longout, "$(P)Ch18:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch18:Cycle")
    field(SDIS, "$(P)Ch18:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch18:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan18 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch18:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch18:CycleS")
}
record(longout, "$(P)Ch18:CycleS")
{
    field(DOL,  "$(P)Ch18:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch18:Cycle PP")
}
record(longout, "$(P)Ch19:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch19:CycleW PP")
}
record(longout, "$(P)Ch19:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch19:Cycle")
    field(SDIS, "$(P)Ch19:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch19:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan19 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch19:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch19:CycleS")
}
record(longout, "$(P)Ch19:CycleS")
{
    field(DOL,  "$(P)Ch19:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch19:Cycle PP")
}
record(longout, "$(P)Ch20:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch20:CycleW PP")
}
record(longout, "$(P)Ch20:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch20:Cycle")
    field(SDIS, "$(P)Ch20:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch20:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan20 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch20:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch20:CycleS")
}
record(longout, "$(P)Ch20:CycleS")
{
    field(DOL,  "$(P)Ch20:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch20:Cycle PP")
}
record(longout, "$(P)Ch21:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch21:CycleW PP")
}
record(longout, "$(P)Ch21:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch21:Cycle")
    field(SDIS, "$(P)Ch21:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch21:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan21 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch21:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch21:CycleS")
}
record(longout, "$(P)Ch21:CycleS")
{
    field(DOL,  "$(P)Ch21:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch21:Cycle PP")
}
record(longout, "$(P)Ch22:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch22:CycleW PP")
}
record(longout, "$(P)Ch22:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch22:Cycle")
    field(SDIS, "$(P)Ch22:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch22:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan22 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch22:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch22:CycleS")
}
record(longout, "$(P)Ch22:CycleS")
{
    field(DOL,  "$(P)Ch22:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch22:Cycle PP")
}
record(longout, "$(P)Ch23:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch23:CycleW PP")
}
record(longout, "$(P)Ch23:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch23:Cycle")
    field(SDIS, "$(P)Ch23:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch23:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan23 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch23:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch23:CycleS")
}
record(longout, "$(P)Ch23:CycleS")
{
    field(DOL,  "$(P)Ch23:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch23:Cycle PP")
}
record(longout, "$(P)Ch24:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch24:CycleW PP")
}
record(longout, "$(P)Ch24:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch24:Cycle")
    field(SDIS, "$(P)Ch24:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch24:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan24 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch24:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch24:CycleS")
}
record(longout, "$(P)Ch24:CycleS")
{
    field(DOL,  "$(P)Ch24:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch24:Cycle PP")
}
record(longout, "$(P)Ch25:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch25:CycleW PP")
}
record(longout, "$(P)Ch25:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch25:Cycle")
    field(SDIS, "$(P)Ch25:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch25:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan25 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch25:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch25:CycleS")
}
record(longout, "$(P)Ch25:CycleS")
{
    field(DOL,  "$(P)Ch25:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch25:Cycle PP")
}
record(longout, "$(P)Ch26:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch26:CycleW PP")
}
record(longout, "$(P)Ch26:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch26:Cycle")
    field(SDIS, "$(P)Ch26:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch26:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan26 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch26:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch26:CycleS")
}
record(longout, "$(P)Ch26:CycleS")
{
    field(DOL,  "$(P)Ch26:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch26:Cycle PP")
}
record(longout, "$(P)Ch27:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch27:CycleW PP")
}
record(longout, "$(P)Ch27:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch27:Cycle")
    field(SDIS, "$(P)Ch27:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch27:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan27 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch27:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch27:CycleS")
}
record(longout, "$(P)Ch27:CycleS")
{
    field(DOL,  "$(P)Ch27:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch27:Cycle PP")
}
record(longout, "$(P)Ch28:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch28:CycleW PP")
}
record(longout, "$(P)Ch28:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch28:Cycle")
    field(SDIS, "$(P)Ch28:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch28:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan28 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch28:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch28:CycleS")
}
record(longout, "$(P)Ch28:CycleS")
{
    field(DOL,  "$(P)Ch28:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch28:Cycle PP")
}
record(longout, "$(P)Ch29:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch29:CycleW PP")
}
record(longout, "$(P)Ch29:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch29:Cycle")
    field(SDIS, "$(P)Ch29:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch29:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan29 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch29:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch29:CycleS")
}
record(longout, "$(P)Ch29:CycleS")
{
    field(DOL,  "$(P)Ch29:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch29:Cycle PP")
}
record(longout, "$(P)Ch30:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch30:CycleW PP")
}
record(longout, "$(P)Ch30:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch30:Cycle")
    field(SDIS, "$(P)Ch30:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch30:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan30 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch30:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch30:CycleS")
}
record(longout, "$(P)Ch30:CycleS")
{
    field(DOL,  "$(P)Ch30:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch30:Cycle PP")
}
record(longout, "$(P)Ch31:Cycle")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge cycle number adj")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch31:CycleW PP")
}
record(longout, "$(P)Ch31:CycleW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch31:Cycle")
    field(SDIS, "$(P)Ch31:CycleS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch31:CycleR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan31 edge cycle number adj")
    field(INP,  "@asyn($(PORT))Ch31:Cycle")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch31:CycleS")
}
record(longout, "$(P)Ch31:CycleS")
{
    field(DOL,  "$(P)Ch31:CycleR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch31:Cycle PP")
}
record(longout, "$(P)Ch0:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch0:DelayW PP")
}
record(longout, "$(P)Ch0:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan0 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch0:Delay")
    field(SDIS, "$(P)Ch0:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch0:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan0 edge delay")
    field(INP,  "@asyn($(PORT))Ch0:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch0:DelayS")
}
record(longout, "$(P)Ch0:DelayS")
{
    field(DOL,  "$(P)Ch0:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch0:Delay PP")
}
record(longout, "$(P)Ch1:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch1:DelayW PP")
}
record(longout, "$(P)Ch1:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan1 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch1:Delay")
    field(SDIS, "$(P)Ch1:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch1:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan1 edge delay")
    field(INP,  "@asyn($(PORT))Ch1:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch1:DelayS")
}
record(longout, "$(P)Ch1:DelayS")
{
    field(DOL,  "$(P)Ch1:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch1:Delay PP")
}
record(longout, "$(P)Ch2:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch2:DelayW PP")
}
record(longout, "$(P)Ch2:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan2 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch2:Delay")
    field(SDIS, "$(P)Ch2:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch2:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan2 edge delay")
    field(INP,  "@asyn($(PORT))Ch2:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch2:DelayS")
}
record(longout, "$(P)Ch2:DelayS")
{
    field(DOL,  "$(P)Ch2:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch2:Delay PP")
}
record(longout, "$(P)Ch3:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch3:DelayW PP")
}
record(longout, "$(P)Ch3:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan3 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch3:Delay")
    field(SDIS, "$(P)Ch3:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch3:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan3 edge delay")
    field(INP,  "@asyn($(PORT))Ch3:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch3:DelayS")
}
record(longout, "$(P)Ch3:DelayS")
{
    field(DOL,  "$(P)Ch3:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch3:Delay PP")
}
record(longout, "$(P)Ch4:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch4:DelayW PP")
}
record(longout, "$(P)Ch4:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan4 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch4:Delay")
    field(SDIS, "$(P)Ch4:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch4:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan4 edge delay")
    field(INP,  "@asyn($(PORT))Ch4:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch4:DelayS")
}
record(longout, "$(P)Ch4:DelayS")
{
    field(DOL,  "$(P)Ch4:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch4:Delay PP")
}
record(longout, "$(P)Ch5:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch5:DelayW PP")
}
record(longout, "$(P)Ch5:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan5 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch5:Delay")
    field(SDIS, "$(P)Ch5:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch5:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan5 edge delay")
    field(INP,  "@asyn($(PORT))Ch5:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch5:DelayS")
}
record(longout, "$(P)Ch5:DelayS")
{
    field(DOL,  "$(P)Ch5:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch5:Delay PP")
}
record(longout, "$(P)Ch6:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch6:DelayW PP")
}
record(longout, "$(P)Ch6:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan6 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch6:Delay")
    field(SDIS, "$(P)Ch6:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch6:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan6 edge delay")
    field(INP,  "@asyn($(PORT))Ch6:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch6:DelayS")
}
record(longout, "$(P)Ch6:DelayS")
{
    field(DOL,  "$(P)Ch6:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch6:Delay PP")
}
record(longout, "$(P)Ch7:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch7:DelayW PP")
}
record(longout, "$(P)Ch7:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan7 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch7:Delay")
    field(SDIS, "$(P)Ch7:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch7:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan7 edge delay")
    field(INP,  "@asyn($(PORT))Ch7:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch7:DelayS")
}
record(longout, "$(P)Ch7:DelayS")
{
    field(DOL,  "$(P)Ch7:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch7:Delay PP")
}
record(longout, "$(P)Ch8:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch8:DelayW PP")
}
record(longout, "$(P)Ch8:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan8 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch8:Delay")
    field(SDIS, "$(P)Ch8:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch8:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan8 edge delay")
    field(INP,  "@asyn($(PORT))Ch8:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch8:DelayS")
}
record(longout, "$(P)Ch8:DelayS")
{
    field(DOL,  "$(P)Ch8:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch8:Delay PP")
}
record(longout, "$(P)Ch9:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch9:DelayW PP")
}
record(longout, "$(P)Ch9:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan9 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch9:Delay")
    field(SDIS, "$(P)Ch9:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch9:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan9 edge delay")
    field(INP,  "@asyn($(PORT))Ch9:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch9:DelayS")
}
record(longout, "$(P)Ch9:DelayS")
{
    field(DOL,  "$(P)Ch9:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch9:Delay PP")
}
record(longout, "$(P)Ch10:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch10:DelayW PP")
}
record(longout, "$(P)Ch10:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan10 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch10:Delay")
    field(SDIS, "$(P)Ch10:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch10:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan10 edge delay")
    field(INP,  "@asyn($(PORT))Ch10:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch10:DelayS")
}
record(longout, "$(P)Ch10:DelayS")
{
    field(DOL,  "$(P)Ch10:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch10:Delay PP")
}
record(longout, "$(P)Ch11:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch11:DelayW PP")
}
record(longout, "$(P)Ch11:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan11 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch11:Delay")
    field(SDIS, "$(P)Ch11:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch11:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan11 edge delay")
    field(INP,  "@asyn($(PORT))Ch11:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch11:DelayS")
}
record(longout, "$(P)Ch11:DelayS")
{
    field(DOL,  "$(P)Ch11:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch11:Delay PP")
}
record(longout, "$(P)Ch12:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch12:DelayW PP")
}
record(longout, "$(P)Ch12:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan12 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch12:Delay")
    field(SDIS, "$(P)Ch12:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch12:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan12 edge delay")
    field(INP,  "@asyn($(PORT))Ch12:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch12:DelayS")
}
record(longout, "$(P)Ch12:DelayS")
{
    field(DOL,  "$(P)Ch12:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch12:Delay PP")
}
record(longout, "$(P)Ch13:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch13:DelayW PP")
}
record(longout, "$(P)Ch13:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan13 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch13:Delay")
    field(SDIS, "$(P)Ch13:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch13:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan13 edge delay")
    field(INP,  "@asyn($(PORT))Ch13:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch13:DelayS")
}
record(longout, "$(P)Ch13:DelayS")
{
    field(DOL,  "$(P)Ch13:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch13:Delay PP")
}
record(longout, "$(P)Ch14:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch14:DelayW PP")
}
record(longout, "$(P)Ch14:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan14 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch14:Delay")
    field(SDIS, "$(P)Ch14:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch14:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan14 edge delay")
    field(INP,  "@asyn($(PORT))Ch14:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch14:DelayS")
}
record(longout, "$(P)Ch14:DelayS")
{
    field(DOL,  "$(P)Ch14:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch14:Delay PP")
}
record(longout, "$(P)Ch15:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch15:DelayW PP")
}
record(longout, "$(P)Ch15:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan15 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch15:Delay")
    field(SDIS, "$(P)Ch15:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch15:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan15 edge delay")
    field(INP,  "@asyn($(PORT))Ch15:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch15:DelayS")
}
record(longout, "$(P)Ch15:DelayS")
{
    field(DOL,  "$(P)Ch15:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch15:Delay PP")
}
record(longout, "$(P)Ch16:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch16:DelayW PP")
}
record(longout, "$(P)Ch16:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan16 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch16:Delay")
    field(SDIS, "$(P)Ch16:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch16:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan16 edge delay")
    field(INP,  "@asyn($(PORT))Ch16:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch16:DelayS")
}
record(longout, "$(P)Ch16:DelayS")
{
    field(DOL,  "$(P)Ch16:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch16:Delay PP")
}
record(longout, "$(P)Ch17:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch17:DelayW PP")
}
record(longout, "$(P)Ch17:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan17 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch17:Delay")
    field(SDIS, "$(P)Ch17:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch17:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan17 edge delay")
    field(INP,  "@asyn($(PORT))Ch17:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch17:DelayS")
}
record(longout, "$(P)Ch17:DelayS")
{
    field(DOL,  "$(P)Ch17:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch17:Delay PP")
}
record(longout, "$(P)Ch18:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch18:DelayW PP")
}
record(longout, "$(P)Ch18:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan18 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch18:Delay")
    field(SDIS, "$(P)Ch18:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch18:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan18 edge delay")
    field(INP,  "@asyn($(PORT))Ch18:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch18:DelayS")
}
record(longout, "$(P)Ch18:DelayS")
{
    field(DOL,  "$(P)Ch18:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch18:Delay PP")
}
record(longout, "$(P)Ch19:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch19:DelayW PP")
}
record(longout, "$(P)Ch19:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan19 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch19:Delay")
    field(SDIS, "$(P)Ch19:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch19:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan19 edge delay")
    field(INP,  "@asyn($(PORT))Ch19:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch19:DelayS")
}
record(longout, "$(P)Ch19:DelayS")
{
    field(DOL,  "$(P)Ch19:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch19:Delay PP")
}
record(longout, "$(P)Ch20:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch20:DelayW PP")
}
record(longout, "$(P)Ch20:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan20 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch20:Delay")
    field(SDIS, "$(P)Ch20:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch20:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan20 edge delay")
    field(INP,  "@asyn($(PORT))Ch20:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch20:DelayS")
}
record(longout, "$(P)Ch20:DelayS")
{
    field(DOL,  "$(P)Ch20:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch20:Delay PP")
}
record(longout, "$(P)Ch21:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch21:DelayW PP")
}
record(longout, "$(P)Ch21:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan21 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch21:Delay")
    field(SDIS, "$(P)Ch21:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch21:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan21 edge delay")
    field(INP,  "@asyn($(PORT))Ch21:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch21:DelayS")
}
record(longout, "$(P)Ch21:DelayS")
{
    field(DOL,  "$(P)Ch21:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch21:Delay PP")
}
record(longout, "$(P)Ch22:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch22:DelayW PP")
}
record(longout, "$(P)Ch22:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan22 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch22:Delay")
    field(SDIS, "$(P)Ch22:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch22:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan22 edge delay")
    field(INP,  "@asyn($(PORT))Ch22:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch22:DelayS")
}
record(longout, "$(P)Ch22:DelayS")
{
    field(DOL,  "$(P)Ch22:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch22:Delay PP")
}
record(longout, "$(P)Ch23:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch23:DelayW PP")
}
record(longout, "$(P)Ch23:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan23 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch23:Delay")
    field(SDIS, "$(P)Ch23:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch23:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan23 edge delay")
    field(INP,  "@asyn($(PORT))Ch23:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch23:DelayS")
}
record(longout, "$(P)Ch23:DelayS")
{
    field(DOL,  "$(P)Ch23:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch23:Delay PP")
}
record(longout, "$(P)Ch24:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch24:DelayW PP")
}
record(longout, "$(P)Ch24:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan24 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch24:Delay")
    field(SDIS, "$(P)Ch24:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch24:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan24 edge delay")
    field(INP,  "@asyn($(PORT))Ch24:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch24:DelayS")
}
record(longout, "$(P)Ch24:DelayS")
{
    field(DOL,  "$(P)Ch24:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch24:Delay PP")
}
record(longout, "$(P)Ch25:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch25:DelayW PP")
}
record(longout, "$(P)Ch25:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan25 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch25:Delay")
    field(SDIS, "$(P)Ch25:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch25:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan25 edge delay")
    field(INP,  "@asyn($(PORT))Ch25:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch25:DelayS")
}
record(longout, "$(P)Ch25:DelayS")
{
    field(DOL,  "$(P)Ch25:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch25:Delay PP")
}
record(longout, "$(P)Ch26:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch26:DelayW PP")
}
record(longout, "$(P)Ch26:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan26 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch26:Delay")
    field(SDIS, "$(P)Ch26:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch26:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan26 edge delay")
    field(INP,  "@asyn($(PORT))Ch26:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch26:DelayS")
}
record(longout, "$(P)Ch26:DelayS")
{
    field(DOL,  "$(P)Ch26:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch26:Delay PP")
}
record(longout, "$(P)Ch27:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch27:DelayW PP")
}
record(longout, "$(P)Ch27:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan27 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch27:Delay")
    field(SDIS, "$(P)Ch27:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch27:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan27 edge delay")
    field(INP,  "@asyn($(PORT))Ch27:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch27:DelayS")
}
record(longout, "$(P)Ch27:DelayS")
{
    field(DOL,  "$(P)Ch27:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch27:Delay PP")
}
record(longout, "$(P)Ch28:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch28:DelayW PP")
}
record(longout, "$(P)Ch28:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan28 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch28:Delay")
    field(SDIS, "$(P)Ch28:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch28:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan28 edge delay")
    field(INP,  "@asyn($(PORT))Ch28:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch28:DelayS")
}
record(longout, "$(P)Ch28:DelayS")
{
    field(DOL,  "$(P)Ch28:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch28:Delay PP")
}
record(longout, "$(P)Ch29:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch29:DelayW PP")
}
record(longout, "$(P)Ch29:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan29 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch29:Delay")
    field(SDIS, "$(P)Ch29:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch29:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan29 edge delay")
    field(INP,  "@asyn($(PORT))Ch29:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch29:DelayS")
}
record(longout, "$(P)Ch29:DelayS")
{
    field(DOL,  "$(P)Ch29:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch29:Delay PP")
}
record(longout, "$(P)Ch30:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch30:DelayW PP")
}
record(longout, "$(P)Ch30:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan30 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch30:Delay")
    field(SDIS, "$(P)Ch30:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch30:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan30 edge delay")
    field(INP,  "@asyn($(PORT))Ch30:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch30:DelayS")
}
record(longout, "$(P)Ch30:DelayS")
{
    field(DOL,  "$(P)Ch30:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch30:Delay PP")
}
record(longout, "$(P)Ch31:Delay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge delay")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Ch31:DelayW PP")
}
record(longout, "$(P)Ch31:DelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Chan31 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Ch31:Delay")
    field(SDIS, "$(P)Ch31:DelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)Ch31:DelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Chan31 edge delay")
    field(INP,  "@asyn($(PORT))Ch31:Delay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Ch31:DelayS")
}
record(longout, "$(P)Ch31:DelayS")
{
    field(DOL,  "$(P)Ch31:DelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Ch31:Delay PP")
}
record(bo, "$(P)Lvds0:En")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 RX/TX enable")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)Lvds0:EnW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds0:EnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds0:En")
    field(SDIS, "$(P)Lvds0:EnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds0:EnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan0 RX/TX enable")
    field(INP,  "@asyn($(PORT))Lvds0:En")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds0:EnS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds0:EnS")
{
    field(DOL,  "$(P)Lvds0:EnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds0:En PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds1:En")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 RX/TX enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds1:EnW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds1:EnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds1:En")
    field(SDIS, "$(P)Lvds1:EnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds1:EnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan1 RX/TX enable")
    field(INP,  "@asyn($(PORT))Lvds1:En")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds1:EnS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds1:EnS")
{
    field(DOL,  "$(P)Lvds1:EnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds1:En PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds2:En")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 RX/TX enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds2:EnW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds2:EnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds2:En")
    field(SDIS, "$(P)Lvds2:EnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds2:EnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan2 RX/TX enable")
    field(INP,  "@asyn($(PORT))Lvds2:En")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds2:EnS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds2:EnS")
{
    field(DOL,  "$(P)Lvds2:EnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds2:En PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds3:En")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 RX/TX enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds3:EnW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds3:EnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds3:En")
    field(SDIS, "$(P)Lvds3:EnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds3:EnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan3 RX/TX enable")
    field(INP,  "@asyn($(PORT))Lvds3:En")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds3:EnS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds3:EnS")
{
    field(DOL,  "$(P)Lvds3:EnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds3:En PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds4:En")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 RX/TX enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds4:EnW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds4:EnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds4:En")
    field(SDIS, "$(P)Lvds4:EnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds4:EnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan4 RX/TX enable")
    field(INP,  "@asyn($(PORT))Lvds4:En")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds4:EnS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds4:EnS")
{
    field(DOL,  "$(P)Lvds4:EnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds4:En PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds5:En")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 RX/TX enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds5:EnW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds5:EnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds5:En")
    field(SDIS, "$(P)Lvds5:EnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Lvds5:EnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan5 RX/TX enable")
    field(INP,  "@asyn($(PORT))Lvds5:En")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds5:EnS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds5:EnS")
{
    field(DOL,  "$(P)Lvds5:EnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds5:En PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)Lvds0:IgnE")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 ignore error pkts")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds0:IgnEW PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds0:IgnEW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds0:IgnE")
    field(SDIS, "$(P)Lvds0:IgnES.PACT")
    field(DISV, "1")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds0:IgnER")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan0 ignore error pkts")
    field(INP,  "@asyn($(PORT))Lvds0:IgnE")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds0:IgnES")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds0:IgnES")
{
    field(DOL,  "$(P)Lvds0:IgnER NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds0:IgnE PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds1:IgnE")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 ignore error pkts")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds1:IgnEW PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds1:IgnEW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds1:IgnE")
    field(SDIS, "$(P)Lvds1:IgnES.PACT")
    field(DISV, "1")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds1:IgnER")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan1 ignore error pkts")
    field(INP,  "@asyn($(PORT))Lvds1:IgnE")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds1:IgnES")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds1:IgnES")
{
    field(DOL,  "$(P)Lvds1:IgnER NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds1:IgnE PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds2:IgnE")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 ignore error pkts")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds2:IgnEW PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds2:IgnEW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds2:IgnE")
    field(SDIS, "$(P)Lvds2:IgnES.PACT")
    field(DISV, "1")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds2:IgnER")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan2 ignore error pkts")
    field(INP,  "@asyn($(PORT))Lvds2:IgnE")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds2:IgnES")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds2:IgnES")
{
    field(DOL,  "$(P)Lvds2:IgnER NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds2:IgnE PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds3:IgnE")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 ignore error pkts")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds3:IgnEW PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds3:IgnEW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds3:IgnE")
    field(SDIS, "$(P)Lvds3:IgnES.PACT")
    field(DISV, "1")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds3:IgnER")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan3 ignore error pkts")
    field(INP,  "@asyn($(PORT))Lvds3:IgnE")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds3:IgnES")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds3:IgnES")
{
    field(DOL,  "$(P)Lvds3:IgnER NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds3:IgnE PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds4:IgnE")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 ignore error pkts")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds4:IgnEW PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds4:IgnEW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds4:IgnE")
    field(SDIS, "$(P)Lvds4:IgnES.PACT")
    field(DISV, "1")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds4:IgnER")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan4 ignore error pkts")
    field(INP,  "@asyn($(PORT))Lvds4:IgnE")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds4:IgnES")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds4:IgnES")
{
    field(DOL,  "$(P)Lvds4:IgnER NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds4:IgnE PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds5:IgnE")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 ignore error pkts")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds5:IgnEW PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds5:IgnEW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds5:IgnE")
    field(SDIS, "$(P)Lvds5:IgnES.PACT")
    field(DISV, "1")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bi, "$(P)Lvds5:IgnER")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan5 ignore error pkts")
    field(INP,  "@asyn($(PORT))Lvds5:IgnE")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds5:IgnES")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds5:IgnES")
{
    field(DOL,  "$(P)Lvds5:IgnER NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds5:IgnE PP")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)Lvds0:Dis")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 disable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds0:DisW PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds0:DisW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds0:Dis")
    field(SDIS, "$(P)Lvds0:DisS.PACT")
    field(DISV, "1")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds0:DisR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan0 disable")
    field(INP,  "@asyn($(PORT))Lvds0:Dis")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds0:DisS")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds0:DisS")
{
    field(DOL,  "$(P)Lvds0:DisR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds0:Dis PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds1:Dis")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 disable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds1:DisW PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds1:DisW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds1:Dis")
    field(SDIS, "$(P)Lvds1:DisS.PACT")
    field(DISV, "1")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds1:DisR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan1 disable")
    field(INP,  "@asyn($(PORT))Lvds1:Dis")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds1:DisS")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds1:DisS")
{
    field(DOL,  "$(P)Lvds1:DisR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds1:Dis PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds2:Dis")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 disable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds2:DisW PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds2:DisW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds2:Dis")
    field(SDIS, "$(P)Lvds2:DisS.PACT")
    field(DISV, "1")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds2:DisR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan2 disable")
    field(INP,  "@asyn($(PORT))Lvds2:Dis")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds2:DisS")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds2:DisS")
{
    field(DOL,  "$(P)Lvds2:DisR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds2:Dis PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds3:Dis")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 disable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds3:DisW PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds3:DisW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds3:Dis")
    field(SDIS, "$(P)Lvds3:DisS.PACT")
    field(DISV, "1")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds3:DisR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan3 disable")
    field(INP,  "@asyn($(PORT))Lvds3:Dis")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds3:DisS")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds3:DisS")
{
    field(DOL,  "$(P)Lvds3:DisR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds3:Dis PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds4:Dis")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 disable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds4:DisW PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds4:DisW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds4:Dis")
    field(SDIS, "$(P)Lvds4:DisS.PACT")
    field(DISV, "1")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds4:DisR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan4 disable")
    field(INP,  "@asyn($(PORT))Lvds4:Dis")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds4:DisS")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds4:DisS")
{
    field(DOL,  "$(P)Lvds4:DisR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds4:Dis PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds5:Dis")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 disable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds5:DisW PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds5:DisW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds5:Dis")
    field(SDIS, "$(P)Lvds5:DisS.PACT")
    field(DISV, "1")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Lvds5:DisR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan5 disable")
    field(INP,  "@asyn($(PORT))Lvds5:Dis")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds5:DisS")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)Lvds5:DisS")
{
    field(DOL,  "$(P)Lvds5:DisR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds5:Dis PP")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)LvdsCmdMod")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS command parser mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsCmdModW PP")
    field(ZNAM, "as command")
    field(ONAM, "as data")
}
record(bo, "$(P)LvdsCmdModW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS command parser mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsCmdMod")
    field(SDIS, "$(P)LvdsCmdModS.PACT")
    field(DISV, "1")
    field(ZNAM, "as command")
    field(ONAM, "as data")
}
record(bi, "$(P)LvdsCmdModR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS command parser mode")
    field(INP,  "@asyn($(PORT))LvdsCmdMod")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsCmdModS")
    field(ZNAM, "as command")
    field(ONAM, "as data")
}
record(bo, "$(P)LvdsCmdModS")
{
    field(DOL,  "$(P)LvdsCmdModR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsCmdMod PP")
    field(ZNAM, "as command")
    field(ONAM, "as data")
}
record(bo, "$(P)LvdsDatMod")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS data parser mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsDatModW PP")
    field(ZNAM, "as data")
    field(ONAM, "as command")
}
record(bo, "$(P)LvdsDatModW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS data parser mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsDatMod")
    field(SDIS, "$(P)LvdsDatModS.PACT")
    field(DISV, "1")
    field(ZNAM, "as data")
    field(ONAM, "as command")
}
record(bi, "$(P)LvdsDatModR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS data parser mode")
    field(INP,  "@asyn($(PORT))LvdsDatMod")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsDatModS")
    field(ZNAM, "as data")
    field(ONAM, "as command")
}
record(bo, "$(P)LvdsDatModS")
{
    field(DOL,  "$(P)LvdsDatModR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsDatMod PP")
    field(ZNAM, "as data")
    field(ONAM, "as command")
}
record(longout, "$(P)LvdsDatSiz")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS data pkt num words")
    field(PINI, "YES")
    field(VAL,  "4")
    field(OUT,  "$(P)LvdsDatSizW PP")
}
record(longout, "$(P)LvdsDatSizW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS data pkt num words")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsDatSiz")
    field(SDIS, "$(P)LvdsDatSizS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsDatSizR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS data pkt num words")
    field(INP,  "@asyn($(PORT))LvdsDatSiz")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsDatSizS")
}
record(longout, "$(P)LvdsDatSizS")
{
    field(DOL,  "$(P)LvdsDatSizR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsDatSiz PP")
}
record(bo, "$(P)LvdsPowCtr")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Power Down during reset")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsPowCtrW PP")
    field(ZNAM, "power down")
    field(ONAM, "power up")
}
record(bo, "$(P)LvdsPowCtrW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Power Down during reset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsPowCtr")
    field(SDIS, "$(P)LvdsPowCtrS.PACT")
    field(DISV, "1")
    field(ZNAM, "power down")
    field(ONAM, "power up")
}
record(bi, "$(P)LvdsPowCtrR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Power Down during reset")
    field(INP,  "@asyn($(PORT))LvdsPowCtr")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsPowCtrS")
    field(ZNAM, "power down")
    field(ONAM, "power up")
}
record(bo, "$(P)LvdsPowCtrS")
{
    field(DOL,  "$(P)LvdsPowCtrR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsPowCtr PP")
    field(ZNAM, "power down")
    field(ONAM, "power up")
}
record(bo, "$(P)LvdsPowRst")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Execite power down sequence")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsPowRstW PP")
    field(ZNAM, "execute")
    field(ONAM, "bypass")
}
record(bo, "$(P)LvdsPowRstW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Execite power down sequence")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsPowRst")
    field(SDIS, "$(P)LvdsPowRstS.PACT")
    field(DISV, "1")
    field(ZNAM, "execute")
    field(ONAM, "bypass")
}
record(bi, "$(P)LvdsPowRstR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Execite power down sequence")
    field(INP,  "@asyn($(PORT))LvdsPowRst")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsPowRstS")
    field(ZNAM, "execute")
    field(ONAM, "bypass")
}
record(bo, "$(P)LvdsPowRstS")
{
    field(DOL,  "$(P)LvdsPowRstR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsPowRst PP")
    field(ZNAM, "execute")
    field(ONAM, "bypass")
}
record(longout, "$(P)LvdsFltAll")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Filter all commands")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsFltAllW PP")
}
record(longout, "$(P)LvdsFltAllW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Filter all commands")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsFltAll")
    field(SDIS, "$(P)LvdsFltAllS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsFltAllR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Filter all commands")
    field(INP,  "@asyn($(PORT))LvdsFltAll")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsFltAllS")
}
record(longout, "$(P)LvdsFltAllS")
{
    field(DOL,  "$(P)LvdsFltAllR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsFltAll PP")
}
record(longout, "$(P)LvdsFltCmd")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS command to filter")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsFltCmdW PP")
}
record(longout, "$(P)LvdsFltCmdW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS command to filter")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsFltCmd")
    field(SDIS, "$(P)LvdsFltCmdS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsFltCmdR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS command to filter")
    field(INP,  "@asyn($(PORT))LvdsFltCmd")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsFltCmdS")
}
record(longout, "$(P)LvdsFltCmdS")
{
    field(DOL,  "$(P)LvdsFltCmdR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsFltCmd PP")
}
record(longout, "$(P)LvdsFltCmM")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS command filter mask")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsFltCmMW PP")
}
record(longout, "$(P)LvdsFltCmMW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS command filter mask")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsFltCmM")
    field(SDIS, "$(P)LvdsFltCmMS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsFltCmMR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS command filter mask")
    field(INP,  "@asyn($(PORT))LvdsFltCmM")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsFltCmMS")
}
record(longout, "$(P)LvdsFltCmMS")
{
    field(DOL,  "$(P)LvdsFltCmMR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsFltCmM PP")
}
record(bo, "$(P)LvdsTxCtrl")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TX control TCLK mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTxCtrlW PP")
    field(ZNAM, "TCLK from int")
    field(ONAM, "TCLK from LVDS")
}
record(bo, "$(P)LvdsTxCtrlW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TX control TCLK mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTxCtrl")
    field(SDIS, "$(P)LvdsTxCtrlS.PACT")
    field(DISV, "1")
    field(ZNAM, "TCLK from int")
    field(ONAM, "TCLK from LVDS")
}
record(bi, "$(P)LvdsTxCtrlR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TX control TCLK mode")
    field(INP,  "@asyn($(PORT))LvdsTxCtrl")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTxCtrlS")
    field(ZNAM, "TCLK from int")
    field(ONAM, "TCLK from LVDS")
}
record(bo, "$(P)LvdsTxCtrlS")
{
    field(DOL,  "$(P)LvdsTxCtrlR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTxCtrl PP")
    field(ZNAM, "TCLK from int")
    field(ONAM, "TCLK from LVDS")
}
record(mbbo, "$(P)LvdsTxTcCt")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TX control T&C TCLK mod")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTxTcCtW PP")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsTxTcCtW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TX control T&C TCLK mod")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTxTcCt")
    field(SDIS, "$(P)LvdsTxTcCtS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)LvdsTxTcCtR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TX control T&C TCLK mod")
    field(INP,  "@asyn($(PORT))LvdsTxTcCt")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTxTcCtS")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsTxTcCtS")
{
    field(DOL,  "$(P)LvdsTxTcCtR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTxTcCt PP")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsTsMode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC_O mode")
    field(PINI, "YES")
    field(VAL,  "3")
    field(OUT,  "$(P)LvdsTsModeW PP")
    field(ZRVL, "0")
    field(ZRST, "local TSYNC")
    field(ONVL, "1")
    field(ONST, "TSYNC from TREF")
    field(TWVL, "2")
    field(TWST, "TSYNC from LVDS")
    field(THVL, "3")
    field(THST, "TSYNC from opt")
}
record(mbbo, "$(P)LvdsTsModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC_O mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTsMode")
    field(SDIS, "$(P)LvdsTsModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "local TSYNC")
    field(ONVL, "1")
    field(ONST, "TSYNC from TREF")
    field(TWVL, "2")
    field(TWST, "TSYNC from LVDS")
    field(THVL, "3")
    field(THST, "TSYNC from opt")
}
record(mbbi, "$(P)LvdsTsModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TSYNC_O mode")
    field(INP,  "@asyn($(PORT))LvdsTsMode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTsModeS")
    field(ZRVL, "0")
    field(ZRST, "local TSYNC")
    field(ONVL, "1")
    field(ONST, "TSYNC from TREF")
    field(TWVL, "2")
    field(TWST, "TSYNC from LVDS")
    field(THVL, "3")
    field(THST, "TSYNC from opt")
}
record(mbbo, "$(P)LvdsTsModeS")
{
    field(DOL,  "$(P)LvdsTsModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTsMode PP")
    field(ZRVL, "0")
    field(ZRST, "local TSYNC")
    field(ONVL, "1")
    field(ONST, "TSYNC from TREF")
    field(TWVL, "2")
    field(TWST, "TSYNC from LVDS")
    field(THVL, "3")
    field(THST, "TSYNC from opt")
}
record(mbbo, "$(P)LvdsTsCtrl")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC_NORMAL control")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTsCtrlW PP")
    field(ZRVL, "0")
    field(ZRST, "polarity")
    field(ONVL, "1")
    field(ONST, "TSYNC WIDTH")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsTsCtrlW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC_NORMAL control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTsCtrl")
    field(SDIS, "$(P)LvdsTsCtrlS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "polarity")
    field(ONVL, "1")
    field(ONST, "TSYNC WIDTH")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)LvdsTsCtrlR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TSYNC_NORMAL control")
    field(INP,  "@asyn($(PORT))LvdsTsCtrl")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTsCtrlS")
    field(ZRVL, "0")
    field(ZRST, "polarity")
    field(ONVL, "1")
    field(ONST, "TSYNC WIDTH")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsTsCtrlS")
{
    field(DOL,  "$(P)LvdsTsCtrlR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTsCtrl PP")
    field(ZRVL, "0")
    field(ZRST, "polarity")
    field(ONVL, "1")
    field(ONST, "TSYNC WIDTH")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsSysrCt")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS T&C SYSRST# buffer ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsSysrCtW PP")
    field(ZRVL, "0")
    field(ZRST, "sysrst")
    field(ONVL, "1")
    field(ONST, "sysrst")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsSysrCtW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS T&C SYSRST# buffer ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsSysrCt")
    field(SDIS, "$(P)LvdsSysrCtS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "sysrst")
    field(ONVL, "1")
    field(ONST, "sysrst")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)LvdsSysrCtR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS T&C SYSRST# buffer ctrl")
    field(INP,  "@asyn($(PORT))LvdsSysrCt")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsSysrCtS")
    field(ZRVL, "0")
    field(ZRST, "sysrst")
    field(ONVL, "1")
    field(ONST, "sysrst")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsSysrCtS")
{
    field(DOL,  "$(P)LvdsSysrCtR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsSysrCt PP")
    field(ZRVL, "0")
    field(ZRST, "sysrst")
    field(ONVL, "1")
    field(ONST, "sysrst")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)LvdsTxenCt")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS T&C TXEN# control")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTxenCtW PP")
    field(ZRVL, "0")
    field(ZRST, "ChLnk parser")
    field(ONVL, "1")
    field(ONST, "ChLnk parser")
    field(TWVL, "2")
    field(TWST, "ChLnk RX")
    field(THVL, "3")
    field(THST, "ChLnk inv RX")
}
record(mbbo, "$(P)LvdsTxenCtW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS T&C TXEN# control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTxenCt")
    field(SDIS, "$(P)LvdsTxenCtS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "ChLnk parser")
    field(ONVL, "1")
    field(ONST, "ChLnk parser")
    field(TWVL, "2")
    field(TWST, "ChLnk RX")
    field(THVL, "3")
    field(THST, "ChLnk inv RX")
}
record(mbbi, "$(P)LvdsTxenCtR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS T&C TXEN# control")
    field(INP,  "@asyn($(PORT))LvdsTxenCt")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTxenCtS")
    field(ZRVL, "0")
    field(ZRST, "ChLnk parser")
    field(ONVL, "1")
    field(ONST, "ChLnk parser")
    field(TWVL, "2")
    field(TWST, "ChLnk RX")
    field(THVL, "3")
    field(THST, "ChLnk inv RX")
}
record(mbbo, "$(P)LvdsTxenCtS")
{
    field(DOL,  "$(P)LvdsTxenCtR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTxenCt PP")
    field(ZRVL, "0")
    field(ZRST, "ChLnk parser")
    field(ONVL, "1")
    field(ONST, "ChLnk parser")
    field(TWVL, "2")
    field(TWST, "ChLnk RX")
    field(THVL, "3")
    field(THST, "ChLnk inv RX")
}
record(longout, "$(P)LvdsOutClk")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS output clock mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsOutClkW PP")
}
record(longout, "$(P)LvdsOutClkW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS output clock mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsOutClk")
    field(SDIS, "$(P)LvdsOutClkS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsOutClkR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS output clock mode")
    field(INP,  "@asyn($(PORT))LvdsOutClk")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsOutClkS")
}
record(longout, "$(P)LvdsOutClkS")
{
    field(DOL,  "$(P)LvdsOutClkR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsOutClk PP")
}
record(longout, "$(P)LvdsNRetry")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS downstream retrys")
    field(PINI, "YES")
    field(VAL,  "3")
    field(OUT,  "$(P)LvdsNRetryW PP")
}
record(longout, "$(P)LvdsNRetryW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS downstream retrys")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsNRetry")
    field(SDIS, "$(P)LvdsNRetryS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsNRetryR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS downstream retrys")
    field(INP,  "@asyn($(PORT))LvdsNRetry")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsNRetryS")
}
record(longout, "$(P)LvdsNRetryS")
{
    field(DOL,  "$(P)LvdsNRetryR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsNRetry PP")
}
record(bo, "$(P)Lvds0:WLen")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 data word length")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds0:WLenW PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds0:WLenW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan0 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds0:WLen")
    field(SDIS, "$(P)Lvds0:WLenS.PACT")
    field(DISV, "1")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds0:WLenR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan0 data word length")
    field(INP,  "@asyn($(PORT))Lvds0:WLen")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds0:WLenS")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds0:WLenS")
{
    field(DOL,  "$(P)Lvds0:WLenR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds0:WLen PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds1:WLen")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 data word length")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds1:WLenW PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds1:WLenW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan1 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds1:WLen")
    field(SDIS, "$(P)Lvds1:WLenS.PACT")
    field(DISV, "1")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds1:WLenR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan1 data word length")
    field(INP,  "@asyn($(PORT))Lvds1:WLen")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds1:WLenS")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds1:WLenS")
{
    field(DOL,  "$(P)Lvds1:WLenR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds1:WLen PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds2:WLen")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 data word length")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds2:WLenW PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds2:WLenW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan2 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds2:WLen")
    field(SDIS, "$(P)Lvds2:WLenS.PACT")
    field(DISV, "1")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds2:WLenR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan2 data word length")
    field(INP,  "@asyn($(PORT))Lvds2:WLen")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds2:WLenS")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds2:WLenS")
{
    field(DOL,  "$(P)Lvds2:WLenR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds2:WLen PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds3:WLen")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 data word length")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds3:WLenW PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds3:WLenW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan3 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds3:WLen")
    field(SDIS, "$(P)Lvds3:WLenS.PACT")
    field(DISV, "1")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds3:WLenR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan3 data word length")
    field(INP,  "@asyn($(PORT))Lvds3:WLen")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds3:WLenS")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds3:WLenS")
{
    field(DOL,  "$(P)Lvds3:WLenR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds3:WLen PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds4:WLen")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 data word length")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds4:WLenW PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds4:WLenW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan4 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds4:WLen")
    field(SDIS, "$(P)Lvds4:WLenS.PACT")
    field(DISV, "1")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds4:WLenR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan4 data word length")
    field(INP,  "@asyn($(PORT))Lvds4:WLen")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds4:WLenS")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds4:WLenS")
{
    field(DOL,  "$(P)Lvds4:WLenR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds4:WLen PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds5:WLen")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 data word length")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds5:WLenW PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds5:WLenW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS chan5 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds5:WLen")
    field(SDIS, "$(P)Lvds5:WLenS.PACT")
    field(DISV, "1")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bi, "$(P)Lvds5:WLenR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS chan5 data word length")
    field(INP,  "@asyn($(PORT))Lvds5:WLen")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds5:WLenS")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)Lvds5:WLenS")
{
    field(DOL,  "$(P)Lvds5:WLenR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds5:WLen PP")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(longout, "$(P)LvdsClkMar")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS clock margin")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsClkMarW PP")
}
record(longout, "$(P)LvdsClkMarW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS clock margin")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsClkMar")
    field(SDIS, "$(P)LvdsClkMarS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsClkMarR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS clock margin")
    field(INP,  "@asyn($(PORT))LvdsClkMar")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsClkMarS")
}
record(longout, "$(P)LvdsClkMarS")
{
    field(DOL,  "$(P)LvdsClkMarR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsClkMar PP")
}
record(bo, "$(P)LvdsTstPat")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS T&C test pattern")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTstPatW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)LvdsTstPatW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS T&C test pattern")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTstPat")
    field(SDIS, "$(P)LvdsTstPatS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)LvdsTstPatR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS T&C test pattern")
    field(INP,  "@asyn($(PORT))LvdsTstPat")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTstPatS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)LvdsTstPatS")
{
    field(DOL,  "$(P)LvdsTstPatR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTstPat PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)LvdsTestEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS test enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTestEnW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)LvdsTestEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS test enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTestEn")
    field(SDIS, "$(P)LvdsTestEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)LvdsTestEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS test enable")
    field(INP,  "@asyn($(PORT))LvdsTestEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTestEnS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)LvdsTestEnS")
{
    field(DOL,  "$(P)LvdsTestEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTestEn PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(mbbo, "$(P)Lvds0:SrcC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch0 TSYNC T&C src ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds0:SrcCW PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds0:SrcCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch0 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds0:SrcC")
    field(SDIS, "$(P)Lvds0:SrcCS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds0:SrcCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS ch0 TSYNC T&C src ctrl")
    field(INP,  "@asyn($(PORT))Lvds0:SrcC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds0:SrcCS")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds0:SrcCS")
{
    field(DOL,  "$(P)Lvds0:SrcCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds0:SrcC PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds1:SrcC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch1 TSYNC T&C src ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds1:SrcCW PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds1:SrcCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch1 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds1:SrcC")
    field(SDIS, "$(P)Lvds1:SrcCS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds1:SrcCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS ch1 TSYNC T&C src ctrl")
    field(INP,  "@asyn($(PORT))Lvds1:SrcC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds1:SrcCS")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds1:SrcCS")
{
    field(DOL,  "$(P)Lvds1:SrcCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds1:SrcC PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds2:SrcC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch2 TSYNC T&C src ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds2:SrcCW PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds2:SrcCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch2 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds2:SrcC")
    field(SDIS, "$(P)Lvds2:SrcCS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds2:SrcCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS ch2 TSYNC T&C src ctrl")
    field(INP,  "@asyn($(PORT))Lvds2:SrcC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds2:SrcCS")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds2:SrcCS")
{
    field(DOL,  "$(P)Lvds2:SrcCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds2:SrcC PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds3:SrcC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch3 TSYNC T&C src ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds3:SrcCW PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds3:SrcCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch3 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds3:SrcC")
    field(SDIS, "$(P)Lvds3:SrcCS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds3:SrcCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS ch3 TSYNC T&C src ctrl")
    field(INP,  "@asyn($(PORT))Lvds3:SrcC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds3:SrcCS")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds3:SrcCS")
{
    field(DOL,  "$(P)Lvds3:SrcCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds3:SrcC PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds4:SrcC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch4 TSYNC T&C src ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds4:SrcCW PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds4:SrcCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch4 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds4:SrcC")
    field(SDIS, "$(P)Lvds4:SrcCS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds4:SrcCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS ch4 TSYNC T&C src ctrl")
    field(INP,  "@asyn($(PORT))Lvds4:SrcC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds4:SrcCS")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds4:SrcCS")
{
    field(DOL,  "$(P)Lvds4:SrcCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds4:SrcC PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds5:SrcC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch5 TSYNC T&C src ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)Lvds5:SrcCW PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds5:SrcCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS ch5 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Lvds5:SrcC")
    field(SDIS, "$(P)Lvds5:SrcCS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbi, "$(P)Lvds5:SrcCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS ch5 TSYNC T&C src ctrl")
    field(INP,  "@asyn($(PORT))Lvds5:SrcC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)Lvds5:SrcCS")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)Lvds5:SrcCS")
{
    field(DOL,  "$(P)Lvds5:SrcCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)Lvds5:SrcC PP")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)LvdsTsMeta")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC metadata src ctrl")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTsMetaW PP")
    field(ZRVL, "0")
    field(ZRST, "RTDL")
    field(ONVL, "1")
    field(ONST, "LVDS")
    field(TWVL, "2")
    field(TWST, "detector TSYNC")
    field(THVL, "3")
    field(THST, "OFB[0]")
}
record(mbbo, "$(P)LvdsTsMetaW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC metadata src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTsMeta")
    field(SDIS, "$(P)LvdsTsMetaS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "RTDL")
    field(ONVL, "1")
    field(ONST, "LVDS")
    field(TWVL, "2")
    field(TWST, "detector TSYNC")
    field(THVL, "3")
    field(THST, "OFB[0]")
}
record(mbbi, "$(P)LvdsTsMetaR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TSYNC metadata src ctrl")
    field(INP,  "@asyn($(PORT))LvdsTsMeta")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTsMetaS")
    field(ZRVL, "0")
    field(ZRST, "RTDL")
    field(ONVL, "1")
    field(ONST, "LVDS")
    field(TWVL, "2")
    field(TWST, "detector TSYNC")
    field(THVL, "3")
    field(THST, "OFB[0]")
}
record(mbbo, "$(P)LvdsTsMetaS")
{
    field(DOL,  "$(P)LvdsTsMetaR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTsMeta PP")
    field(ZRVL, "0")
    field(ZRST, "RTDL")
    field(ONVL, "1")
    field(ONST, "LVDS")
    field(TWVL, "2")
    field(TWST, "detector TSYNC")
    field(THVL, "3")
    field(THST, "OFB[0]")
}
record(longout, "$(P)LvdsTsGen")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC generation diviso")
    field(PINI, "YES")
    field(VAL,  "20000")
    field(OUT,  "$(P)LvdsTsGenW PP")
}
record(longout, "$(P)LvdsTsGenW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC generation diviso")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTsGen")
    field(SDIS, "$(P)LvdsTsGenS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsTsGenR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TSYNC generation diviso")
    field(INP,  "@asyn($(PORT))LvdsTsGen")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTsGenS")
}
record(longout, "$(P)LvdsTsGenS")
{
    field(DOL,  "$(P)LvdsTsGenR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTsGen PP")
}
record(longout, "$(P)LvdsTsDel")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC delay divisor    ")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTsDelW PP")
}
record(longout, "$(P)LvdsTsDelW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC delay divisor    ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTsDel")
    field(SDIS, "$(P)LvdsTsDelS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsTsDelR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TSYNC delay divisor    ")
    field(INP,  "@asyn($(PORT))LvdsTsDel")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTsDelS")
}
record(longout, "$(P)LvdsTsDelS")
{
    field(DOL,  "$(P)LvdsTsDelR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTsDel PP")
}
record(longout, "$(P)LvdsTsWid")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC width divisor    ")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)LvdsTsWidW PP")
}
record(longout, "$(P)LvdsTsWidW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "LVDS TSYNC width divisor    ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))LvdsTsWid")
    field(SDIS, "$(P)LvdsTsWidS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)LvdsTsWidR")
{
    field(DTYP, "asynInt32")
    field(DESC, "LVDS TSYNC width divisor    ")
    field(INP,  "@asyn($(PORT))LvdsTsWid")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)LvdsTsWidS")
}
record(longout, "$(P)LvdsTsWidS")
{
    field(DOL,  "$(P)LvdsTsWidR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)LvdsTsWid PP")
}
record(mbbo, "$(P)OptA:Cross")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Crossbar Switch Pass ctrl A")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptA:CrossW PP")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)OptA:CrossW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Crossbar Switch Pass ctrl A")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptA:Cross")
    field(SDIS, "$(P)OptA:CrossS.PACT")
    field(DISV, "1")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbi, "$(P)OptA:CrossR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Crossbar Switch Pass ctrl A")
    field(INP,  "@asyn($(PORT))OptA:Cross")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptA:CrossS")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)OptA:CrossS")
{
    field(DOL,  "$(P)OptA:CrossR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptA:Cross PP")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)OptB:Cross")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Crossbar Switch Pass ctrl B")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptB:CrossW PP")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)OptB:CrossW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Crossbar Switch Pass ctrl B")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptB:Cross")
    field(SDIS, "$(P)OptB:CrossS.PACT")
    field(DISV, "1")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbi, "$(P)OptB:CrossR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Crossbar Switch Pass ctrl B")
    field(INP,  "@asyn($(PORT))OptB:Cross")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptB:CrossS")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)OptB:CrossS")
{
    field(DOL,  "$(P)OptB:CrossR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptB:Cross PP")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)OptA:TxMod")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX A output mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptA:TxModW PP")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(mbbo, "$(P)OptA:TxModW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX A output mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptA:TxMod")
    field(SDIS, "$(P)OptA:TxModS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(mbbi, "$(P)OptA:TxModR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical TX A output mode")
    field(INP,  "@asyn($(PORT))OptA:TxMod")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptA:TxModS")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(mbbo, "$(P)OptA:TxModS")
{
    field(DOL,  "$(P)OptA:TxModR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptA:TxMod PP")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(longout, "$(P)OptA:EOC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX A End of Chain")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptA:EOCW PP")
}
record(longout, "$(P)OptA:EOCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX A End of Chain")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptA:EOC")
    field(SDIS, "$(P)OptA:EOCS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)OptA:EOCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical TX A End of Chain")
    field(INP,  "@asyn($(PORT))OptA:EOC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptA:EOCS")
}
record(longout, "$(P)OptA:EOCS")
{
    field(DOL,  "$(P)OptA:EOCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptA:EOC PP")
}
record(longout, "$(P)OptA:FltCm")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX A Command Filter")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptA:FltCmW PP")
}
record(longout, "$(P)OptA:FltCmW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX A Command Filter")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptA:FltCm")
    field(SDIS, "$(P)OptA:FltCmS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)OptA:FltCmR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical TX A Command Filter")
    field(INP,  "@asyn($(PORT))OptA:FltCm")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptA:FltCmS")
}
record(longout, "$(P)OptA:FltCmS")
{
    field(DOL,  "$(P)OptA:FltCmR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptA:FltCm PP")
}
record(mbbo, "$(P)OptB:TxMod")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX B output mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptB:TxModW PP")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(mbbo, "$(P)OptB:TxModW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX B output mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptB:TxMod")
    field(SDIS, "$(P)OptB:TxModS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(mbbi, "$(P)OptB:TxModR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical TX B output mode")
    field(INP,  "@asyn($(PORT))OptB:TxMod")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptB:TxModS")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(mbbo, "$(P)OptB:TxModS")
{
    field(DOL,  "$(P)OptB:TxModR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptB:TxMod PP")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(longout, "$(P)OptB:EOC")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX B End of Chain")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptB:EOCW PP")
}
record(longout, "$(P)OptB:EOCW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX B End of Chain")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptB:EOC")
    field(SDIS, "$(P)OptB:EOCS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)OptB:EOCR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical TX B End of Chain")
    field(INP,  "@asyn($(PORT))OptB:EOC")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptB:EOCS")
}
record(longout, "$(P)OptB:EOCS")
{
    field(DOL,  "$(P)OptB:EOCR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptB:EOC PP")
}
record(longout, "$(P)OptB:FltCm")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX B Command Filter")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptB:FltCmW PP")
}
record(longout, "$(P)OptB:FltCmW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical TX B Command Filter")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptB:FltCm")
    field(SDIS, "$(P)OptB:FltCmS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)OptB:FltCmR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical TX B Command Filter")
    field(INP,  "@asyn($(PORT))OptB:FltCm")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptB:FltCmS")
}
record(longout, "$(P)OptB:FltCmS")
{
    field(DOL,  "$(P)OptB:FltCmR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptB:FltCm PP")
}
record(bo, "$(P)OptHystEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical hysteresis enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptHystEnW PP")
    field(ZNAM, "from TLK data")
    field(ONAM, "match optical")
}
record(bo, "$(P)OptHystEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical hysteresis enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptHystEn")
    field(SDIS, "$(P)OptHystEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "from TLK data")
    field(ONAM, "match optical")
}
record(bi, "$(P)OptHystEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical hysteresis enable")
    field(INP,  "@asyn($(PORT))OptHystEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptHystEnS")
    field(ZNAM, "from TLK data")
    field(ONAM, "match optical")
}
record(bo, "$(P)OptHystEnS")
{
    field(DOL,  "$(P)OptHystEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptHystEn PP")
    field(ZNAM, "from TLK data")
    field(ONAM, "match optical")
}
record(bo, "$(P)OptBlankEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical empty data frame CRC")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptBlankEnW PP")
    field(ZNAM, "no blank frame")
    field(ONAM, "add blank frame")
}
record(bo, "$(P)OptBlankEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical empty data frame CRC")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptBlankEn")
    field(SDIS, "$(P)OptBlankEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "no blank frame")
    field(ONAM, "add blank frame")
}
record(bi, "$(P)OptBlankEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical empty data frame CRC")
    field(INP,  "@asyn($(PORT))OptBlankEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptBlankEnS")
    field(ZNAM, "no blank frame")
    field(ONAM, "add blank frame")
}
record(bo, "$(P)OptBlankEnS")
{
    field(DOL,  "$(P)OptBlankEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptBlankEn PP")
    field(ZNAM, "no blank frame")
    field(ONAM, "add blank frame")
}
record(longout, "$(P)OptTxDelay")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical packet send delay   ")
    field(PINI, "YES")
    field(VAL,  "3")
    field(OUT,  "$(P)OptTxDelayW PP")
}
record(longout, "$(P)OptTxDelayW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical packet send delay   ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptTxDelay")
    field(SDIS, "$(P)OptTxDelayS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)OptTxDelayR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical packet send delay   ")
    field(INP,  "@asyn($(PORT))OptTxDelay")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptTxDelayS")
}
record(longout, "$(P)OptTxDelayS")
{
    field(DOL,  "$(P)OptTxDelayR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptTxDelay PP")
}
record(bo, "$(P)OptTxDelCt")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical packet send delay ct")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)OptTxDelCtW PP")
    field(ZNAM, "use OPT_TX_DELAY")
    field(ONAM, "prev word count")
}
record(bo, "$(P)OptTxDelCtW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical packet send delay ct")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptTxDelCt")
    field(SDIS, "$(P)OptTxDelCtS.PACT")
    field(DISV, "1")
    field(ZNAM, "use OPT_TX_DELAY")
    field(ONAM, "prev word count")
}
record(bi, "$(P)OptTxDelCtR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical packet send delay ct")
    field(INP,  "@asyn($(PORT))OptTxDelCt")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptTxDelCtS")
    field(ZNAM, "use OPT_TX_DELAY")
    field(ONAM, "prev word count")
}
record(bo, "$(P)OptTxDelCtS")
{
    field(DOL,  "$(P)OptTxDelCtR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptTxDelCt PP")
    field(ZNAM, "use OPT_TX_DELAY")
    field(ONAM, "prev word count")
}
record(longout, "$(P)OptMaxSize")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical packet max dwords")
    field(PINI, "YES")
    field(VAL,  "16111")
    field(OUT,  "$(P)OptMaxSizeW PP")
}
record(longout, "$(P)OptMaxSizeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical packet max dwords")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptMaxSize")
    field(SDIS, "$(P)OptMaxSizeS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)OptMaxSizeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical packet max dwords")
    field(INP,  "@asyn($(PORT))OptMaxSize")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptMaxSizeS")
}
record(longout, "$(P)OptMaxSizeS")
{
    field(DOL,  "$(P)OptMaxSizeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptMaxSize PP")
}
record(bo, "$(P)OptNeuEop")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical Neutron send EOP")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)OptNeuEopW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)OptNeuEopW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical Neutron send EOP")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptNeuEop")
    field(SDIS, "$(P)OptNeuEopS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)OptNeuEopR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical Neutron send EOP")
    field(INP,  "@asyn($(PORT))OptNeuEop")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptNeuEopS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)OptNeuEopS")
{
    field(DOL,  "$(P)OptNeuEopR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptNeuEop PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)OptMetaEop")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical Metadata send EOP")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptMetaEopW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)OptMetaEopW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Optical Metadata send EOP")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptMetaEop")
    field(SDIS, "$(P)OptMetaEopS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)OptMetaEopR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Optical Metadata send EOP")
    field(INP,  "@asyn($(PORT))OptMetaEop")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptMetaEopS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)OptMetaEopS")
{
    field(DOL,  "$(P)OptMetaEopR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptMetaEop PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)OptTofCtrl")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "TOF control")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)OptTofCtrlW PP")
    field(ZNAM, "fixed TOF")
    field(ONAM, "full time offset")
}
record(bo, "$(P)OptTofCtrlW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "TOF control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))OptTofCtrl")
    field(SDIS, "$(P)OptTofCtrlS.PACT")
    field(DISV, "1")
    field(ZNAM, "fixed TOF")
    field(ONAM, "full time offset")
}
record(bi, "$(P)OptTofCtrlR")
{
    field(DTYP, "asynInt32")
    field(DESC, "TOF control")
    field(INP,  "@asyn($(PORT))OptTofCtrl")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)OptTofCtrlS")
    field(ZNAM, "fixed TOF")
    field(ONAM, "full time offset")
}
record(bo, "$(P)OptTofCtrlS")
{
    field(DOL,  "$(P)OptTofCtrlR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)OptTofCtrl PP")
    field(ZNAM, "fixed TOF")
    field(ONAM, "full time offset")
}
record(longout, "$(P)FakeTrig")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Fake Trigger Information")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)FakeTrigW PP")
}
record(longout, "$(P)FakeTrigW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Fake Trigger Information")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))FakeTrig")
    field(SDIS, "$(P)FakeTrigS.PACT")
    field(DISV, "1")
}
record(longin, "$(P)FakeTrigR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Fake Trigger Information")
    field(INP,  "@asyn($(PORT))FakeTrig")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)FakeTrigS")
}
record(longout, "$(P)FakeTrigS")
{
    field(DOL,  "$(P)FakeTrigR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)FakeTrig PP")
}
record(mbbo, "$(P)SysRstMode")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Reset mode => SYSRST_O#")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysRstModeW PP")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS T&C")
    field(THVL, "3")
    field(THST, "from optical T&C")
}
record(mbbo, "$(P)SysRstModeW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Reset mode => SYSRST_O#")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysRstMode")
    field(SDIS, "$(P)SysRstModeS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS T&C")
    field(THVL, "3")
    field(THST, "from optical T&C")
}
record(mbbi, "$(P)SysRstModeR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Reset mode => SYSRST_O#")
    field(INP,  "@asyn($(PORT))SysRstMode")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysRstModeS")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS T&C")
    field(THVL, "3")
    field(THST, "from optical T&C")
}
record(mbbo, "$(P)SysRstModeS")
{
    field(DOL,  "$(P)SysRstModeR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysRstMode PP")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS T&C")
    field(THVL, "3")
    field(THST, "from optical T&C")
}
record(mbbo, "$(P)SysStrtMod")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Start/Stop mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysStrtModW PP")
    field(ZRVL, "0")
    field(ZRST, "normal")
    field(ONVL, " 1")
    field(ONST, "fake data mode")
    field(TWVL, "2")
    field(TWST, "not defined")
    field(THVL, "3")
    field(THST, "not defined")
}
record(mbbo, "$(P)SysStrtModW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Start/Stop mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysStrtMod")
    field(SDIS, "$(P)SysStrtModS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "normal")
    field(ONVL, " 1")
    field(ONST, "fake data mode")
    field(TWVL, "2")
    field(TWST, "not defined")
    field(THVL, "3")
    field(THST, "not defined")
}
record(mbbi, "$(P)SysStrtModR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Start/Stop mode")
    field(INP,  "@asyn($(PORT))SysStrtMod")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysStrtModS")
    field(ZRVL, "0")
    field(ZRST, "normal")
    field(ONVL, " 1")
    field(ONST, "fake data mode")
    field(TWVL, "2")
    field(TWST, "not defined")
    field(THVL, "3")
    field(THST, "not defined")
}
record(mbbo, "$(P)SysStrtModS")
{
    field(DOL,  "$(P)SysStrtModR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysStrtMod PP")
    field(ZRVL, "0")
    field(ZRST, "normal")
    field(ONVL, " 1")
    field(ONST, "fake data mode")
    field(TWVL, "2")
    field(TWST, "not defined")
    field(THVL, "3")
    field(THST, "not defined")
}
record(bo, "$(P)SysFakeEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Fake metadata trigger enable")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysFakeEnW PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)SysFakeEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Fake metadata trigger enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysFakeEn")
    field(SDIS, "$(P)SysFakeEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)SysFakeEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Fake metadata trigger enable")
    field(INP,  "@asyn($(PORT))SysFakeEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysFakeEnS")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)SysFakeEnS")
{
    field(DOL,  "$(P)SysFakeEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysFakeEn PP")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)SysFastEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Send data immediately switch")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysFastEnW PP")
    field(ZNAM, "big packets")
    field(ONAM, "send immediately")
}
record(bo, "$(P)SysFastEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Send data immediately switch")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysFastEn")
    field(SDIS, "$(P)SysFastEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "big packets")
    field(ONAM, "send immediately")
}
record(bi, "$(P)SysFastEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Send data immediately switch")
    field(INP,  "@asyn($(PORT))SysFastEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysFastEnS")
    field(ZNAM, "big packets")
    field(ONAM, "send immediately")
}
record(bo, "$(P)SysFastEnS")
{
    field(DOL,  "$(P)SysFastEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysFastEn PP")
    field(ZNAM, "big packets")
    field(ONAM, "send immediately")
}
record(bo, "$(P)SysPassEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Response for passthru cmd")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysPassEnW PP")
    field(ZNAM, "don't send")
    field(ONAM, "send")
}
record(bo, "$(P)SysPassEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Response for passthru cmd")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysPassEn")
    field(SDIS, "$(P)SysPassEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "don't send")
    field(ONAM, "send")
}
record(bi, "$(P)SysPassEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Response for passthru cmd")
    field(INP,  "@asyn($(PORT))SysPassEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysPassEnS")
    field(ZNAM, "don't send")
    field(ONAM, "send")
}
record(bo, "$(P)SysPassEnS")
{
    field(DOL,  "$(P)SysPassEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysPassEn PP")
    field(ZNAM, "don't send")
    field(ONAM, "send")
}
record(bo, "$(P)SysStartEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Wait for Start/Stop response")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)SysStartEnW PP")
    field(ZNAM, "don't wait")
    field(ONAM, "wait")
}
record(bo, "$(P)SysStartEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Wait for Start/Stop response")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysStartEn")
    field(SDIS, "$(P)SysStartEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "don't wait")
    field(ONAM, "wait")
}
record(bi, "$(P)SysStartEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Wait for Start/Stop response")
    field(INP,  "@asyn($(PORT))SysStartEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysStartEnS")
    field(ZNAM, "don't wait")
    field(ONAM, "wait")
}
record(bo, "$(P)SysStartEnS")
{
    field(DOL,  "$(P)SysStartEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysStartEn PP")
    field(ZNAM, "don't wait")
    field(ONAM, "wait")
}
record(mbbo, "$(P)SysRtdlMod")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL mode")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysRtdlModW PP")
    field(ZRVL, "0")
    field(ZRST, "no RTDL")
    field(ONVL, "1")
    field(ONST, "master")
    field(TWVL, "2")
    field(TWST, "slave")
    field(THVL, "3")
    field(THST, "fake mode")
}
record(mbbo, "$(P)SysRtdlModW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysRtdlMod")
    field(SDIS, "$(P)SysRtdlModS.PACT")
    field(DISV, "1")
    field(ZRVL, "0")
    field(ZRST, "no RTDL")
    field(ONVL, "1")
    field(ONST, "master")
    field(TWVL, "2")
    field(TWST, "slave")
    field(THVL, "3")
    field(THST, "fake mode")
}
record(mbbi, "$(P)SysRtdlModR")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL mode")
    field(INP,  "@asyn($(PORT))SysRtdlMod")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysRtdlModS")
    field(ZRVL, "0")
    field(ZRST, "no RTDL")
    field(ONVL, "1")
    field(ONST, "master")
    field(TWVL, "2")
    field(TWST, "slave")
    field(THVL, "3")
    field(THST, "fake mode")
}
record(mbbo, "$(P)SysRtdlModS")
{
    field(DOL,  "$(P)SysRtdlModR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysRtdlMod PP")
    field(ZRVL, "0")
    field(ZRST, "no RTDL")
    field(ONVL, "1")
    field(ONST, "master")
    field(TWVL, "2")
    field(TWST, "slave")
    field(THVL, "3")
    field(THST, "fake mode")
}
record(bo, "$(P)SysRtdlAEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL port A output enable")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)SysRtdlAEnW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlAEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL port A output enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysRtdlAEn")
    field(SDIS, "$(P)SysRtdlAEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysRtdlAEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL port A output enable")
    field(INP,  "@asyn($(PORT))SysRtdlAEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysRtdlAEnS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlAEnS")
{
    field(DOL,  "$(P)SysRtdlAEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysRtdlAEn PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlBEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL port B output enable")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)SysRtdlBEnW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlBEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "RTDL port B output enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysRtdlBEn")
    field(SDIS, "$(P)SysRtdlBEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysRtdlBEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "RTDL port B output enable")
    field(INP,  "@asyn($(PORT))SysRtdlBEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysRtdlBEnS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlBEnS")
{
    field(DOL,  "$(P)SysRtdlBEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysRtdlBEn PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysTofOfEn")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Enable TOF full offset")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysTofOfEnW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysTofOfEnW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Enable TOF full offset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysTofOfEn")
    field(SDIS, "$(P)SysTofOfEnS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysTofOfEnR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Enable TOF full offset")
    field(INP,  "@asyn($(PORT))SysTofOfEn")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysTofOfEnS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysTofOfEnS")
{
    field(DOL,  "$(P)SysTofOfEnR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysTofOfEn PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysFifSync")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "FIFO sync switch")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysFifSyncW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysFifSyncW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "FIFO sync switch")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysFifSync")
    field(SDIS, "$(P)SysFifSyncS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysFifSyncR")
{
    field(DTYP, "asynInt32")
    field(DESC, "FIFO sync switch")
    field(INP,  "@asyn($(PORT))SysFifSync")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysFifSyncS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysFifSyncS")
{
    field(DOL,  "$(P)SysFifSyncR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysFifSync PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlDat")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Send RTDL command as data")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)SysRtdlDatW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlDatW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Send RTDL command as data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysRtdlDat")
    field(SDIS, "$(P)SysRtdlDatS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysRtdlDatR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Send RTDL command as data")
    field(INP,  "@asyn($(PORT))SysRtdlDat")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysRtdlDatS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysRtdlDatS")
{
    field(DOL,  "$(P)SysRtdlDatR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysRtdlDat PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysFixRtdl")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Correct RTDL information")
    field(PINI, "YES")
    field(VAL,  "1")
    field(OUT,  "$(P)SysFixRtdlW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysFixRtdlW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Correct RTDL information")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysFixRtdl")
    field(SDIS, "$(P)SysFixRtdlS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysFixRtdlR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Correct RTDL information")
    field(INP,  "@asyn($(PORT))SysFixRtdl")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysFixRtdlS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysFixRtdlS")
{
    field(DOL,  "$(P)SysFixRtdlR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysFixRtdl PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysBadPkt")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Send bad packets")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysBadPktW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysBadPktW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Send bad packets")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysBadPkt")
    field(SDIS, "$(P)SysBadPktS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysBadPktR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Send bad packets")
    field(INP,  "@asyn($(PORT))SysBadPkt")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysBadPktS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysBadPktS")
{
    field(DOL,  "$(P)SysBadPktR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysBadPkt PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysReset")
{
    info(autosaveFields, "VAL")
    field(ASG,  "BEAMLINE")
    field(DESC, "Force system reset")
    field(PINI, "YES")
    field(VAL,  "0")
    field(OUT,  "$(P)SysResetW PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysResetW")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Force system reset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))SysReset")
    field(SDIS, "$(P)SysResetS.PACT")
    field(DISV, "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)SysResetR")
{
    field(DTYP, "asynInt32")
    field(DESC, "Force system reset")
    field(INP,  "@asyn($(PORT))SysReset")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)SysResetS")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)SysResetS")
{
    field(DOL,  "$(P)SysResetR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(P)SysReset PP")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)Configured")
{
    field(DESC, "Configured")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Configured")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not configured")
    field(ONAM, "configured")
}
record(bi, "$(P)Acquiring")
{
    field(DESC, "Acquiring data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Acquiring")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not acquiring")
    field(ONAM, "acquiring")
}
record(bi, "$(P)ProgramErr")
{
    field(DESC, "WRITE_CNFG during ACQ")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ProgramErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)PktLenErr")
{
    field(DESC, "Packet length error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))PktLenErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrBadCmd")
{
    field(DESC, "Unrecognized command error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrBadCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)LvdsTxFul")
{
    field(DESC, "LVDS TxFIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsTxFul")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "full")
}
record(bi, "$(P)LvdsCmdErr")
{
    field(DESC, "LVDS command error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsCmdErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)EepromInit")
{
    field(DESC, "EEPROM initialization status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromInit")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not ok")
    field(ONAM, "ok")
}
record(longin, "$(P)OptA:ErrCn")
{
    field(DESC, "RX A errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:ErrCn")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)OptA:ErrFl")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:ErrFl")
    field(SCAN, "I/O Intr")
    field(ZRVL, "8")
    field(ZRST, "packet timeout")
    field(ONVL, "9")
    field(ONST, "SOF/address sw")
    field(TWVL, "10")
    field(TWST, "EOF/address sw")
    field(THVL, "11")
    field(THST, "SOF/hdr sw")
    field(FRVL, "12")
    field(FRST, "EOF/hdr sw")
    field(FVVL, "13")
    field(FVST, "SOF/payload sw")
    field(SXVL, "14")
    field(SXST, "EOF/payload sw")
    field(SVVL, "15")
    field(SVST, "SOF/CRC switch")
    field(EIVL, "16")
    field(EIST, "EOF/CRC switch")
    field(NIVL, "17")
    field(NIST, "CRC low word")
    field(TEVL, "18")
    field(TEST, "CRC high word")
    field(ELVL, "19")
    field(ELST, "pri FIFO al full")
    field(TVVL, "20")
    field(TVST, "sec FIFO al full")
}
record(bi, "$(P)OptA:Good")
{
    field(DESC, "Last packet was good")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Good")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)OptA:PriS")
{
    field(DESC, "Stack FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PriS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptA:PriF")
{
    field(DESC, "Stack FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PriF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptA:SecS")
{
    field(DESC, "Secondary FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:SecS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptA:SecF")
{
    field(DESC, "Secondary FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:SecF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptA:PassS")
{
    field(DESC, "PassThrough FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PassS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptA:PassF")
{
    field(DESC, "PassThrough FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:PassF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptA:Time")
{
    field(DESC, "Timeout Pri/Sec FIFO transfr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Time")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)OptA:Stack")
{
    field(DESC, "RX pkt while stack almost fu")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Stack")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)OptA:Fifo")
{
    field(DESC, "RX while the FIFO almost ful")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:Fifo")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)OptB:ErrCn")
{
    field(DESC, "RX B errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:ErrCn")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)OptB:ErrFl")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:ErrFl")
    field(SCAN, "I/O Intr")
    field(ZRVL, "8")
    field(ZRST, "packet timeout")
    field(ONVL, "9")
    field(ONST, "SOF/address sw")
    field(TWVL, "10")
    field(TWST, "EOF/address sw")
    field(THVL, "11")
    field(THST, "SOF/hdr sw")
    field(FRVL, "12")
    field(FRST, "EOF/hdr sw")
    field(FVVL, "13")
    field(FVST, "SOF/payload sw")
    field(SXVL, "14")
    field(SXST, "EOF/payload sw")
    field(SVVL, "15")
    field(SVST, "SOF/CRC switch")
    field(EIVL, "16")
    field(EIST, "EOF/CRC switch")
    field(NIVL, "17")
    field(NIST, "CRC low word")
    field(TEVL, "18")
    field(TEST, "CRC high word")
    field(ELVL, "19")
    field(ELST, "pri FIFO al full")
    field(TVVL, "20")
    field(TVST, "sec FIFO al full")
}
record(bi, "$(P)OptB:Good")
{
    field(DESC, "Last packet was good")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Good")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)OptB:PriS")
{
    field(DESC, "Stack FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PriS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptB:PriF")
{
    field(DESC, "Stack FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PriF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptB:SecS")
{
    field(DESC, "Secondary FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:SecS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptB:SecF")
{
    field(DESC, "Secondary FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:SecF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptB:PassS")
{
    field(DESC, "PassThrough FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PassS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bi, "$(P)OptB:PassF")
{
    field(DESC, "PassThrough FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:PassF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)OptB:Time")
{
    field(DESC, "Timeout Pri/Sec FIFO transfr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Time")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)OptB:Stack")
{
    field(DESC, "RX pkt while stack almost fu")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Stack")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)OptB:Fifo")
{
    field(DESC, "RX while the FIFO almost ful")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:Fifo")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch0:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch0:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch0:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch0:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch0:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch0:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch0:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch0:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch0:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch0:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch1:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch1:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch1:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch1:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch1:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch1:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch1:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch1:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch1:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch2:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch2:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch2:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch2:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch2:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch2:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch2:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch2:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch2:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch3:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch3:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch3:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch3:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch3:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch3:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch3:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch3:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch3:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch4:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch4:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch4:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch4:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch4:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch4:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch4:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch4:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch4:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Ch5:RxFlg")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxFlg")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbi, "$(P)Ch5:RxStat")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxStat")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bi, "$(P)Ch5:RxData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch5:RxAF")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch5:RxParD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxParD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch5:RxParF")
{
    field(DESC, "ChLnk pkt pars FIFO almost f")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:RxParF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)Ch5:ExtEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ExtEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bi, "$(P)Ch5:ParsEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ParsEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longin, "$(P)Ch5:ErrCnt")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrCnt")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntGood")
{
    field(DESC, "Good data packet count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntGood")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntCmds")
{
    field(DESC, "Filtered command count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntCmds")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntAcks")
{
    field(DESC, "Filtered ACKSs count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntAcks")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntNacks")
{
    field(DESC, "Filtered NACKs count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntNacks")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)NumHwIds")
{
    field(DESC, "Detected Hardware IDs count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))NumHwIds")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)NewHwId")
{
    field(DESC, "New Hardware ID detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))NewHwId")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)MissHwId")
{
    field(DESC, "Missing Hardware ID")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MissHwId")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)CmdData")
{
    field(DESC, "Sorter cmd FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdAF")
{
    field(DESC, "Sorter cmd FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bi, "$(P)RxData")
{
    field(DESC, "Channel Link cmd FIFO has da")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RxData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)RxAF")
{
    field(DESC, "Channel Link cmd FIFO al. fu")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RxAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(longin, "$(P)OptA:CrSw")
{
    field(DESC, "Crossbar Switch A pass ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptA:CrSw")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)OptB:CrSw")
{
    field(DESC, "Crossbar Switch B pass ctrl")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OptB:CrSw")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)ClkThrMin")
{
    field(DESC, "Min N*40MHz TSYNC/ref delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ClkThrMin")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)ClkThrMax")
{
    field(DESC, "Max N*40MHz TSYNC/ref delay")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ClkThrMax")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)EepromStat")
{
    field(DESC, "EEPROM Status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromStat")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)LvdsStatus")
{
    field(DESC, "LVDS status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsStatus")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)MetaInfo0")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MetaInfo0")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)MetaInfo1")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MetaInfo1")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)MetaInfo2")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))MetaInfo2")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)DetailInfo")
{
    field(DESC, "Detailed info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))DetailInfo")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)TofOffset")
{
    field(DESC, "TOF offset")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TofOffset")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)RtdlInfo")
{
    field(DESC, "RTDL info")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RtdlInfo")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntBadRtdl")
{
    field(DESC, "RTDL frame CRC errors count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntBadRtdl")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)CntBadData")
{
    field(DESC, "Ev Link frame CRC errors cnt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntBadData")
    field(SCAN, "I/O Intr")
}
