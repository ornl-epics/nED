record(bi, "$(P)Ch2:ErrFif")
{
    field(DESC, "Chan2 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:ErrStr")
{
    field(DESC, "Chan2 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrNoS")
{
    field(DESC, "Chan2 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrTim")
{
    field(DESC, "Chan2 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch2:ErrLen")
{
    field(DESC, "Chan2 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrSho")
{
    field(DESC, "Chan2 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrCmd")
{
    field(DESC, "Chan2 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrPar")
{
    field(DESC, "Chan2 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrFif")
{
    field(DESC, "Chan1 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:ErrStr")
{
    field(DESC, "Chan1 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrNoS")
{
    field(DESC, "Chan1 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrTim")
{
    field(DESC, "Chan1 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch1:ErrLen")
{
    field(DESC, "Chan1 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrSho")
{
    field(DESC, "Chan1 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrCmd")
{
    field(DESC, "Chan1 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrPar")
{
    field(DESC, "Chan1 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrFif")
{
    field(DESC, "Chan4 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:ErrStr")
{
    field(DESC, "Chan4 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrNoS")
{
    field(DESC, "Chan4 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrTim")
{
    field(DESC, "Chan4 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch4:ErrLen")
{
    field(DESC, "Chan4 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrSho")
{
    field(DESC, "Chan4 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrCmd")
{
    field(DESC, "Chan4 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrPar")
{
    field(DESC, "Chan4 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrFif")
{
    field(DESC, "Chan3 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:ErrStr")
{
    field(DESC, "Chan3 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrNoS")
{
    field(DESC, "Chan3 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrTim")
{
    field(DESC, "Chan3 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch3:ErrLen")
{
    field(DESC, "Chan3 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrSho")
{
    field(DESC, "Chan3 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrCmd")
{
    field(DESC, "Chan3 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrPar")
{
    field(DESC, "Chan3 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrFif")
{
    field(DESC, "Chan6 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:ErrStr")
{
    field(DESC, "Chan6 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrNoS")
{
    field(DESC, "Chan6 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrTim")
{
    field(DESC, "Chan6 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch6:ErrLen")
{
    field(DESC, "Chan6 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrSho")
{
    field(DESC, "Chan6 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrCmd")
{
    field(DESC, "Chan6 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrPar")
{
    field(DESC, "Chan6 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrFif")
{
    field(DESC, "Chan5 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:ErrStr")
{
    field(DESC, "Chan5 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrNoS")
{
    field(DESC, "Chan5 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrTim")
{
    field(DESC, "Chan5 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch5:ErrLen")
{
    field(DESC, "Chan5 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrSho")
{
    field(DESC, "Chan5 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrCmd")
{
    field(DESC, "Chan5 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrPar")
{
    field(DESC, "Chan5 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrFif")
{
    field(DESC, "Chan8 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:ErrStr")
{
    field(DESC, "Chan8 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrNoS")
{
    field(DESC, "Chan8 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrTim")
{
    field(DESC, "Chan8 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch8:ErrLen")
{
    field(DESC, "Chan8 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrSho")
{
    field(DESC, "Chan8 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrCmd")
{
    field(DESC, "Chan8 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrPar")
{
    field(DESC, "Chan8 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrFif")
{
    field(DESC, "Chan7 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:ErrStr")
{
    field(DESC, "Chan7 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrNoS")
{
    field(DESC, "Chan7 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrTim")
{
    field(DESC, "Chan7 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch7:ErrLen")
{
    field(DESC, "Chan7 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrSho")
{
    field(DESC, "Chan7 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrCmd")
{
    field(DESC, "Chan7 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrPar")
{
    field(DESC, "Chan7 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)C10:ErrFif")
{
    field(DESC, "Chan10 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)C10:ErrStr")
{
    field(DESC, "Chan10 got START during pckt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)C10:ErrNoS")
{
    field(DESC, "Chan10 got data without STRT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)C10:ErrTim")
{
    field(DESC, "Chan10 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)C10:ErrLen")
{
    field(DESC, "Chan10 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)C10:ErrSho")
{
    field(DESC, "Chan10 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)C10:ErrCmd")
{
    field(DESC, "Chan10 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)C10:ErrPar")
{
    field(DESC, "Chan10 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrFif")
{
    field(DESC, "Chan9 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:ErrStr")
{
    field(DESC, "Chan9 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrNoS")
{
    field(DESC, "Chan9 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrTim")
{
    field(DESC, "Chan9 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch9:ErrLen")
{
    field(DESC, "Chan9 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrSho")
{
    field(DESC, "Chan9 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrCmd")
{
    field(DESC, "Chan9 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrPar")
{
    field(DESC, "Chan9 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(longin, "$(P)FltrNacks")
{
    field(DESC, "Filtered NACK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FltrNacks")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)FltrNack")
{
    field(DESC, "Filtered NACK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FltrNack")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrEeprom")
{
    field(DESC, "EEPROM error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrEeprom")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrNoHw")
{
    field(DESC, "Missing hardware")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrNoHw")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not missing")
    field(ONAM, "missing")
}
record(bi, "$(P)ErrUncfg")
{
    field(DESC, "Unconfigured")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrUncfg")
    field(SCAN, "I/O Intr")
    field(ZNAM, "configured")
    field(ONAM, "not confiured")
}
record(bi, "$(P)ErrProg")
{
    field(DESC, "Programming error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrProg")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrCmdLen")
{
    field(DESC, "Command length error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrCmdLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrBadCmd")
{
    field(DESC, "Unknown command")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrBadCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrFif")
{
    field(DESC, "CTRL FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrFif")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ctr:ErrStr")
{
    field(DESC, "CTRL got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrStr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrNoS")
{
    field(DESC, "CTRL got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrNoS")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrTim")
{
    field(DESC, "CTRL got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrTim")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ctr:ErrLen")
{
    field(DESC, "CTRL long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrLen")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrSho")
{
    field(DESC, "CTRL short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrSho")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrCmd")
{
    field(DESC, "CTRL DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrPar")
{
    field(DESC, "CTRL parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrPar")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(longin, "$(P)FltrdNacks")
{
    field(DESC, "Filtered NACKS")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FltrdNacks")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)Ch8:GotCmd")
{
    field(DESC, "Chan8 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:GotDat")
{
    field(DESC, "Chan8 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:GotCmd")
{
    field(DESC, "Chan7 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:GotDat")
{
    field(DESC, "Chan7 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:GotCmd")
{
    field(DESC, "Chan6 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:GotDat")
{
    field(DESC, "Chan6 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:GotCmd")
{
    field(DESC, "Chan5 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:GotDat")
{
    field(DESC, "Chan5 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:GotCmd")
{
    field(DESC, "Chan4 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:GotDat")
{
    field(DESC, "Chan4 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:GotCmd")
{
    field(DESC, "Chan3 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:GotDat")
{
    field(DESC, "Chan3 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:GotCmd")
{
    field(DESC, "Chan2 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:GotDat")
{
    field(DESC, "Chan2 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:GotCmd")
{
    field(DESC, "Chan1 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:GotDat")
{
    field(DESC, "Chan1 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)FiltrdAcks")
{
    field(DESC, "Filtered ACKS")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FiltrdAcks")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)Acquiring")
{
    field(DESC, "Acquiring data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Acquiring")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not acquiring")
    field(ONAM, "acquiring")
}
record(bi, "$(P)FoundHw")
{
    field(DESC, "Found new hardware")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FoundHw")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ctr:GotCmd")
{
    field(DESC, "CTRL got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ctr:GotDat")
{
    field(DESC, "CTRL got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)C10:GotCmd")
{
    field(DESC, "Chan10 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)C10:GotDat")
{
    field(DESC, "Chan10 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))C10:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:GotCmd")
{
    field(DESC, "Chan9 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:GotDat")
{
    field(DESC, "Chan9 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:GotDat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:FifCmd")
{
    field(DESC, "Chan8 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:FifCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:FifoNE")
{
    field(DESC, "Chan8 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch7:FifoAF")
{
    field(DESC, "Chan7 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:FifoNE")
{
    field(DESC, "Chan7 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch6:FifoAF")
{
    field(DESC, "Chan6 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:FifoNE")
{
    field(DESC, "Chan6 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch5:FifoAF")
{
    field(DESC, "Chan5 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:FifoNE")
{
    field(DESC, "Chan5 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch4:FifoAF")
{
    field(DESC, "Chan4 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:FifoNE")
{
    field(DESC, "Chan4 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch3:FifoAF")
{
    field(DESC, "Chan3 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:FifoNE")
{
    field(DESC, "Chan3 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch2:FifoAF")
{
    field(DESC, "Chan2 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:FifoNE")
{
    field(DESC, "Chan2 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch1:FifoAF")
{
    field(DESC, "Chan1 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:FifoNE")
{
    field(DESC, "Chan1 FIFO not empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdFifoAF")
{
    field(DESC, "CMD FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdFifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CmdFifoNE")
{
    field(DESC, "CMD FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdFifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdInFifAF")
{
    field(DESC, "CMD input FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdInFifAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CmdInFifNE")
{
    field(DESC, "CMD input FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdInFifNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CtrlFifoAF")
{
    field(DESC, "CTRL FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlFifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CtrlFifoNE")
{
    field(DESC, "CTRL FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlFifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch10FifoAF")
{
    field(DESC, "Chan10 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch10FifoNE")
{
    field(DESC, "Chan10 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch9:FifoAF")
{
    field(DESC, "Chan9 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:FifoNE")
{
    field(DESC, "Chan9 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(longin, "$(P)FltrdRsps")
{
    field(DESC, "Filtered responses")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FltrdRsps")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)SysrstB")
{
    field(DESC, "Sysrst_B low/high detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysrstB")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low")
    field(TWVL, "2")
    field(TWST, "high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)TxEnable")
{
    field(DESC, "TXEN low/high detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TxEnable")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low")
    field(TWVL, "2")
    field(TWST, "high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Tsync")
{
    field(DESC, "TSYNC")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Tsync")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low")
    field(TWVL, "2")
    field(TWST, "high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Tclk")
{
    field(DESC, "TCLK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Tclk")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low")
    field(TWVL, "2")
    field(TWST, "high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(longin, "$(P)HwIdCnt")
{
    field(DESC, "Hardware ID count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))HwIdCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Mlos4")
{
    field(DESC, "MLOS1")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos4")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos3")
{
    field(DESC, "MLOS2")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos3")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos2")
{
    field(DESC, "MLOS3")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos2")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos1")
{
    field(DESC, "MLOS4")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos1")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(bi, "$(P)LvdsVerf")
{
    field(DESC, "Detected LVDS verify")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsVerf")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)EepromCode")
{
    field(DESC, "EEPROM code")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromCode")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)LvdsDin6")
{
    field(DESC, "LVDS_DIN6")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin6")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin5")
{
    field(DESC, "LVDS_DIN5")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin5")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin4")
{
    field(DESC, "LVDS_DIN4")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin4")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin3")
{
    field(DESC, "LVDS_DIN3")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin3")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin2")
{
    field(DESC, "LVDS_DIN2")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin2")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin1")
{
    field(DESC, "LVDS_DIN1")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin1")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin0")
{
    field(DESC, "LVDS_DIN0")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin0")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsClk")
{
    field(DESC, "LVDS_CLK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsClk")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin14")
{
    field(DESC, "LVDS_DIN14")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin14")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin13")
{
    field(DESC, "LVDS_DIN13")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin13")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin12")
{
    field(DESC, "LVDS_DIN12")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin12")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin11")
{
    field(DESC, "LVDS_DIN11")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin11")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin10")
{
    field(DESC, "LVDS_DIN10")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin10")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin9")
{
    field(DESC, "LVDS_DIN9")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin9")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin8")
{
    field(DESC, "LVDS_DIN8")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin8")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin7")
{
    field(DESC, "LVDS_DIN7")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin7")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(longin, "$(P)LvdsPort")
{
    field(DESC, "LVDS port")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsPort")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)LvdsDin20")
{
    field(DESC, "LVDS_DIN20")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin20")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin19")
{
    field(DESC, "LVDS_DIN19")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin19")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin18")
{
    field(DESC, "LVDS_DIN18")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin18")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin17")
{
    field(DESC, "LVDS_DIN17")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin17")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin16")
{
    field(DESC, "LVDS_DIN16")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin16")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin15")
{
    field(DESC, "LVDS_DIN15")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin15")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(bi, "$(P)LvdsMonit")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS debug monitor")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsMonit")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(mbbi, "$(P)TxenCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "TXEN control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TxenCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TXEN")
    field(ONVL, "1")
    field(ONST, "TXEN")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)TsyncCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "TSYNC control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TsyncCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "from polariry")
    field(ONVL, "1")
    field(ONST, "from TSYNC width")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)TclkCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "TCLK control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TclkCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)ResetCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "Reset control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ResetCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS")
    field(THVL, "3")
    field(THST, "from optic")
}
record(bi, "$(P)VerbDisc")
{
    info(autosaveFields, "VAL")
    field(DESC, "Verbose discover")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))VerbDisc")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)VerbRsp")
{
    info(autosaveFields, "VAL")
    field(DESC, "Verbose command response")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))VerbRsp")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)Ch10:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan10 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch9:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan9 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch8:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan8 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch7:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan7 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch6:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan6 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch5:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan5 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch4:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan4 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch3:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan3 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch2:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan2 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch1:Dis")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan1 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:Dis")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)TxenMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "TXEN mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TxenMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "external")
    field(ONAM, "internal")
}
record(bi, "$(P)TsyncMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "TSYNC mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TsyncMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "external")
    field(ONAM, "internal")
}
record(bi, "$(P)TclkMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "TCLK mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TclkMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "external")
    field(ONAM, "internal")
}
record(bi, "$(P)ResetMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Reset mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ResetMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "internal")
    field(ONAM, "external")
}
