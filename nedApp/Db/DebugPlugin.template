include "BasePlugin.include"

record(bo, "$(P)ReqSend")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Send current packet")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ReqSend")
    field(ZNAM, "none")
    field(ONAM, "send")
    field(VAL,  "0")
    field(PINI, "YES")
}
record(mbbo, "$(P)ReqCmdMenu")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Select command to be sent")
    field(DTYP, "Raw Soft Channel")
    field(OUT,  "$(P)ReqCmd PP")
    field(ZRVL, "128")
    field(ZRST, "Discover")
    field(ONVL, "32")
    field(ONST, "Read version")
    field(TWVL, "35")
    field(TWST, "Read temperature")
    field(THVL, "34")
    field(THST, "Read status")
    field(FRVL, "36")
    field(FRST, "Read counters")
    field(FVVL, "33")
    field(FVST, "Read config")
    field(SXVL, "48")
    field(SXST, "Write last config")
    field(SVVL, "130")
    field(SVST, "Start acquisition")
    field(EIVL, "131")
    field(EIST, "Stop acquisition")
    field(NIVL, "129")
    field(NIST, "Reset")
    field(TEVL, "39")
    field(TEST, "Reset LVDS")
    field(ELVL, "41")
    field(ELST, "Down reset")
    field(TVVL, "40")
    field(TVST, "Down reset LVDS")
    field(PINI, "YES")
}
record(longout, "$(P)ReqCmd")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Issue raw command to module")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ReqCmd")
}
record(stringout, "$(P)ReqDest")
{
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT))ReqDest")
    field(VAL,  "0.0.0.0")
    field(PINI, "YES")
}
record(bo, "$(P)ReqIsDsp")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Flag if module is DSP")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ReqIsDsp")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(mbbi, "$(P)RspHwType")
{
    field(DESC, "Module type")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspHwType")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "not provided")
    field(ONVL, "32")
    field(ONST, "ROC")
    field(TWVL, "33")
    field(TWST, "AROC")
    field(THVL, "34")
    field(THST, "HROC")
    field(FRVL, "37")
    field(FRST, "BLNROC")
    field(FVVL, "41")
    field(FVST, "CROC")
    field(SXVL, "42")
    field(SXST, "IROC")
    field(SVVL, "43")
    field(SVST, "BIDIM ROC")
    field(EIVL, "48")
    field(NIVL, "64")
    field(NIST, "SANS ROC")
    field(EIST, "DSP")
    field(TEVL, "160")
    field(TEST, "ACPC")
    field(ELVL, "161")
    field(ELST, "ACPC FEM")
    field(TVVL, "162")
    field(TVST, "FFC")
    field(TTVL, "170")
    field(TTST, "FEM")
    field(FTVL, "45")
    field(FTST, "ADCROC")
}
record(mbbi, "$(P)RspCmd")
{
    field(DESC, "Issue command to module")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspCmd")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "128")
    field(ONST, "Discover")
    field(TWVL, "32")
    field(TWST, "Read version")
    field(THVL, "34")
    field(THST, "Read status")
    field(FRVL, "33")
    field(FRST, "Read config")
    field(FVVL, "48")
    field(FVST, "Write config")
    field(SXVL, "130")
    field(SXST, "Start acquisition")
    field(SVVL, "131")
    field(SVST, "Stop acquisition")
    field(EIVL, "66")
    field(EIST, "Bad packet")
    field(EIVL, "80")
    field(EIST, "HV send")
    field(EIVL, "81")
    field(EIST, "HV response")
    field(NIVL, "129")
    field(NIST, "Reset")
    field(TEVL, "35")
    field(TEST, "Read temperature")
    field(ELVL, "39")
    field(ELST, "Reset LVDS")
    field(TVVL, "40")
    field(TVST, "Down reset LVDS")
    field(TTVL, "36")
    field(TTST, "Read counters")
    field(FTVL, "41")
    field(FTST, "Down reset")
}
record(mbbi, "$(P)RspCmdAck")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspCmdAck")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "64")
    field(ONST, "NACK")
    field(TWVL, "65")
    field(TWST, "ACK")
}
record(bi, "$(P)RspFlag")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspFlag")
    field(SCAN, "I/O Intr")
    field(ZNAM, "")
    field(ONAM, "RSP")
}
record(stringin, "$(P)RspSrc")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspSrc")
    field(SCAN, "I/O Intr")
}
record(stringin, "$(P)RspRouter")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspRouter")
    field(SCAN, "I/O Intr")
}
record(stringin, "$(P)RspDest")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspDest")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)RspLen")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspLen")
    field(EGU,  "B")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)RspDataLen")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspDataLen")
    field(FLNK, "$(P)RspData")
    field(EGU,  "B")
    field(SCAN, "I/O Intr")
}
record(waveform, "$(P)RspData")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspData")
    field(FTVL, "CHAR")
    field(NELM, "4096")
}
record(mbbo, "$(P)ByteGrp")
{
    field(DESC, "Byte grouping mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ByteGrp")
    field(FLNK, "$(P)RspData.PROC")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZRVL, "0")
    field(ZRST, "2 bytes swapped")
    field(ONVL, "1")
    field(ONST, "2 bytes")
    field(TWVL, "2")
    field(TWST, "4 bytes")
}
record(mbbo, "$(P)Channel")
{
    field(DESC, "Select channel")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Channel")
    field(PINI, "YES")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "Global")
    field(ONVL, "1")
    field(ONST, "Channel 1")
    field(TWVL, "2")
    field(TWST, "Channel 2")
    field(THVL, "3")
    field(THST, "Channel 3")
    field(FRVL, "4")
    field(FRST, "Channel 4")
    field(FVVL, "5")
    field(FVST, "Channel 5")
    field(SXVL, "6")
    field(SXST, "Channel 6")
    field(SVVL, "7")
    field(SVST, "Channel 7")
    field(EIVL, "8")
    field(EIST, "Channel 8")
}
record(longout, "$(P)RawPkt0")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt0")
}
record(longout, "$(P)RawPkt1")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt1")
}
record(longout, "$(P)RawPkt2")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt2")
}
record(longout, "$(P)RawPkt3")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt3")
}
record(longout, "$(P)RawPkt4")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt4")
}
record(longout, "$(P)RawPkt5")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt5")
}
record(longout, "$(P)RawPkt6")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt6")
}
record(longout, "$(P)RawPkt7")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt7")
}
record(longout, "$(P)RawPkt8")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt8")
}
record(longout, "$(P)RawPkt9")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt9")
}
record(longout, "$(P)RawPkt10")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt10")
}
record(longout, "$(P)RawPkt11")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt11")
}
record(longout, "$(P)RawPkt12")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt12")
}
record(longout, "$(P)RawPkt13")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt13")
}
record(longout, "$(P)RawPkt14")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt14")
}
record(longout, "$(P)RawPkt15")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt15")
}
record(longout, "$(P)RawPkt16")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt16")
}
record(longout, "$(P)RawPkt17")
{
    info(autosaveFields, "VAL")
    info(asyn:READBACK, "1")
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(OUT,  "@asyn($(PORT))RawPkt17")
}
