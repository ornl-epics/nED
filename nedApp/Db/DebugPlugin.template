include "BasePlugin.include"

record(mbbo, "$(P)ReqCmd")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Issue command to module")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ReqCmd")
    field(ZRVL, "128")
    field(ZRST, "Discover")
    field(ONVL, "32")
    field(ONST, "Read version")
    field(TWVL, "34")
    field(TWST, "Read status")
    field(THVL, "33")
    field(THST, "Read config")
    field(FRVL, "130")
    field(FRST, "Start acquisition")
    field(FVVL, "131")
    field(FVST, "Stop acquisition")
    field(SXVL, "129")
    field(SXST, "Reset")
    field(SVVL, "35")
    field(SVST, "Read temperature")
    field(EIVL, "39")
    field(EIST, "LVDS verify")
    field(NIVL, "40")
    field(NIST, "LVDS powerdown")
    field(TEVL, "36")
    field(TEST, "Read counters")
    field(ELVL, "48")
    field(ELST, "Write last config")
    field(TVVL, "144")
    field(TVST, "Request pulse")
    field(TTVL, "145")
    field(TTST, "Clear pulse")
}
record(stringout, "$(P)ReqDest")
{
    field(ASG,  "BEAMLINE")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT))ReqDest")
    field(VAL,  "0.0.0.0")
    field(PINI, "YES")
}
record(bo, "$(P)ReqIsDsp")
{
    field(ASG,  "BEAMLINE")
    field(DESC, "Flag if module is DSP")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ReqIsDsp")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(mbbi, "$(P)RspHwType")
{
    field(DESC, "Module type")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspHwType")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "not provided")
    field(ONVL, "32")
    field(ONST, "ROC")
    field(TWVL, "33")
    field(TWST, "AROC")
    field(THVL, "34")
    field(THST, "HROC")
    field(FRVL, "37")
    field(FRST, "BLNROC")
    field(FVVL, "41")
    field(FVST, "CROC")
    field(SXVL, "42")
    field(SXST, "IROC")
    field(SVVL, "43")
    field(SVST, "BIDIM ROC")
    field(EIVL, "48")
    field(NIVL, "64")
    field(NIST, "SANS ROC")
    field(EIST, "DSP")
    field(TEVL, "160")
    field(TEST, "ACPC")
    field(ELVL, "161")
    field(ELST, "ACPC FEM")
    field(TVVL, "162")
    field(TVST, "FFC")
    field(TTVL, "170")
    field(TTST, "FEM")
    field(FTVL, "45")
    field(FTST, "ADCROC")
}
record(mbbi, "$(P)RspCmd")
{
    field(DESC, "Issue command to module")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspCmd")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "128")
    field(ONST, "Discover")
    field(TWVL, "32")
    field(TWST, "Read version")
    field(THVL, "34")
    field(THST, "Read status")
    field(FRVL, "33")
    field(FRST, "Read config")
    field(FVVL, "48")
    field(FVST, "Write config")
    field(SXVL, "130")
    field(SXST, "Start acquisition")
    field(SVVL, "131")
    field(SVST, "Stop acquisition")
    field(EIVL, "66")
    field(EIST, "Bad packet")
    field(EIVL, "80")
    field(EIST, "HV send")
    field(EIVL, "81")
    field(EIST, "HV response")
    field(NIVL, "129")
    field(NIST, "Reset")
    field(TEVL, "35")
    field(TEST, "Read temperature")
    field(ELVL, "39")
    field(ELST, "LVDS verify")
    field(TVVL, "40")
    field(TVST, "LVDS powerdown")
    field(TTST, "Read counters")
    field(TTVL, "36")
    field(FTVL, "144")
    field(FTST, "Request pulse")
    field(FFVL, "145")
    field(FFST, "Clear pulse")
}
record(mbbi, "$(P)RspCmdAck")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspCmdAck")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "64")
    field(ONST, "NACK")
    field(TWVL, "65")
    field(TWST, "ACK")
}
record(stringin, "$(P)RspSrc")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspSrc")
    field(SCAN, "I/O Intr")
}
record(stringin, "$(P)RspRouter")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspRouter")
    field(SCAN, "I/O Intr")
}
record(stringin, "$(P)RspDest")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspDest")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)RspLen")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspLen")
    field(EGU,  "B")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)RspDataLen")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RspDataLen")
    field(FLNK, "$(P)RspData")
    field(EGU,  "B")
    field(SCAN, "I/O Intr")
}
record(waveform, "$(P)RspData")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))RspData")
    field(FTVL, "CHAR")
    field(NELM, "4096")
}
record(mbbo, "$(P)ByteGrp")
{
    field(DESC, "Byte grouping mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))ByteGrp")
    field(FLNK, "$(P)RspData.PROC")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZRVL, "0")
    field(ZRST, "2 bytes swapped")
    field(ONVL, "1")
    field(ONST, "2 bytes")
    field(TWVL, "2")
    field(TWST, "4 bytes")
}
