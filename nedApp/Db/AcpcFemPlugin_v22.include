record(bi, "$(P)Ch2:ErrFifoFull")
{
    field(DESC, "Chan2 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:ErrPreStart")
{
    field(DESC, "Chan2 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrNoStart")
{
    field(DESC, "Chan2 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrTimeout")
{
    field(DESC, "Chan2 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch2:ErrLength")
{
    field(DESC, "Chan2 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrShort")
{
    field(DESC, "Chan2 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrType")
{
    field(DESC, "Chan2 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2:ErrParity")
{
    field(DESC, "Chan2 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrFifoFull")
{
    field(DESC, "Chan1 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:ErrPreStart")
{
    field(DESC, "Chan1 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrNoStart")
{
    field(DESC, "Chan1 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrTimeout")
{
    field(DESC, "Chan1 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch1:ErrLength")
{
    field(DESC, "Chan1 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrShort")
{
    field(DESC, "Chan1 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrType")
{
    field(DESC, "Chan1 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1:ErrParity")
{
    field(DESC, "Chan1 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrFifoFull")
{
    field(DESC, "Chan4 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:ErrPreStart")
{
    field(DESC, "Chan4 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrNoStart")
{
    field(DESC, "Chan4 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrTimeout")
{
    field(DESC, "Chan4 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch4:ErrLength")
{
    field(DESC, "Chan4 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrShort")
{
    field(DESC, "Chan4 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrType")
{
    field(DESC, "Chan4 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4:ErrParity")
{
    field(DESC, "Chan4 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrFifoFull")
{
    field(DESC, "Chan3 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:ErrPreStart")
{
    field(DESC, "Chan3 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrNoStart")
{
    field(DESC, "Chan3 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrTimeout")
{
    field(DESC, "Chan3 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch3:ErrLength")
{
    field(DESC, "Chan3 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrShort")
{
    field(DESC, "Chan3 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrType")
{
    field(DESC, "Chan3 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3:ErrParity")
{
    field(DESC, "Chan3 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrFifoFull")
{
    field(DESC, "Chan6 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:ErrPreStart")
{
    field(DESC, "Chan6 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrNoStart")
{
    field(DESC, "Chan6 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrTimeout")
{
    field(DESC, "Chan6 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch6:ErrLength")
{
    field(DESC, "Chan6 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrShort")
{
    field(DESC, "Chan6 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrType")
{
    field(DESC, "Chan6 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6:ErrParity")
{
    field(DESC, "Chan6 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrFifoFull")
{
    field(DESC, "Chan5 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:ErrPreStart")
{
    field(DESC, "Chan5 got START during pack")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrNoStart")
{
    field(DESC, "Chan5 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrTimeout")
{
    field(DESC, "Chan5 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch5:ErrLength")
{
    field(DESC, "Chan5 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrShort")
{
    field(DESC, "Chan5 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrType")
{
    field(DESC, "Chan5 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5:ErrParity")
{
    field(DESC, "Chan5 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrFifoFull")
{
    field(DESC, "Chan8 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:ErrPreStart")
{
    field(DESC, "Chan8 got START during packt")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrNoStart")
{
    field(DESC, "Chan8 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrTimeout")
{
    field(DESC, "Chan8 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch8:ErrLength")
{
    field(DESC, "Chan8 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrShort")
{
    field(DESC, "Chan8 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrType")
{
    field(DESC, "Chan8 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:ErrParity")
{
    field(DESC, "Chan8 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrFifoFull")
{
    field(DESC, "Chan7 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:ErrPreStart")
{
    field(DESC, "Chan7 got START during pack")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrNoStart")
{
    field(DESC, "Chan7 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrTimeout")
{
    field(DESC, "Chan7 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch7:ErrLength")
{
    field(DESC, "Chan7 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrShort")
{
    field(DESC, "Chan7 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrType")
{
    field(DESC, "Chan7 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7:ErrParity")
{
    field(DESC, "Chan7 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrFifoFull")
{
    field(DESC, "CTRL FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ctr:ErrPreStart")
{
    field(DESC, "CTRL got START during packe")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrNoStart")
{
    field(DESC, "CTRL got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrTimeout")
{
    field(DESC, "CTRL got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ctr:ErrLength")
{
    field(DESC, "CTRL long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrShort")
{
    field(DESC, "CTRL short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrType")
{
    field(DESC, "CTRL DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ctr:ErrParity")
{
    field(DESC, "CTRL parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrFifoFull")
{
    field(DESC, "Chan9 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:ErrPreStart")
{
    field(DESC, "Chan9 got START during pack")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrPreStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrNoStart")
{
    field(DESC, "Chan9 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrTimeout")
{
    field(DESC, "Chan9 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch9:ErrLength")
{
    field(DESC, "Chan9 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrShort")
{
    field(DESC, "Chan9 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrType")
{
    field(DESC, "Chan9 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrType")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9:ErrParity")
{
    field(DESC, "Chan9 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:ErrParity")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(longin, "$(P)CntFilterNack")
{
    field(DESC, "Filtered NACKs")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntFilterNack")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)FilterNack")
{
    field(DESC, "Filtered NACK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FilterNack")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrEeprom")
{
    field(DESC, "EEPROM error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrEeprom")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrNoHw")
{
    field(DESC, "Missing hardware")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrNoHw")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not missing")
    field(ONAM, "missing")
}
record(bi, "$(P)ErrUnconfig")
{
    field(DESC, "Unconfigured")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrUnconfig")
    field(SCAN, "I/O Intr")
    field(ZNAM, "configured")
    field(ONAM, "not confiured")
}
record(bi, "$(P)ErrProgram")
{
    field(DESC, "Programming error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrProgram")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrCmdLength")
{
    field(DESC, "Command length error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrCmdLength")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)ErrCmdBad")
{
    field(DESC, "Unknown command")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrCmdBad")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8:GotCmd")
{
    field(DESC, "Chan8 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:GotData")
{
    field(DESC, "Chan8 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:GotCmd")
{
    field(DESC, "Chan7 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:GotData")
{
    field(DESC, "Chan7 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:GotCmd")
{
    field(DESC, "Chan6 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:GotData")
{
    field(DESC, "Chan6 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:GotCmd")
{
    field(DESC, "Chan5 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:GotData")
{
    field(DESC, "Chan5 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:GotCmd")
{
    field(DESC, "Chan4 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:GotData")
{
    field(DESC, "Chan4 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:GotCmd")
{
    field(DESC, "Chan3 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:GotData")
{
    field(DESC, "Chan3 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:GotCmd")
{
    field(DESC, "Chan2 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:GotData")
{
    field(DESC, "Chan2 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:GotCmd")
{
    field(DESC, "Chan1 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:GotData")
{
    field(DESC, "Chan1 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)CntFilterAck")
{
    field(DESC, "Filtered ACKS")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntFilterAck")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)OutputMode")
{
    field(DESC, "Data mode TODO verify values")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))OutputMode")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "normal mode")
    field(ONVL, "1")
    field(ONST, "off")
    field(TWVL, "2")
    field(TWST, "raw mode")
    field(THVL, "3")
    field(THST, "verbose mode")
}
record(bi, "$(P)Acquiring")
{
    field(DESC, "Acquiring data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Acquiring")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not acquiring")
    field(ONAM, "acquiring")
}
record(bi, "$(P)FoundHw")
{
    field(DESC, "Found new hardware")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FoundHw")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ctr:GotCmd")
{
    field(DESC, "CTRL got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ctr:FifoHasData")
{
    field(DESC, "CTRL got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ctr:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:GotCmd")
{
    field(DESC, "Chan9 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:GotData")
{
    field(DESC, "Chan9 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:FifoAlmostFull")
{
    field(DESC, "Chan8 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8:FifoHasData")
{
    field(DESC, "Chan8 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch7:FifoAlmostFull")
{
    field(DESC, "Chan7 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7:FifoHasData")
{
    field(DESC, "Chan7 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch6:FifoAlmostFull")
{
    field(DESC, "Chan6 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6:FifoHasData")
{
    field(DESC, "Chan6 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch5:FifoAlmostFull")
{
    field(DESC, "Chan5 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5:FifoHasData")
{
    field(DESC, "Chan5 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch4:FifoAlmostFull")
{
    field(DESC, "Chan4 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4:FifoHasData")
{
    field(DESC, "Chan4 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch3:FifoAlmostFull")
{
    field(DESC, "Chan3 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3:FifoHasData")
{
    field(DESC, "Chan3 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch2:FifoAlmostFull")
{
    field(DESC, "Chan2 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2:FifoHasData")
{
    field(DESC, "Chan2 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch1:FifoAlmostFull")
{
    field(DESC, "Chan1 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1:FifoHasData")
{
    field(DESC, "Chan1 FIFO not empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdFifoAlmostFull")
{
    field(DESC, "CMD FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdFifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CmdFifoHasData")
{
    field(DESC, "CMD FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdFifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdInFifoAlmostFull")
{
    field(DESC, "CMD input FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdInFifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CmdInFifoHasData")
{
    field(DESC, "CMD input FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdInFifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ibc2Missing")
{
    field(DESC, "Good: IBC2 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc2Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc1Missing")
{
    field(DESC, "Good: IBC1 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc1Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)DffAlmostFull")
{
    field(DESC, "DFF almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))DffAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)DffHasData")
{
    field(DESC, "DFF has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))DffHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CtrlFifoAlmostFull")
{
    field(DESC, "CTRL FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlFifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CtrlFifoHasData")
{
    field(DESC, "CTRL FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlFifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch9:FifoAlmostFull")
{
    field(DESC, "Chan9 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:FifoAlmostFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9:FifoHasData")
{
    field(DESC, "Chan9 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9:FifoHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(longin, "$(P)CntFilterRsp")
{
    field(DESC, "Filtered responses")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntFilterRsp")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)SysrstB")
{
    field(DESC, "Sysrst_B low/high detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysrstB")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low")
    field(TWVL, "2")
    field(TWST, "high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)TxEnable")
{
    field(DESC, "TXEN low/high detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TxEnable")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low")
    field(TWVL, "2")
    field(TWST, "high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Tsync")
{
    field(DESC, "TSYNC")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Tsync")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low - not ok")
    field(TWVL, "2")
    field(TWST, "high - not ok")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Tclk")
{
    field(DESC, "TCLK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Tclk")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low - not ok")
    field(TWVL, "2")
    field(TWST, "high - not ok")
    field(THVL, "3")
    field(THST, "low and high")
}
record(longin, "$(P)CntHwId")
{
    field(DESC, "Hardware ID count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CntHwId")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Mlos4")
{
    field(DESC, "MLOS1")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos4")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos3")
{
    field(DESC, "MLOS2")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos3")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos2")
{
    field(DESC, "MLOS3")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos2")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos1")
{
    field(DESC, "MLOS4")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos1")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(bi, "$(P)Ibc5:TimeOverflow")
{
    field(DESC, "Bad: IBC5 time overflow")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc5:TimeOverflow")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc4:TimeOverflow")
{
    field(DESC, "Bad: IBC4 time overflow")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc4:TimeOverflow")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc3:TimeOverflow")
{
    field(DESC, "Bad: IBC3 time overflow")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc3:TimeOverflow")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc2:TimeOverflow")
{
    field(DESC, "Bad: IBC2 time overflow")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc2:TimeOverflow")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc1:TimeOverflow")
{
    field(DESC, "Bad: IBC1 time overflow")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc1:TimeOverflow")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc9:Missing")
{
    field(DESC, "Good: IBC9 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc9:Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc8:Missing")
{
    field(DESC, "Good: IBC8 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc8:Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc7:Missing")
{
    field(DESC, "Good: IBC7 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc7:Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc6:Missing")
{
    field(DESC, "Good: IBC6 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc6:Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc5:Missing")
{
    field(DESC, "Good: IBC5 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc5:Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc4:Missing")
{
    field(DESC, "Good: IBC4 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc4:Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ibc3:Missing")
{
    field(DESC, "Good: IBC3 missing")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ibc3:Missing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)LvdsVerify")
{
    field(DESC, "Detected LVDS verify")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsVerify")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)EepromCode")
{
    field(DESC, "EEPROM code")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromCode")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)ErrDataHw")
{
    field(DESC, "Data packet hardware error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrDataHw")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrMaskCh")
{
    field(DESC, "Data packet changing mask")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrMaskCh")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrMaskCh1")
{
    field(DESC, "Data packet mask change")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrMaskCh1")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrNoIbc")
{
    field(DESC, "Data packet missing IBCs")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrNoIbc")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrBadEvent")
{
    field(DESC, "Data packet bad event")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrBadEvent")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrBadIbc")
{
    field(DESC, "Data packet bad IBC")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrBadIbc")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrBadTime")
{
    field(DESC, "Data packet bad timestamp")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrBadTime")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)ErrTimeout")
{
    field(DESC, "Data packet timeout")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(mbbi, "$(P)ErrBadData")
{
    field(DESC, "Bad data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ErrBadData")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "no")
    field(ONVL, "1")
    field(ONST, "yes")
}
